Content-Type: multipart/related; start=<op.mhtml.1344517986017.7c260809665ee989@192.168.100.80>; boundary=----------a1OFvq6oUVR8Luo70plCnW
Content-Location: http://tutorial.symblog.co.uk/docs/testing-unit-and-functional-phpunit.html
Subject: =?utf-8?Q?[Part=206]=20-=20Testing:=20Unit=20and=20Functional=20with=20PHPUnit=20=E2=80=94=20symblog=20-=20A=20Symfony2=20Tutorial?=
MIME-Version: 1.0

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=testing-unit-and-functional-phpunit.html
Content-Type: text/html; charset=UTF-8; name=testing-unit-and-functional-phpunit.html
Content-ID: <op.mhtml.1344517986017.7c260809665ee989@192.168.100.80>
Content-Location: http://tutorial.symblog.co.uk/docs/testing-unit-and-functional-phpunit.html
Content-Transfer-Encoding: 8bit


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>[Part 6] - Testing: Unit and Functional with PHPUnit &mdash; symblog - A Symfony2 Tutorial</title>
    
    <link rel="stylesheet" href="../_static/haiku.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/print.css" type="text/css" />
    
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../',
        VERSION:     '1',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="../_static/jquery.js"></script>
    <script type="text/javascript" src="../_static/underscore.js"></script>
    <script type="text/javascript" src="../_static/doctools.js"></script>
    <script type="text/javascript" src="../_static/theme_extras.js"></script>
    <link rel="top" title="symblog - A Symfony2 Tutorial" href="../index.html" />
    <link rel="prev" title="[Part 5] - Customising the view: Twig extensions, The sidebar and Assetic" href="customising-the-view-more-with-twig.html" />
<!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
<link href='http://fonts.googleapis.com/css?family=Irish+Grover' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=La+Belle+Aurore' rel='stylesheet' type='text/css'>
<style type="text/css">
    #header {line-height: 1;font-family: Arial, Helvetica, sans-serif;font-size: 12px; width: 100%; height: 100%; color: #000; font-size: 14px; }

    html { background: none; }
    a { text-decoration: none !important; color: #F48A00 !important; font-weight: normal !important }

    h1, h2, h3, h4, h5, h6 { color: #000 }

    #header a:link { font-weight: normal !important; }

    #header { border-bottom: 1px solid #ccc; margin-bottom: 20px; }
    #header .top { border-bottom: 1px solid #ccc; margin-bottom: 10px; }
    #header ul.languages { list-style: none; text-align: right; margin-bottom: 0; display: inline-block; }
    #header .languages li { display: inline }
    #header .languages li a { display: inline-block; padding: 10px 10px 10px 25px; border-right: 1px solid #ccc; background-repeat: no-repeat; background-position: 5px center  }
    #header .en { background-image: url('/_static/images/icons/languages/gb.png'); }
    #header .es { background-image: url('/_static/images/icons/languages/es.png'); }
    #header .fr { background-image: url('/_static/images/icons/languages/fr.png'); }
    #header .jp { background-image: url('/_static/images/icons/languages/jp.png'); }
    #header ul.navigation { list-style: none; text-align: right; margin-bottom: 0; display: inline-block; float: right; }
    #header .navigation li { display: inline }
    #header .navigation li a { display: inline-block; padding: 10px 15px; border-left: 1px solid #ccc; }
    #header h2 { font-family: 'Irish Grover', cursive; font-size: 92px; text-align: center; line-height: 110px; border-bottom: none; margin: 0px; font-weight: normal; }
    #header h2 a { color: #000 !important }
    #header h3 { text-align: center; font-family: 'La Belle Aurore', cursive; font-size: 24px; margin: 0; margin-bottom: 20px; font-weight: normal;  font-weight: normal;}

    .social { float: right;  }
    .social div { display: inline-block }
    .social .google div { width: 80px !important; }

    div.content { font-size: 0.9em; margin: 10px 20px 20px; }

    .note, .tip, .warning {
        border: 1px solid !important;
        margin: 10px 0px !important;
        padding:15px 10px 15px 70px !important;
        background-repeat: no-repeat !important;
        background-position: 10px center !important;
    }
    .note {
        border-color: #00529B !important;
        background-color: #DBF3FF !important;
        background-image: url('../_static/images/icons/note.png') !important;
    }
    .tip {
        border-color: #4F8A10 !important;
        background-color: #E5F2D0 !important;
        background-image:url('../_static/images/icons/tip.png') !important;
        }
    .warning {
        border-color: #9F6000 !important;
        background-color: #FFF7DB !important;
        background-image: url('../_static/images/icons/warning.png') !important;
    }

    a.jobs {
        display:block;
        background: #F48A00;
        color: #fff !important;
        padding: 5px;
        font-size: 14px;
        text-align: center;
        margin-bottom: 20px;
        text-decoration: none;
    }

</style>

  </head>
  <body>

    <a href="https://github.com/dsyph3r/symblog-docs">
        <img style="position: absolute; top: 0; left: 0; border: 0;" src="https://a248.e.akamai.net/assets.github.com/img/6429057dfef9e98189338d22e7f6646c6694f032/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub">
    </a>

    <header id="header">
        <div class="top">
            <nav>
                <ul class="languages">
                    <li><a href="http://tutorial.symblog.co.uk" class="en">EN</a></li>
                    <li><a href="http://symblog.site90.net/" class="es">ES</a></li>
                    <li><a href="http://keiruaprod.fr/symblog-fr/" class="fr">FR</a></li>
		    <li><a href="http://symblog.ganchiku.com/" class="jp">JP</a></li>
                </ul>
                <ul class="navigation">
                    <li><a href="/">Home</a></li>
                    <li><a href="http://symblog.co.uk">Demo</a></li>
                    <li><a href="https://github.com/dsyph3r/symblog">Source</a></li>
                </ul>
            </nav>
        </div>

        <hgroup>
            <h2><a href="/">symblog</a></h2>
            <h3><a href="/">creating a blog in Symfony2</a></h3>
        </hgroup>
    </header>

    <a class="jobs" href="http://www.deskpro.com/jobs">Looking for a PHP Development job using Symfony2 to build a cutting edge web application - check out DeskPRO Jobs</a>

  <div class="topnav">
  
        <p>
        «&#160;&#160;<a href="customising-the-view-more-with-twig.html">[Part 5] - Customising the view: Twig extensions, The sidebar and Assetic</a>
        &#160;&#160;::&#160;&#160;
        <a class="uplink" href="../index.html">Contents</a>
        </p>

  </div>
  <div class="content">
    <div class="social">
        <!-- Place this tag where you want the +1 button to render -->
        <div class="google">
            <g:plusone></g:plusone>
        </div>

        <a href="http://twitter.com/share" class="twitter-share-button" data-text="Learning #symfony2 with the #symblog blogging tutorial #php" data-count="horizontal" data-via="dsyph3r">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>
    </div>

    
    
  <div class="section" id="part-6-testing-unit-and-functional-with-phpunit">
<h1>[Part 6] - Testing: Unit and Functional with PHPUnit<a class="headerlink" href="#part-6-testing-unit-and-functional-with-phpunit" title="Permalink to this headline">¶</a></h1>
<div class="section" id="overview">
<h2>Overview<a class="headerlink" href="#overview" title="Permalink to this headline">¶</a></h2>
<p>So far we have explored a good amount of ground looking at a number of core
concepts with regards to Symfony2 development. Before we continue adding
features it is time to introduce testing. We will look at how to test individual
functions with unit testing and how to ensure multiple components are working
correctly together with functional testing. The PHP testing library <a class="reference external" href="http://www.phpunit.de/manual/current/en/">PHPUnit</a> will be covered as this library is
at the centre of the Symfony2 tests. As testing is a large topic it will also be
covered in later chapters. By the end of this chapter you will have written a
number of tests covering both unit and functional testing. You will have simulated
browser requests, populated forms with data, and checked responses to ensure
the website pages are outputting correctly. You will also have checked how much coverage
your tests have on your applications code base.</p>
</div>
<div class="section" id="testing-in-symfony2">
<h2>Testing in Symfony2<a class="headerlink" href="#testing-in-symfony2" title="Permalink to this headline">¶</a></h2>
<p><a class="reference external" href="http://www.phpunit.de/manual/current/en/">PHPUnit</a> has become the &#8220;de facto
standard&#8221; for writing tests in PHP, so learning it will benefit you in all your
PHP projects. Lets also not forget that most of the topics covered in this
chapter are language independent and so can be transferred to other languages
you.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">If you are planning on writing your own Open Source Symfony2 bundles,
you are much more likely to receive interest if your bundle is well
tested (and documented). Have a look at the existing Symfony2 bundles available
at <a class="reference external" href="http://symfony2bundles.org/">Symfony2Bundles</a>.</p>
</div>
<div class="section" id="unit-testing">
<h3>Unit Testing<a class="headerlink" href="#unit-testing" title="Permalink to this headline">¶</a></h3>
<p>Unit testing is concerned with ensuring individual units of code function
correctly when used in isolation. In an Object Oriented code base like Symfony2,
a unit would be a class and its methods. For example, we could write tests for
the <tt class="docutils literal"><span class="pre">Blog</span></tt> and <tt class="docutils literal"><span class="pre">Comment</span></tt> Entity classes. When writing unit tests, the test
cases should be written independently of other test cases, i.e., the result of test
case B should not depend on the result of test case A. It is useful when unit testing
to be able to create mock objects that allow you to easily unit test
functions that have external dependencies. Mocking allows you to simulate a function
call instead of actually executing it. An example of this
would be unit testing a class that wraps up an external API. The API class may
use a transport layer for communicating with the external API. We could mock the
request method of the transport layer to return the results we specify, rather
than actually hitting the external API. Unit testing does not test that the
components of an application function correctly together, this is covered by the
next topic, functional testing.</p>
</div>
<div class="section" id="functional-testing">
<h3>Functional Testing<a class="headerlink" href="#functional-testing" title="Permalink to this headline">¶</a></h3>
<p>Functional testing checks the integration of different components within the
application, such as routing, controllers, and views. Functional tests are
similar to the manual tests you would run yourself in the browser such as requesting
the homepage, clicking a blog link and checking the correct blog is shown.
Functional testing provides you with the ability to automate this process.
Symfony2 comes complete with a number of useful classes that assist in functional testing
including a <tt class="docutils literal"><span class="pre">Client</span></tt> that is able to requests pages and submit forms and DOM <tt class="docutils literal"><span class="pre">Crawler</span></tt>
that we can use to traverse the <tt class="docutils literal"><span class="pre">Response</span></tt> from the client.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">There are a number of software development process that are driven by testing.
These include processes such as Test Driven Development (TDD) and Behavioral
Driven Development (BDD). While these are out side the scope of this tutorial
you should be aware of the library written by <a class="reference external" href="https://twitter.com/#!/everzet">everzet</a> that facilitates BDD called <a class="reference external" href="http://behat.org/">Behat</a>. There is also a Symfony2 <a class="reference external" href="http://docs.behat.org/bundle/index.html">BehatBundle</a> available to easily integrate Behat
into your Symfony2 project.</p>
</div>
</div>
</div>
<div class="section" id="id2">
<h2>PHPUnit<a class="headerlink" href="#id2" title="Permalink to this headline">¶</a></h2>
<p>As stated above, Symfony2 tests are written using PHPUnit. You will need to
install PHPUnit in order to run these tests and the tests from this chapter.
For detailed <a class="reference external" href="http://www.phpunit.de/manual/current/en/installation.html">installation instructions</a> refer to the
official documentation on the PHPUnit website. To run the tests in Symfony2 you
need to install PHPUnit 3.5.11 or later. PHPUnit is a very large testing library, so references
to the official documentation will be made where additional reading can be
found.</p>
<div class="section" id="assertions">
<h3>Assertions<a class="headerlink" href="#assertions" title="Permalink to this headline">¶</a></h3>
<p>Writing tests is concerened with checking that the actual test result is equal
to the expected test result. There are a number of assertion methods available
in PHPUnit to assist you with this task. Some of the common assertion
methods you will use are listed below.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// Check 1 === 1 is true</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="mi">1</span> <span class="o">===</span> <span class="mi">1</span><span class="p">);</span>

<span class="c1">// Check 1 === 2 is false</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertFalse</span><span class="p">(</span><span class="mi">1</span> <span class="o">===</span> <span class="mi">2</span><span class="p">);</span>

<span class="c1">// Check &#39;Hello&#39; equals &#39;Hello&#39;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;Hello&#39;</span><span class="p">,</span> <span class="s1">&#39;Hello&#39;</span><span class="p">);</span>

<span class="c1">// Check array has key &#39;language&#39;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertArrayHasKey</span><span class="p">(</span><span class="s1">&#39;language&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;language&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;php&#39;</span><span class="p">,</span> <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;1024&#39;</span><span class="p">));</span>

<span class="c1">// Check array contains value &#39;php&#39;</span>
<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertContains</span><span class="p">(</span><span class="s1">&#39;php&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span><span class="s1">&#39;php&#39;</span><span class="p">,</span> <span class="s1">&#39;ruby&#39;</span><span class="p">,</span> <span class="s1">&#39;c++&#39;</span><span class="p">,</span> <span class="s1">&#39;JavaScript&#39;</span><span class="p">));</span>
</pre></div>
</div>
<p>A full list of
<a class="reference external" href="http://www.phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.assertions">assertions</a>
is available in the PHPUnit documentation.</p>
</div>
</div>
<div class="section" id="running-symfony2-tests">
<h2>Running Symfony2 Tests<a class="headerlink" href="#running-symfony2-tests" title="Permalink to this headline">¶</a></h2>
<p>Before we begin writing some tests, lets look at how we run tests in Symfony2. PHPUnit
can be set to execute using a configuration file. In our Symfony2 project this
file is located at <tt class="docutils literal"><span class="pre">app/phpunit.xml.dist</span></tt>. As this file is suffixed with
<tt class="docutils literal"><span class="pre">.dist</span></tt>, you need to copy its contents into a file called <tt class="docutils literal"><span class="pre">app/phpunit.xml</span></tt>.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">If you are using a VCS such as Git, you should add the new <tt class="docutils literal"><span class="pre">app/phpunit.xml</span></tt>
file to the VCS ignore list.</p>
</div>
<p>If you have a look at the contents of the PHPUnit configuration file you will see the
following.</p>
<div class="highlight-xml"><div class="highlight"><pre><span class="c">&lt;!-- app/phpunit.xml --&gt;</span>

<span class="nt">&lt;testsuites&gt;</span>
    <span class="nt">&lt;testsuite</span> <span class="na">name=</span><span class="s">&quot;Project Test Suite&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;directory&gt;</span>../src/*/*Bundle/Tests<span class="nt">&lt;/directory&gt;</span>
        <span class="nt">&lt;directory&gt;</span>../src/*/Bundle/*Bundle/Tests<span class="nt">&lt;/directory&gt;</span>
    <span class="nt">&lt;/testsuite&gt;</span>
<span class="nt">&lt;/testsuites&gt;</span>
</pre></div>
</div>
<p>The following settings configure some directories that are part of our test suite.
When running PHPUnit it will look in the above directories for tests to run. You
can also pass additional command line arguments to PHPUnit to run tests in
specific directories, instead of the test suite tests. You will see how to
achieve this later.</p>
<p>You will also notice the configuration is specifying the bootstrap file located at
<tt class="docutils literal"><span class="pre">app/bootstrap.php.cache</span></tt>. This file is used by PHPUnit to get the testing environment
setup.</p>
<div class="highlight-xml"><div class="highlight"><pre><span class="c">&lt;!-- app/phpunit.xml --&gt;</span>

<span class="nt">&lt;phpunit</span>
    <span class="na">bootstrap                   =</span> <span class="s">&quot;bootstrap.php.cache&quot;</span> <span class="nt">&gt;</span>
</pre></div>
</div>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">For more information regarding configuring PHPUnit with an XML file
see the
<a class="reference external" href="http://www.phpunit.de/manual/current/en/organizing-tests.html#organizing-tests.xml-configuration">PHPUnit documentation</a>.</p>
</div>
</div>
<div class="section" id="running-the-current-tests">
<h2>Running the Current Tests<a class="headerlink" href="#running-the-current-tests" title="Permalink to this headline">¶</a></h2>
<p>As we used one of the Symfony2 generator tasks to create the
<tt class="docutils literal"><span class="pre">BloggerBlogBundle</span></tt> back in chapter 1, it also created a controller test for
the <tt class="docutils literal"><span class="pre">DefaultController</span></tt> class. We can execute this test by running the
following command from the root directory of the project. The <tt class="docutils literal"><span class="pre">-c</span></tt> option
specifies that PHPUnit should load its configuration from the <tt class="docutils literal"><span class="pre">app</span></tt> directory.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app
</pre></div>
</div>
<p>Once the testing has completed you should be notified that the tests failed.
If you look at the <tt class="docutils literal"><span class="pre">DefaultControllerTest</span></tt> class located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/DefaultControllerTest.php</span></tt> you will see
the following content.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Controller/DefaultControllerTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Test\WebTestCase</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">DefaultControllerTest</span> <span class="k">extends</span> <span class="nx">WebTestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testIndex</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/hello/Fabien&#39;</span><span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;html:contains(&quot;Hello Fabien&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This is a functional test for the <tt class="docutils literal"><span class="pre">DefaultController</span></tt> class that Symfony2 generated.
If you remember back to chapter 1, this Controller had an action that handled requests
to <tt class="docutils literal"><span class="pre">/hello/{name}</span></tt>. The fact that we removed this controller is why the above test
is failing. Try going to the URL <tt class="docutils literal"><span class="pre">http://symblog.dev/app_dev.php/hello/Fabien</span></tt> in
your browser. You should be informed that the route could not be found. As the
above test makes a request to the same URL, it will also get the same response,
hence why the test fails. Functional testing is a large part of this chapter and
will be covered in detail later.</p>
<p>As the <tt class="docutils literal"><span class="pre">DefaultController</span></tt> class has been removed, you can also remove this test
class. Delete the <tt class="docutils literal"><span class="pre">DefaultControllerTest</span></tt> class located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/DefaultControllerTest.php</span></tt>.</p>
</div>
<div class="section" id="id4">
<h2>Unit Testing<a class="headerlink" href="#id4" title="Permalink to this headline">¶</a></h2>
<p>As explained previously, unit testing is concerned with testing individual units
of your application in isolation. When writing unit tests it is recommend that you
replicate the Bundle structure under the Tests folder. For example, if you wanted
to test the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity class located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Entity/Blog.php</span></tt> the test file would reside at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span></tt>. An example folder layout
would be as follows.</p>
<div class="highlight-text"><div class="highlight"><pre>src/Blogger/BlogBundle/
                Entity/
                    Blog.php
                    Comment.php
                Controller/
                    PageController.php
                Twig/
                    Extensions/
                        BloggerBlogExtension.php
                Tests/
                    Entity/
                        BlogTest.php
                        CommentTest.php
                    Controller/
                        PageControllerTest.php
                    Twig/
                        Extensions/
                            BloggerBlogExtensionTest.php
</pre></div>
</div>
<p>Notice that each of the Test files are suffixed with Test.</p>
<div class="section" id="testing-the-blog-entity-slugify-method">
<h3>Testing the Blog Entity - Slugify method<a class="headerlink" href="#testing-the-blog-entity-slugify-method" title="Permalink to this headline">¶</a></h3>
<p>We begin by testing the slugify method in the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity. Lets write some
tests to ensure this method is working correctly. Create a new file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span></tt> and add the following.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Entity</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Blogger\BlogBundle\Entity\Blog</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogTest</span> <span class="k">extends</span> <span class="nx">\PHPUnit_Framework_TestCase</span>
<span class="p">{</span>

<span class="p">}</span>
</pre></div>
</div>
<p>We have created a test class for the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity. Notice the location of the file
complies with the folder structure mentioned above. The <tt class="docutils literal"><span class="pre">BlogTest</span></tt> class extends
the base PHPUnit class <tt class="docutils literal"><span class="pre">PHPUnit_Framework_TestCase</span></tt>. All tests you write for PHPUnit
will be a child of this class. You&#8217;ll remember from previous chapters that
the <tt class="docutils literal"><span class="pre">\</span></tt> must be placed in front of the <tt class="docutils literal"><span class="pre">PHPUnit_Framework_TestCase</span></tt> class
name as the class is declared in the PHP public namespace.</p>
<p>Now we have the skeleton class for our <tt class="docutils literal"><span class="pre">Blog</span></tt> entity tests, lets write a test
case. Test cases in PHPUnit are methods of the Test class prefixed
with <tt class="docutils literal"><span class="pre">test</span></tt>, such as <tt class="docutils literal"><span class="pre">testSlugify()</span></tt>. Update the <tt class="docutils literal"><span class="pre">BlogTest</span></tt> located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span></tt> with the following.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="c1">// ..</span>

<span class="k">class</span> <span class="nc">BlogTest</span> <span class="k">extends</span> <span class="nx">\PHPUnit_Framework_TestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testSlugify</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;Hello World&#39;</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>This is a very simple test case. It instantiates a new <tt class="docutils literal"><span class="pre">Blog</span></tt> entity and runs
an <tt class="docutils literal"><span class="pre">assertEquals()</span></tt> on the result of the <tt class="docutils literal"><span class="pre">slugify</span></tt> method. The <tt class="docutils literal"><span class="pre">assertEquals()</span></tt>
method takes 2 mandatory arguments, the expected result and the actual result.
An optional 3rd argument can be passed in to specify a message to display
when the test case fails.</p>
<p>Lets run our new unit test. Run the following on the command line.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app
</pre></div>
</div>
<p>You should see the following output.</p>
<div class="highlight-bash"><div class="highlight"><pre>PHPUnit 3.5.11 by Sebastian Bergmann.

.

Time: 1 second, Memory: 4.25Mb

OK <span class="o">(</span>1 <span class="nb">test</span>, 1 assertion<span class="o">)</span>
</pre></div>
</div>
<p>The output from PHPUnit is very simple, Its start by displaying some information about
PHPUnit and the outputs a number of <tt class="docutils literal"><span class="pre">.</span></tt> for each test it runs, in our case
we are only running 1 test so only 1 <tt class="docutils literal"><span class="pre">.</span></tt> is output. The last statement informs
us of the result of the tests. For our <tt class="docutils literal"><span class="pre">BlogTest</span></tt> we only ran 1 test with 1
assertion. If you have color output on your command line you will also see the
last line displayed in green showing everything executed OK.
Lets update the <tt class="docutils literal"><span class="pre">testSlugify()</span></tt> method to see what happens when the tests fails.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="c1">// ..</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testSlugify</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;Hello World&#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;a day with symfony2&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;A Day With Symfony2&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Re run the unit tests as before. The following output will be displayed</p>
<div class="highlight-bash"><div class="highlight"><pre>PHPUnit 3.5.11 by Sebastian Bergmann.

F

Time: 0 seconds, Memory: 4.25Mb

There was 1 failure:

1<span class="o">)</span> Blogger<span class="se">\B</span>logBundle<span class="se">\T</span>ests<span class="se">\E</span>ntity<span class="se">\B</span>logTest::testSlugify
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-a day with symfony2
+a-day-with-symfony2

/var/www/html/symblog/symblog/src/Blogger/BlogBundle/Tests/Entity/BlogTest.php:15

FAILURES!
Tests: 1, Assertions: 2, Failures: 1.
</pre></div>
</div>
<p>The output is a bit more involved this time. We can see the <tt class="docutils literal"><span class="pre">.</span></tt> for the run tests
is replaced by a <tt class="docutils literal"><span class="pre">F</span></tt>. This tells us the test failed. You will also see the <tt class="docutils literal"><span class="pre">E</span></tt>
character output if your test contains Errors. Next PHPUnit notifies us in
detail of the failures, in this case, the 1 failure. We can see the
<tt class="docutils literal"><span class="pre">Blogger\BlogBundle\Tests\Entity\BlogTest::testSlugify</span></tt> method failed because
the Expected and the Actual values were different. If you have color output on
your command line you will also see the last line displayed in red showing
there were failures in your tests. Correct the <tt class="docutils literal"><span class="pre">testSlugify()</span></tt> method so
the tests execute successfully.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="c1">// ..</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testSlugify</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;Hello World&#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;a-day-with-symfony2&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;A Day With Symfony2&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Before moving on add some more test for <tt class="docutils literal"><span class="pre">slugify()</span></tt> method.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="c1">// ..</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testSlugify</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;Hello World&#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;a-day-with-symfony2&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;A Day With Symfony2&#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;Hello    world&#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;symblog&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39;symblog &#39;</span><span class="p">));</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;symblog&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">slugify</span><span class="p">(</span><span class="s1">&#39; symblog&#39;</span><span class="p">));</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now we have tested the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity slugify method, we need to  ensure the <tt class="docutils literal"><span class="pre">Blog</span></tt>
<tt class="docutils literal"><span class="pre">$slug</span></tt> member is correctly set when the <tt class="docutils literal"><span class="pre">$title</span></tt> member of the <tt class="docutils literal"><span class="pre">Blog</span></tt> is
updated. Add the following methods to the <tt class="docutils literal"><span class="pre">BlogTest</span></tt> file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span></tt>.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Entity/BlogTest.php</span>

<span class="c1">// ..</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testSetSlug</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

    <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">setSlug</span><span class="p">(</span><span class="s1">&#39;Symfony2 Blog&#39;</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;symfony2-blog&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">getSlug</span><span class="p">());</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testSetTitle</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Blog</span><span class="p">();</span>

    <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">setTitle</span><span class="p">(</span><span class="s1">&#39;Hello World&#39;</span><span class="p">);</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;hello-world&#39;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">getSlug</span><span class="p">());</span>
<span class="p">}</span>
</pre></div>
</div>
<p>We begin by testing the <tt class="docutils literal"><span class="pre">setSlug</span></tt> method to ensure the <tt class="docutils literal"><span class="pre">$slug</span></tt> member is
correctly slugified when updated. Next we check the <tt class="docutils literal"><span class="pre">$slug</span></tt> member is correctly
updated when the <tt class="docutils literal"><span class="pre">setTitle</span></tt> method is called on the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity.</p>
<p>Run the tests to verify the <tt class="docutils literal"><span class="pre">Blog</span></tt> entity is functioning correctly.</p>
</div>
<div class="section" id="testing-the-twig-extension">
<h3>Testing the Twig extension<a class="headerlink" href="#testing-the-twig-extension" title="Permalink to this headline">¶</a></h3>
<p>In the previous chapter we created a Twig extension to convert a <tt class="docutils literal"><span class="pre">\DateTime</span></tt>
instance into a string detailing the duration since a time period. Create a new test file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Twig/Extensions/BloggerBlogExtensionTest.php</span></tt> and
update with the following content.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Twig/Extensions/BloggerBlogExtensionTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Twig\Extensions</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Blogger\BlogBundle\Twig\Extensions\BloggerBlogExtension</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BloggerBlogExtensionTest</span> <span class="k">extends</span> <span class="nx">\PHPUnit_Framework_TestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testCreatedAgo</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$blog</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">BloggerBlogExtension</span><span class="p">();</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;0 seconds ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="k">new</span> <span class="nx">\DateTime</span><span class="p">()));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;34 seconds ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">34</span><span class="p">)));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;1 minute ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">60</span><span class="p">)));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;2 minutes ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">120</span><span class="p">)));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;1 hour ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">3600</span><span class="p">)));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;1 hour ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">3601</span><span class="p">)));</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s2">&quot;2 hours ago&quot;</span><span class="p">,</span> <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="o">-</span><span class="mi">7200</span><span class="p">)));</span>

        <span class="c1">// Cannot create time in the future</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setExpectedException</span><span class="p">(</span><span class="s1">&#39;\InvalidArgumentException&#39;</span><span class="p">);</span>
        <span class="nv">$blog</span><span class="o">-&gt;</span><span class="na">createdAgo</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateTime</span><span class="p">(</span><span class="mi">60</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="k">protected</span> <span class="k">function</span> <span class="nf">getDateTime</span><span class="p">(</span><span class="nv">$delta</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nx">\DateTime</span><span class="p">(</span><span class="nb">date</span><span class="p">(</span><span class="s2">&quot;Y-m-d H:i:s&quot;</span><span class="p">,</span> <span class="nb">time</span><span class="p">()</span><span class="o">+</span><span class="nv">$delta</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The class is setup much the same as before, creating a method <tt class="docutils literal"><span class="pre">testCreatedAgo()</span></tt>
to test the Twig Extension. We introduce another PHPUnit method in this test case,
the <tt class="docutils literal"><span class="pre">setExpectedException()</span></tt> method. This method should be called before executing
a method you expect to throw an exception. We know that the <tt class="docutils literal"><span class="pre">createdAgo</span></tt> method
of the Twig extension cannot handle dates in the future and will throw an
<tt class="docutils literal"><span class="pre">\Exception</span></tt>. The <tt class="docutils literal"><span class="pre">getDateTime()</span></tt> method is simply a helper method for
creating a <tt class="docutils literal"><span class="pre">\DateTime</span></tt> instance. Notice it is not prefixed with <tt class="docutils literal"><span class="pre">test</span></tt> so
PHPUnit will not try to execute it as a test case. Open up the command line
and run the tests for this file. We could simply run the test as before, but
we can also tell PHPUnit to run tests for a specific folder (and its sub folders)
or a file. Run the following command.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app src/Blogger/BlogBundle/Tests/Twig/Extensions/BloggerBlogExtensionTest.php
</pre></div>
</div>
<p>This will run the tests for the <tt class="docutils literal"><span class="pre">BloggerBlogExtensionTest</span></tt> file only. PHPUnit
will inform us that the tests failed. The output is shown below.</p>
<div class="highlight-bash"><div class="highlight"><pre>1<span class="o">)</span> Blogger<span class="se">\B</span>logBundle<span class="se">\T</span>ests<span class="se">\T</span>wig<span class="se">\E</span>xtension<span class="se">\B</span>loggerBlogExtensionTest::testCreatedAgo
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-0 seconds ago
+0 second ago

/var/www/html/symblog/symblog/src/Blogger/BlogBundle/Tests/Twig/Extensions/BloggerBlogExtensionTest.php:14
</pre></div>
</div>
<p>We were expecting the first assertion to return <tt class="docutils literal"><span class="pre">0</span> <span class="pre">seconds</span> <span class="pre">ago</span></tt> but it didn&#8217;t, the
word second was not plural. Lets update the Twig Extension located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Twig/Extensions/BloggerBlogBundle.php</span></tt> to correct this.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Twig/Extensions/BloggerBlogBundle.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Twig\Extensions</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BloggerBlogExtension</span> <span class="k">extends</span> <span class="nx">\Twig_Extension</span>
<span class="p">{</span>
    <span class="c1">// ..</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">createdAgo</span><span class="p">(</span><span class="nx">\DateTime</span> <span class="nv">$dateTime</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ..</span>
        <span class="k">if</span> <span class="p">(</span><span class="nv">$delta</span> <span class="o">&lt;</span> <span class="mi">60</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Seconds</span>
            <span class="nv">$time</span> <span class="o">=</span> <span class="nv">$delta</span><span class="p">;</span>
            <span class="nv">$duration</span> <span class="o">=</span> <span class="nv">$time</span> <span class="o">.</span> <span class="s2">&quot; second&quot;</span> <span class="o">.</span> <span class="p">((</span><span class="nv">$time</span> <span class="o">===</span> <span class="mi">0</span> <span class="o">||</span> <span class="nv">$time</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;s&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&quot; ago&quot;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="c1">// ..</span>
    <span class="p">}</span>

    <span class="c1">// ..</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Re run the PHPUnit tests. You should see the first assertion passing correctly,
but our test case still fails. Lets examine the next output.</p>
<div class="highlight-bash"><div class="highlight"><pre>1<span class="o">)</span> Blogger<span class="se">\B</span>logBundle<span class="se">\T</span>ests<span class="se">\T</span>wig<span class="se">\E</span>xtension<span class="se">\B</span>loggerBlogExtensionTest::testCreatedAgo
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-1 hour ago
+60 minutes ago

/var/www/html/symblog/symblog/src/Blogger/BlogBundle/Tests/Twig/Extensions/BloggerBlogExtensionTest.php:18
</pre></div>
</div>
<p>We can see now that the 5th assertion is failing (notice the 18 at the end of the
output, this gives us the line number in the file where the assertion failed).
Looking at the test case we can see that the Twig Extension has functioned
incorrectly. 1 hour ago should have been returned, but instead 60 minutes ago
was. If we examine the code in the <tt class="docutils literal"><span class="pre">BloggerBlogExtension</span></tt> Twig
extension we can see the reason. We compare the time to be inclusive, i.e., we use
<tt class="docutils literal"><span class="pre">&lt;=</span></tt> rather than <tt class="docutils literal"><span class="pre">&lt;</span></tt>. We can also see this is the case when checking for
hours. Update the Twig extension located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Twig/Extensions/BloggerBlogBundle.php</span></tt> to correct
this.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Twig/Extensions/BloggerBlogBundle.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Twig\Extensions</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BloggerBlogExtension</span> <span class="k">extends</span> <span class="nx">\Twig_Extension</span>
<span class="p">{</span>
    <span class="c1">// ..</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">createdAgo</span><span class="p">(</span><span class="nx">\DateTime</span> <span class="nv">$dateTime</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// ..</span>

        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$delta</span> <span class="o">&lt;</span> <span class="mi">3600</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Mins</span>
            <span class="nv">$time</span> <span class="o">=</span> <span class="nb">floor</span><span class="p">(</span><span class="nv">$delta</span> <span class="o">/</span> <span class="mi">60</span><span class="p">);</span>
            <span class="nv">$duration</span> <span class="o">=</span> <span class="nv">$time</span> <span class="o">.</span> <span class="s2">&quot; minute&quot;</span> <span class="o">.</span> <span class="p">((</span><span class="nv">$time</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;s&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&quot; ago&quot;</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nv">$delta</span> <span class="o">&lt;</span> <span class="mi">86400</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Hours</span>
            <span class="nv">$time</span> <span class="o">=</span> <span class="nb">floor</span><span class="p">(</span><span class="nv">$delta</span> <span class="o">/</span> <span class="mi">3600</span><span class="p">);</span>
            <span class="nv">$duration</span> <span class="o">=</span> <span class="nv">$time</span> <span class="o">.</span> <span class="s2">&quot; hour&quot;</span> <span class="o">.</span> <span class="p">((</span><span class="nv">$time</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="s2">&quot;s&quot;</span> <span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&quot; ago&quot;</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// ..</span>
    <span class="p">}</span>

    <span class="c1">// ..</span>
<span class="p">}</span>
</pre></div>
</div>
<p>Now re run all our tests using the following command.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app
</pre></div>
</div>
<p>This runs all our tests, and shows all tests pass successfully. Although we have
only written a small number of unit tests you should be getting a feel for how
powerful and important testing is when writing code. While the above errors
were minor, they were still errors. Testing also helps any future functionality
added to the project breaking previous features. This concludes the unit testing
for now. We will see more unit testing in the following chapters. Try adding some
of your own unit tests to test functionality that has been missed.</p>
</div>
</div>
<div class="section" id="id5">
<h2>Functional Testing<a class="headerlink" href="#id5" title="Permalink to this headline">¶</a></h2>
<p>Now we have written some unit tests, lets move on to testing multiple components
together. The first section of the functional testing will involve simulating
browser requests to tests the generated responses.</p>
<div class="section" id="testing-the-about-page">
<h3>Testing the About page<a class="headerlink" href="#testing-the-about-page" title="Permalink to this headline">¶</a></h3>
<p>We begin testing the <tt class="docutils literal"><span class="pre">PageController</span></tt> class for the about page. As the about page
is very simple, this is a good place to start. Create a new file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span></tt> and add
the following content.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Test\WebTestCase</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">PageControllerTest</span> <span class="k">extends</span> <span class="nx">WebTestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testAbout</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/about&#39;</span><span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;h1:contains(&quot;About symblog&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>We have already seen a Controller test very similar to this when we briefly looked
at the <tt class="docutils literal"><span class="pre">DefaultControllerTest</span></tt> class. This is testing the about page of symblog,
checking the string <tt class="docutils literal"><span class="pre">About</span> <span class="pre">symblog</span></tt> is present in the generated HTML,
specifically within the <tt class="docutils literal"><span class="pre">H1</span></tt> tag. The <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class doesn&#8217;t extend the
<tt class="docutils literal"><span class="pre">\PHPUnit_Framework_TestCase</span></tt> as we saw with the unit testing examples,
it instead extends the class <tt class="docutils literal"><span class="pre">WebTestCase</span></tt>. This class is part of the Symfony2
FrameworkBundle.</p>
<p>As explained before PHPUnit test classes must extend the
<tt class="docutils literal"><span class="pre">\PHPUnit_Framework_TestCase</span></tt>, but when extra or common functionality is
required across multiple Test cases it is useful to encapsulate this in its
own class and have your Test classes extend this. The <tt class="docutils literal"><span class="pre">WebTestCase</span></tt> does
exactly this, it provides a number of useful method for running functional tests
in Symfony2. Have a look at the <tt class="docutils literal"><span class="pre">WebTestCase</span></tt> file located at
<tt class="docutils literal"><span class="pre">vendor/symfony/src/Symfony/Bundle/FrameworkBundle/Test/WebTestCase.php</span></tt>, you
will see that this class is in fact extending the <tt class="docutils literal"><span class="pre">\PHPUnit_Framework_TestCase</span></tt>
class.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// vendor/symfony/src/Symfony/Bundle/FrameworkBundle/Test/WebTestCase.php</span>

<span class="k">abstract</span> <span class="k">class</span> <span class="nc">WebTestCase</span> <span class="k">extends</span> <span class="nx">\PHPUnit_Framework_TestCase</span>
<span class="p">{</span>
    <span class="c1">// ..</span>
<span class="p">}</span>
</pre></div>
</div>
<p>If you look at the <tt class="docutils literal"><span class="pre">createClient()</span></tt> method in the <tt class="docutils literal"><span class="pre">WebTestCase</span></tt> class
you can see it creates an instance of the Symfony2 Kernel. Following the methods
through you will also notice that the <tt class="docutils literal"><span class="pre">environment</span></tt> is set to <tt class="docutils literal"><span class="pre">test</span></tt>
(unless overridden as one of the arguments to <tt class="docutils literal"><span class="pre">createClient()</span></tt>). This is the
<tt class="docutils literal"><span class="pre">test</span></tt> environment we spoke about in the previous chapter.</p>
<p>Looking back at our test class we can see the <tt class="docutils literal"><span class="pre">createClient()</span></tt> method is
called to get the test up and running. We then call the <tt class="docutils literal"><span class="pre">request()</span></tt> method on the
client to simulate a browser HTTP GET request to the url <tt class="docutils literal"><span class="pre">/about</span></tt> (this would
be just like you visiting <tt class="docutils literal"><span class="pre">http://symblog.dev/about</span></tt> in your browser). The
request gives us a <tt class="docutils literal"><span class="pre">Crawler</span></tt> object back, which contains the <tt class="docutils literal"><span class="pre">Response</span></tt>. The
<tt class="docutils literal"><span class="pre">Crawler</span></tt> class is very useful as it lets us traverse the returned HTML. We
use the <tt class="docutils literal"><span class="pre">Crawler</span></tt> instance to check that the <tt class="docutils literal"><span class="pre">H1</span></tt> tag in the response HTML
contains the words <tt class="docutils literal"><span class="pre">About</span> <span class="pre">symblog</span></tt>. You&#8217;ll notice that even though we are
extending the class <tt class="docutils literal"><span class="pre">WebTestCase</span></tt> we still use the assert method as before
(remember the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class is still is child of the
<tt class="docutils literal"><span class="pre">\PHPUnit_Framework_TestCase</span></tt> class).</p>
<p>Lets run the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> using the following command. When writing
tests its useful to only execute the tests for the file you are currently working on.
As your test suite gets large, running tests can be a time consuming tasks.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php
</pre></div>
</div>
<p>You should be greeted with the message <tt class="docutils literal"><span class="pre">OK</span> <span class="pre">(1</span> <span class="pre">test,</span> <span class="pre">1</span> <span class="pre">assertion)</span></tt> letting us
know that 1 test (the <tt class="docutils literal"><span class="pre">testAbout()</span></tt>) ran, with 1 assertion (the <tt class="docutils literal"><span class="pre">assertEquals()</span></tt>).</p>
<p>Try changing the <tt class="docutils literal"><span class="pre">About</span> <span class="pre">symblog</span></tt> string to <tt class="docutils literal"><span class="pre">Contact</span></tt> and then re run the test.
The test will now fail as <tt class="docutils literal"><span class="pre">Contact</span></tt> wont be found, causing <tt class="docutils literal"><span class="pre">asertEquals</span></tt> to
equate to false.</p>
<div class="highlight-bash"><div class="highlight"><pre>1<span class="o">)</span> Blogger<span class="se">\B</span>logBundle<span class="se">\T</span>ests<span class="se">\C</span>ontroller<span class="se">\P</span>ageControllerTest::testAbout
Failed asserting that 0 matches expected 1.
</pre></div>
</div>
<p>Revert the string back to <tt class="docutils literal"><span class="pre">About</span> <span class="pre">symblog</span></tt> before moving on.</p>
<p>The <tt class="docutils literal"><span class="pre">Crawler</span></tt> instance used allows you to traverse either HTML or XML
documents (which means the <tt class="docutils literal"><span class="pre">Crawler</span></tt> will only work with responses that return
HTML or XML). We can use the <tt class="docutils literal"><span class="pre">Crawler</span></tt> to traverse the generated response using
methods such as <tt class="docutils literal"><span class="pre">filter()</span></tt>, <tt class="docutils literal"><span class="pre">first()</span></tt>, <tt class="docutils literal"><span class="pre">last()</span></tt>, and <tt class="docutils literal"><span class="pre">parents()</span></tt>. If you
have used <a class="reference external" href="http://jquery.com/">jQuery</a> before you should feel right at home
with the <tt class="docutils literal"><span class="pre">Crawler</span></tt> class. A full list of supported <tt class="docutils literal"><span class="pre">Crawler</span></tt> traversal methods can be
found in the <a class="reference external" href="http://symfony.com/doc/current/book/testing.html#traversing">Testing</a> chapter of the
Symfony2 book. We will explore more of the <tt class="docutils literal"><span class="pre">Crawler</span></tt> features as we continue.</p>
</div>
<div class="section" id="homepage">
<h3>Homepage<a class="headerlink" href="#homepage" title="Permalink to this headline">¶</a></h3>
<p>While the test for the about page was simple, it has outlined the basic principles
of functional testing the website pages.</p>
<blockquote>
<div><ol class="arabic simple">
<li>Create the client</li>
<li>Request a page</li>
<li>Check the response</li>
</ol>
</div></blockquote>
<p>This is a simple overview of the process, in fact there are a number of other
steps we could also do such as clicking links and populating and submitting
forms.</p>
<p>Lets create a method to test the homepage. We know the homepage is available
via the URL <tt class="docutils literal"><span class="pre">/</span></tt> and that is should display the latest blog posts. Add a new
method <tt class="docutils literal"><span class="pre">testIndex()</span></tt> to the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span></tt> as shown below.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testIndex</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">);</span>

    <span class="c1">// Check there are some blog entries on the page</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;article.blog&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>You can see the same steps are taken as with the tests for the about page.
Run the test to ensure everything is working as expected.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php
</pre></div>
</div>
<p>Lets now take the testing a bit further. Part of functional testing involves being
able to replicate what a user would do on the site. In order for users to move
between pages on your website they click links. Lets simulate this action now
to test the links to the show blog page work correctly when the blog title is clicked.
Update the <tt class="docutils literal"><span class="pre">testIndex()</span></tt> method in the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class with the following.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testIndex</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ..</span>

    <span class="c1">// Find the first link, get the title, ensure this is loaded on the next page</span>
    <span class="nv">$blogLink</span>   <span class="o">=</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;article.blog h2 a&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">();</span>
    <span class="nv">$blogTitle</span>  <span class="o">=</span> <span class="nv">$blogLink</span><span class="o">-&gt;</span><span class="na">text</span><span class="p">();</span>
    <span class="nv">$crawler</span>    <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">click</span><span class="p">(</span><span class="nv">$blogLink</span><span class="o">-&gt;</span><span class="na">link</span><span class="p">());</span>

    <span class="c1">// Check the h2 has the blog title in it</span>
    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;h2:contains(&quot;&#39;</span> <span class="o">.</span> <span class="nv">$blogTitle</span> <span class="o">.</span><span class="s1">&#39;&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>
<span class="p">}</span>
</pre></div>
</div>
<p>The first thing we do it use the <tt class="docutils literal"><span class="pre">Crawler</span></tt> to extract the text within the first
blog title link. This is done using the filter <tt class="docutils literal"><span class="pre">article.blog</span> <span class="pre">h2</span> <span class="pre">a</span></tt>. This filter
is used return the <tt class="docutils literal"><span class="pre">a</span></tt> tag within the <tt class="docutils literal"><span class="pre">H2</span></tt> tag of the <tt class="docutils literal"><span class="pre">article.blog</span></tt>
article. To understand this better, have a look at the markup used on the homepage
for displaying blogs.</p>
<div class="highlight-html"><div class="highlight"><pre><span class="nt">&lt;article</span> <span class="na">class=</span><span class="s">&quot;blog&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;date&quot;</span><span class="nt">&gt;&lt;time</span> <span class="na">datetime=</span><span class="s">&quot;2011-09-05T21:06:19+01:00&quot;</span><span class="nt">&gt;</span>Monday, September 5, 2011<span class="nt">&lt;/time&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;header&gt;</span>
        <span class="nt">&lt;h2&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/app_dev.php/1/a-day-with-symfony2&quot;</span><span class="nt">&gt;</span>A day with Symfony2<span class="nt">&lt;/a&gt;&lt;/h2&gt;</span>
    <span class="nt">&lt;/header&gt;</span>

    <span class="c">&lt;!-- .. --&gt;</span>
<span class="nt">&lt;/article&gt;</span>
<span class="nt">&lt;article</span> <span class="na">class=</span><span class="s">&quot;blog&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;date&quot;</span><span class="nt">&gt;&lt;time</span> <span class="na">datetime=</span><span class="s">&quot;2011-09-05T21:06:19+01:00&quot;</span><span class="nt">&gt;</span>Monday, September 5, 2011<span class="nt">&lt;/time&gt;&lt;/div&gt;</span>
    <span class="nt">&lt;header&gt;</span>
        <span class="nt">&lt;h2&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/app_dev.php/2/the-pool-on-the-roof-must-have-a-leak&quot;</span><span class="nt">&gt;</span>The pool on the roof must have a leak<span class="nt">&lt;/a&gt;&lt;/h2&gt;</span>
    <span class="nt">&lt;/header&gt;</span>

    <span class="c">&lt;!-- .. --&gt;</span>
<span class="nt">&lt;/article&gt;</span>
</pre></div>
</div>
<p>You can see the filter <tt class="docutils literal"><span class="pre">article.blog</span> <span class="pre">h2</span> <span class="pre">a</span></tt> structure in place in the homepage
markup. You&#8217;ll also notice that there is more than one <tt class="docutils literal"><span class="pre">&lt;article</span> <span class="pre">class=&quot;blog&quot;&gt;</span></tt> in
the markup, meaning the <tt class="docutils literal"><span class="pre">Crawler</span></tt> filter will return a collection. As we only want
the first link, we use the <tt class="docutils literal"><span class="pre">first()</span></tt> method on the collection. Finally we use
the <tt class="docutils literal"><span class="pre">text()</span></tt> method to extract the link text, in this case it will be the text
<tt class="docutils literal"><span class="pre">A</span> <span class="pre">day</span> <span class="pre">with</span> <span class="pre">Symfony2</span></tt>. Next, the blog title link is clicked to navigate to the
blog show page. The client <tt class="docutils literal"><span class="pre">click()</span></tt> method takes a link object and returns the
<tt class="docutils literal"><span class="pre">Response</span></tt> in a <tt class="docutils literal"><span class="pre">Crawler</span></tt> instance. You should by now be noticing that the
<tt class="docutils literal"><span class="pre">Crawler</span></tt> object is a key part to functional testing.</p>
<p>The <tt class="docutils literal"><span class="pre">Crawler</span></tt> object now contains the Response for the blog show page. We need
to test that the link we navigated took us to the right page. We can use the
<tt class="docutils literal"><span class="pre">$blogTitle</span></tt> value we retrieved earlier to check this against the title in the
Response.</p>
<p>Run the tests to ensure that navigation between the homepage and the blog show
pages is working correctly.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php
</pre></div>
</div>
<p>Now you have an understanding of how to navigate through the website pages
when functional testing, lets move onto testing forms.</p>
</div>
<div class="section" id="testing-the-contact-page">
<h3>Testing the Contact Page<a class="headerlink" href="#testing-the-contact-page" title="Permalink to this headline">¶</a></h3>
<p>Users of symblog are able to submit contact enquiries by completing the form on
the contact page <tt class="docutils literal"><span class="pre">http://symblog.dev/contact</span></tt>. Lets test that submissions
of this form work correctly. First we need to outline what should happen when
the form is successfully submitted (successfully submitted in this case means
there are no errors present in the form).</p>
<blockquote>
<div><ol class="arabic simple">
<li>Navigate to contact page</li>
<li>Populate contact form with values</li>
<li>Submit form</li>
<li>Check email was sent to symblog</li>
<li>Check response to client contains notification of successful contact</li>
</ol>
</div></blockquote>
<p>So far we have explored enough to be able to complete steps 1 and 5 only. We will
now look at how to test the 3 middle steps.</p>
<p>Add a new method <tt class="docutils literal"><span class="pre">testContact()</span></tt> to the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span></tt>.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testContact</span><span class="p">()</span>
<span class="p">{</span>
    <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/contact&#39;</span><span class="p">);</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;h1:contains(&quot;Contact symblog&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>

    <span class="c1">// Select based on button value, or id or name for buttons</span>
    <span class="nv">$form</span> <span class="o">=</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">selectButton</span><span class="p">(</span><span class="s1">&#39;Submit&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">form</span><span class="p">();</span>

    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;blogger_blogbundle_enquirytype[name]&#39;</span><span class="p">]</span>       <span class="o">=</span> <span class="s1">&#39;name&#39;</span><span class="p">;</span>
    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;blogger_blogbundle_enquirytype[email]&#39;</span><span class="p">]</span>      <span class="o">=</span> <span class="s1">&#39;email@email.com&#39;</span><span class="p">;</span>
    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;blogger_blogbundle_enquirytype[subject]&#39;</span><span class="p">]</span>    <span class="o">=</span> <span class="s1">&#39;Subject&#39;</span><span class="p">;</span>
    <span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;blogger_blogbundle_enquirytype[body]&#39;</span><span class="p">]</span>       <span class="o">=</span> <span class="s1">&#39;The comment body must be at least 50 characters long as there is a validation constrain on the Enquiry entity&#39;</span><span class="p">;</span>

    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">submit</span><span class="p">(</span><span class="nv">$form</span><span class="p">);</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;.blogger-notice:contains(&quot;Your contact enquiry was successfully sent. Thank you!&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>
<span class="p">}</span>
</pre></div>
</div>
<p>We begin in the usual fashion, making a request to the <tt class="docutils literal"><span class="pre">/contact</span></tt> URL, and
checking the page contains the correct <tt class="docutils literal"><span class="pre">H1</span></tt> title. Next we use the <tt class="docutils literal"><span class="pre">Crawler</span></tt>
to select the form submit button. The reason we select the button and not the
form is that a form may contain multiple buttons that we may want to click
independently. From the selected button we are able to retrieve the form. We are
able to set the form values using the array subscript notation <tt class="docutils literal"><span class="pre">[]</span></tt>.
Finally the form is passed to the client <tt class="docutils literal"><span class="pre">submit()</span></tt> method to actually
submit the form. As usual, we receive a <tt class="docutils literal"><span class="pre">Crawler</span></tt> instance back. Using the
<tt class="docutils literal"><span class="pre">Crawler</span></tt> response we check to ensure the flash message is present in the returned
response. Run the test to check everything is functioning correctly.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php
</pre></div>
</div>
<p>The tests failed. We are given the following output from PHPUnit.</p>
<div class="highlight-bash"><div class="highlight"><pre>1<span class="o">)</span> Blogger<span class="se">\B</span>logBundle<span class="se">\T</span>ests<span class="se">\C</span>ontroller<span class="se">\P</span>ageControllerTest::testContact
Failed asserting that &lt;integer:0&gt; matches expected &lt;integer:1&gt;.

/var/www/html/symblog/symblog/src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php:53

FAILURES!
Tests: 3, Assertions: 5, Failures: 1.
</pre></div>
</div>
<p>The output is informing us that the flash message could not be found in the
response from the form submit. This is because when in the <tt class="docutils literal"><span class="pre">test</span></tt> environment,
redirects are not followed. When the form is successfully validated in the
<tt class="docutils literal"><span class="pre">PageController</span></tt> class a redirect happens. This redirect is not being
followed; We need to explicitly say that the redirect should be followed. The
reason redirects are not followed is simple, you may want to check the current
response first. We will demonstrate this soon to check the email was sent.
Update the <tt class="docutils literal"><span class="pre">PageControllerTest</span></tt> class to set the client to follow the
redirect.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testContact</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ..</span>

    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">submit</span><span class="p">(</span><span class="nv">$form</span><span class="p">);</span>

    <span class="c1">// Need to follow redirect</span>
    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">followRedirect</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;.blogger-notice:contains(&quot;Your contact enquiry was successfully sent. Thank you!&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>
<span class="p">}</span>
</pre></div>
</div>
<p>No when you run the PHPUnit tests they should pass. Lets now look at the final
step of checking the contact form submission process, step 4, checking an email
was sent to symblog. We already know that emails will not be delivered in the
<tt class="docutils literal"><span class="pre">test</span></tt> environment due to the following configuration.</p>
<div class="highlight-yaml"><div class="highlight"><pre><span class="c1"># app/config/config_test.yml</span>

<span class="l-Scalar-Plain">swiftmailer</span><span class="p-Indicator">:</span>
    <span class="l-Scalar-Plain">disable_delivery</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</pre></div>
</div>
<p>We can test the emails were sent using the information gathered by the web profiler.
This is where the importance of the client not following redirects comes in. The
check on the profiler needs to be done before the redirect happens, as the information
in the profiler will be lost. Update the <tt class="docutils literal"><span class="pre">testContact()</span></tt> method with the following.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="c1">// src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php</span>

<span class="k">public</span> <span class="k">function</span> <span class="nf">testContact</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// ..</span>

    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">submit</span><span class="p">(</span><span class="nv">$form</span><span class="p">);</span>

    <span class="c1">// Check email has been sent</span>
    <span class="k">if</span> <span class="p">(</span><span class="nv">$profile</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getProfile</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="nv">$swiftMailerProfiler</span> <span class="o">=</span> <span class="nv">$profile</span><span class="o">-&gt;</span><span class="na">getCollector</span><span class="p">(</span><span class="s1">&#39;swiftmailer&#39;</span><span class="p">);</span>

        <span class="c1">// Only 1 message should have been sent</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$swiftMailerProfiler</span><span class="o">-&gt;</span><span class="na">getMessageCount</span><span class="p">());</span>

        <span class="c1">// Get the first message</span>
        <span class="nv">$messages</span> <span class="o">=</span> <span class="nv">$swiftMailerProfiler</span><span class="o">-&gt;</span><span class="na">getMessages</span><span class="p">();</span>
        <span class="nv">$message</span>  <span class="o">=</span> <span class="nb">array_shift</span><span class="p">(</span><span class="nv">$messages</span><span class="p">);</span>

        <span class="nv">$symblogEmail</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">getParameter</span><span class="p">(</span><span class="s1">&#39;blogger_blog.emails.contact_email&#39;</span><span class="p">);</span>
        <span class="c1">// Check message is being sent to correct address</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertArrayHasKey</span><span class="p">(</span><span class="nv">$symblogEmail</span><span class="p">,</span> <span class="nv">$message</span><span class="o">-&gt;</span><span class="na">getTo</span><span class="p">());</span>
    <span class="p">}</span>

    <span class="c1">// Need to follow redirect</span>
    <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">followRedirect</span><span class="p">();</span>

    <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;.blogger-notice:contains(&quot;Your contact enquiry was successfully sent. Thank you!&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</pre></div>
</div>
<p>After the form submit we check to see if the profiler is available as it may have
been disabled by a configuration setting for the current environment.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p class="last">Remember tests don&#8217;t have to be run in the <tt class="docutils literal"><span class="pre">test</span></tt> environment, they could be
run on the <tt class="docutils literal"><span class="pre">production</span></tt> environment where things like the profiler wont be
available.</p>
</div>
<p>If we are able to get the profiler we make a request to retrieve the
<tt class="docutils literal"><span class="pre">swiftmailer</span></tt> collector. The <tt class="docutils literal"><span class="pre">swiftmailer</span></tt> collector works behind the scenes
to gather information about how the emailing service is used. We can use this to
get information regarding which emails have been sent.</p>
<p>Next we use the <tt class="docutils literal"><span class="pre">getMessageCount()</span></tt> method to check that 1 email was sent. This
maybe enough to ensure that at least an email is going to be sent, but it doesn&#8217;t verify
that the email will be sent to the correct location. It could be very embarrassing
or even damaging for emails to be sent to the wrong email address. To check this
isn&#8217;t the case we verify the email to address is correct.</p>
<p>Now re run the tests to check everything is working correctly.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/PageControllerTest.php
</pre></div>
</div>
</div>
<div class="section" id="testing-adding-blog-comments">
<h3>Testing Adding Blog Comments<a class="headerlink" href="#testing-adding-blog-comments" title="Permalink to this headline">¶</a></h3>
<p>Lets now use the knowledge we have gained from the previous tests on the contact page
to test the process of submitting a blog comment.
Again we outline what should happen when the form is successfully
submitted.</p>
<blockquote>
<div><ol class="arabic simple">
<li>Navigate to a blog page</li>
<li>Populate comment form with values</li>
<li>Submit form</li>
<li>Check new comment is added to end of blog comment list</li>
<li>Also check sidebar latest comments to ensure comment is at top of list</li>
</ol>
</div></blockquote>
<p>Create a new file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Controller/BlogControllerTest.php</span></tt>
and add in the following.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Controller/BlogControllerTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Controller</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Test\WebTestCase</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogControllerTest</span> <span class="k">extends</span> <span class="nx">WebTestCase</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">testAddBlogComment</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$client</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createClient</span><span class="p">();</span>

        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/1/a-day-with-symfony&#39;</span><span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;h2:contains(&quot;A day with Symfony2&quot;)&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">());</span>

        <span class="c1">// Select based on button value, or id or name for buttons</span>
        <span class="nv">$form</span> <span class="o">=</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">selectButton</span><span class="p">(</span><span class="s1">&#39;Submit&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">form</span><span class="p">();</span>

        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">submit</span><span class="p">(</span><span class="nv">$form</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">&#39;blogger_blogbundle_commenttype[user]&#39;</span>          <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
            <span class="s1">&#39;blogger_blogbundle_commenttype[comment]&#39;</span>       <span class="o">=&gt;</span> <span class="s1">&#39;comment&#39;</span><span class="p">,</span>
        <span class="p">));</span>

        <span class="c1">// Need to follow redirect</span>
        <span class="nv">$crawler</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="na">followRedirect</span><span class="p">();</span>

        <span class="c1">// Check comment is now displaying on page, as the last entry. This ensure comments</span>
        <span class="c1">// are posted in order of oldest to newest</span>
        <span class="nv">$articleCrawler</span> <span class="o">=</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;section .previous-comments article&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">last</span><span class="p">();</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$articleCrawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;header span.highlight&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">text</span><span class="p">());</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;comment&#39;</span><span class="p">,</span> <span class="nv">$articleCrawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;p&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">last</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">text</span><span class="p">());</span>

        <span class="c1">// Check the sidebar to ensure latest comments are display and there is 10 of them</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;aside.sidebar section&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">last</span><span class="p">()</span>
                                        <span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;article&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">count</span><span class="p">()</span>
        <span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$crawler</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;aside.sidebar section&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">last</span><span class="p">()</span>
                                            <span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;article&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">first</span><span class="p">()</span>
                                            <span class="o">-&gt;</span><span class="na">filter</span><span class="p">(</span><span class="s1">&#39;header span.highlight&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">text</span><span class="p">()</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>We jump straight in this time with the entire test. Before we begin dissecting the code,
run the tests for this file to ensure everything is working correctly.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Controller/BlogControllerTest.php
</pre></div>
</div>
<p>PHPUnit should inform you that the 1 test was executed successfully. Looking at
the code for the <tt class="docutils literal"><span class="pre">testAddBlogComment()</span></tt> we can see things begin in the usual
format, creating a client, requesting a page and checking the page we are on is
correct. We then proceed to get the add comment form, and submit the form. The
way we populate the form values is slightly different than the previous version.
This time we use the 2nd argument of the client <tt class="docutils literal"><span class="pre">submit()</span></tt> method to pass in
the values for the form.</p>
<div class="admonition tip">
<p class="first admonition-title">Tip</p>
<p>We could also use the Object Oriented interface to set the values of the form fields.
Some examples are shown below.</p>
<div class="last highlight-php"><div class="highlight"><pre><span class="c1">// Tick a checkbox</span>
<span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;show_emal&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">tick</span><span class="p">();</span>

<span class="c1">// Select an option or a radio</span>
<span class="nv">$form</span><span class="p">[</span><span class="s1">&#39;gender&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;Male&#39;</span><span class="p">);</span>
</pre></div>
</div>
</div>
<p>After submitting the form, we request the client should follow the redirect so we
can check the response. We use the <tt class="docutils literal"><span class="pre">Crawler</span></tt> again to get the last blog comment, which
should be the one we just submitted. Finally we check the latest comments in the
sidebar to check the comment is also the first one in the list.</p>
</div>
<div class="section" id="blog-repository">
<h3>Blog Repository<a class="headerlink" href="#blog-repository" title="Permalink to this headline">¶</a></h3>
<p>The last part of the functional testing we will explore in this chapter is
testing a Doctrine 2 repository. Create a new file located at
<tt class="docutils literal"><span class="pre">src/Blogger/BlogBundle/Tests/Repository/BlogRepositoryTest.php</span></tt> and add the
following content.</p>
<div class="highlight-php"><div class="highlight"><pre><span class="o">&lt;?</span><span class="nx">php</span>
<span class="c1">// src/Blogger/BlogBundle/Tests/Repository/BlogRepositoryTest.php</span>

<span class="k">namespace</span> <span class="nx">Blogger\BlogBundle\Tests\Repository</span><span class="p">;</span>

<span class="k">use</span> <span class="nx">Blogger\BlogBundle\Repository\BlogRepository</span><span class="p">;</span>
<span class="k">use</span> <span class="nx">Symfony\Bundle\FrameworkBundle\Test\WebTestCase</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">BlogRepositoryTest</span> <span class="k">extends</span> <span class="nx">WebTestCase</span>
<span class="p">{</span>
    <span class="sd">/**</span>
<span class="sd">     * @var \Blogger\BlogBundle\Repository\BlogRepository</span>
<span class="sd">     */</span>
    <span class="k">private</span> <span class="nv">$blogRepository</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">setUp</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$kernel</span> <span class="o">=</span> <span class="k">static</span><span class="o">::</span><span class="na">createKernel</span><span class="p">();</span>
        <span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">boot</span><span class="p">();</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span> <span class="o">=</span> <span class="nv">$kernel</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span>
                                       <span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;doctrine.orm.entity_manager&#39;</span><span class="p">)</span>
                                       <span class="o">-&gt;</span><span class="na">getRepository</span><span class="p">(</span><span class="s1">&#39;BloggerBlogBundle:Blog&#39;</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testGetTags</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$tags</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span><span class="o">-&gt;</span><span class="na">getTags</span><span class="p">();</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$tags</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertContains</span><span class="p">(</span><span class="s1">&#39;symblog&#39;</span><span class="p">,</span> <span class="nv">$tags</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">testGetTagWeights</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$tagsWeight</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span><span class="o">-&gt;</span><span class="na">getTagWeights</span><span class="p">(</span>
            <span class="k">array</span><span class="p">(</span><span class="s1">&#39;php&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">,</span> <span class="s1">&#39;symblog&#39;</span><span class="p">,</span> <span class="s1">&#39;blog&#39;</span><span class="p">)</span>
        <span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$tagsWeight</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">);</span>

        <span class="c1">// Test case where count is over max weight of 5</span>
        <span class="nv">$tagsWeight</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span><span class="o">-&gt;</span><span class="na">getTagWeights</span><span class="p">(</span>
            <span class="nb">array_fill</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s1">&#39;php&#39;</span><span class="p">)</span>
        <span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertTrue</span><span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$tagsWeight</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">);</span>

        <span class="c1">// Test case with multiple counts over max weight of 5</span>
        <span class="nv">$tagsWeight</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span><span class="o">-&gt;</span><span class="na">getTagWeights</span><span class="p">(</span>
            <span class="nb">array_merge</span><span class="p">(</span><span class="nb">array_fill</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s1">&#39;php&#39;</span><span class="p">),</span> <span class="nb">array_fill</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;html&#39;</span><span class="p">),</span> <span class="nb">array_fill</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="s1">&#39;js&#39;</span><span class="p">))</span>
        <span class="p">);</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="nv">$tagsWeight</span><span class="p">[</span><span class="s1">&#39;php&#39;</span><span class="p">]);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="nv">$tagsWeight</span><span class="p">[</span><span class="s1">&#39;js&#39;</span><span class="p">]);</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEquals</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$tagsWeight</span><span class="p">[</span><span class="s1">&#39;html&#39;</span><span class="p">]);</span>

        <span class="c1">// Test empty case</span>
        <span class="nv">$tagsWeight</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">blogRepository</span><span class="o">-&gt;</span><span class="na">getTagWeights</span><span class="p">(</span><span class="k">array</span><span class="p">());</span>

        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">assertEmpty</span><span class="p">(</span><span class="nv">$tagsWeight</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
<p>As we want to perform tests that require a valid connection to the database
we extend the <tt class="docutils literal"><span class="pre">WebTestCase</span></tt> again as this allows us to bootstrap the Symfony2
Kernel. Run this test for this file using the following command.</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit -c app/ src/Blogger/BlogBundle/Tests/Repository/BlogRepositoryTest.php
</pre></div>
</div>
</div>
</div>
<div class="section" id="code-coverage">
<h2>Code Coverage<a class="headerlink" href="#code-coverage" title="Permalink to this headline">¶</a></h2>
<p>Before we move on lets quickly touch on code coverage. Code coverage gives us an
insight into which parts of the code are executed when the tests are run. Using
this we can see the parts of our code that have no tests run on them, and
determine if we need to write test for them.</p>
<p>To output the code coverage analysis for your application run the following</p>
<div class="highlight-bash"><div class="highlight"><pre><span class="nv">$ </span>phpunit --coverage-html ./phpunit-report -c app/
</pre></div>
</div>
<p>This will output the code coverage analysis to the folder <tt class="docutils literal"><span class="pre">phpunit-report</span></tt>.
Open the <tt class="docutils literal"><span class="pre">index.html</span></tt> file in your browser to see the analysis output.</p>
<p>See the <a class="reference external" href="http://www.phpunit.de/manual/current/en/code-coverage-analysis.html">Code Coverage Analysis</a>
chapter in the PHPUnit documentation for more information.</p>
</div>
<div class="section" id="conclusion">
<h2>Conclusion<a class="headerlink" href="#conclusion" title="Permalink to this headline">¶</a></h2>
<p>We have covered a number of key areas with regards to testing. We have explored
both unit and functional testing to ensure our website is functioning correctly.
We have seen how to simulate browser requests and how to use the Symfony2 <tt class="docutils literal"><span class="pre">Crawler</span></tt>
class to check the Response from these requests.</p>
<p>Next we will look at the Symfony2 security component, and more specifically how to use it
for user management. We will also integrate the FOSUserBundle ready for us to work on the
symblog admin section.</p>
</div>
</div>


    <div id="disqus_thread"></div>

    <script type="text/javascript">
        var disqus_shortname = 'symblogtutorial';

        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">blog comments powered by <span class="logo-disqus">Disqus</span></a>


  </div>
  <div class="bottomnav">
  
        <p>
        «&#160;&#160;<a href="customising-the-view-more-with-twig.html">[Part 5] - Customising the view: Twig extensions, The sidebar and Assetic</a>
        &#160;&#160;::&#160;&#160;
        <a class="uplink" href="../index.html">Contents</a>
        </p>

  </div>
    <!-- Place this render call where appropriate -->
    <script type="text/javascript">
      window.___gcfg = {lang: 'en-GB'};

      (function() {
        var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
        po.src = 'https://apis.google.com/js/plusone.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
      })();
    </script>

  <script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-17277387-2']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

  </script>

    <div class="footer">
        &copy; Copyright 2011, dsyph3r.
      Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 1.1.2.
    </div>
  </body>
</html>
------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: text/css
Content-Location: http://tutorial.symblog.co.uk/_static/basic.css
Content-Transfer-Encoding: 8bit

/*
 * basic.css
 * ~~~~~~~~~
 *
 * Sphinx stylesheet -- basic theme.
 *
 * :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */

/* -- main layout ----------------------------------------------------------- */

div.clearer {
    clear: both;
}

/* -- relbar ---------------------------------------------------------------- */

div.related {
    width: 100%;
    font-size: 90%;
}

div.related h3 {
    display: none;
}

div.related ul {
    margin: 0;
    padding: 0 0 0 10px;
    list-style: none;
}

div.related li {
    display: inline;
}

div.related li.right {
    float: right;
    margin-right: 5px;
}

/* -- sidebar --------------------------------------------------------------- */

div.sphinxsidebarwrapper {
    padding: 10px 5px 0 10px;
}

div.sphinxsidebar {
    float: left;
    width: 230px;
    margin-left: -100%;
    font-size: 90%;
}

div.sphinxsidebar ul {
    list-style: none;
}

div.sphinxsidebar ul ul,
div.sphinxsidebar ul.want-points {
    margin-left: 20px;
    list-style: square;
}

div.sphinxsidebar ul ul {
    margin-top: 0;
    margin-bottom: 0;
}

div.sphinxsidebar form {
    margin-top: 10px;
}

div.sphinxsidebar input {
    border: 1px solid #98dbcc;
    font-family: sans-serif;
    font-size: 1em;
}

div.sphinxsidebar input[type="text"] {
    width: 170px;
}

div.sphinxsidebar input[type="submit"] {
    width: 30px;
}

img {
    border: 0;
}

/* -- search page ----------------------------------------------------------- */

ul.search {
    margin: 10px 0 0 20px;
    padding: 0;
}

ul.search li {
    padding: 5px 0 5px 20px;
    background-image: url(file.png);
    background-repeat: no-repeat;
    background-position: 0 7px;
}

ul.search li a {
    font-weight: bold;
}

ul.search li div.context {
    color: #888;
    margin: 2px 0 0 30px;
    text-align: left;
}

ul.keywordmatches li.goodmatch a {
    font-weight: bold;
}

/* -- index page ------------------------------------------------------------ */

table.contentstable {
    width: 90%;
}

table.contentstable p.biglink {
    line-height: 150%;
}

a.biglink {
    font-size: 1.3em;
}

span.linkdescr {
    font-style: italic;
    padding-top: 5px;
    font-size: 90%;
}

/* -- general index --------------------------------------------------------- */

table.indextable {
    width: 100%;
}

table.indextable td {
    text-align: left;
    vertical-align: top;
}

table.indextable dl, table.indextable dd {
    margin-top: 0;
    margin-bottom: 0;
}

table.indextable tr.pcap {
    height: 10px;
}

table.indextable tr.cap {
    margin-top: 10px;
    background-color: #f2f2f2;
}

img.toggler {
    margin-right: 3px;
    margin-top: 3px;
    cursor: pointer;
}

div.modindex-jumpbox {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    margin: 1em 0 1em 0;
    padding: 0.4em;
}

div.genindex-jumpbox {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
    margin: 1em 0 1em 0;
    padding: 0.4em;
}

/* -- general body styles --------------------------------------------------- */

a.headerlink {
    visibility: hidden;
}

h1:hover > a.headerlink,
h2:hover > a.headerlink,
h3:hover > a.headerlink,
h4:hover > a.headerlink,
h5:hover > a.headerlink,
h6:hover > a.headerlink,
dt:hover > a.headerlink {
    visibility: visible;
}

div.body p.caption {
    text-align: inherit;
}

div.body td {
    text-align: left;
}

.field-list ul {
    padding-left: 1em;
}

.first {
    margin-top: 0 !important;
}

p.rubric {
    margin-top: 30px;
    font-weight: bold;
}

img.align-left, .figure.align-left, object.align-left {
    clear: left;
    float: left;
    margin-right: 1em;
}

img.align-right, .figure.align-right, object.align-right {
    clear: right;
    float: right;
    margin-left: 1em;
}

img.align-center, .figure.align-center, object.align-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.align-left {
    text-align: left;
}

.align-center {
    text-align: center;
}

.align-right {
    text-align: right;
}

/* -- sidebars -------------------------------------------------------------- */

div.sidebar {
    margin: 0 0 0.5em 1em;
    border: 1px solid #ddb;
    padding: 7px 7px 0 7px;
    background-color: #ffe;
    width: 40%;
    float: right;
}

p.sidebar-title {
    font-weight: bold;
}

/* -- topics ---------------------------------------------------------------- */

div.topic {
    border: 1px solid #ccc;
    padding: 7px 7px 0 7px;
    margin: 10px 0 10px 0;
}

p.topic-title {
    font-size: 1.1em;
    font-weight: bold;
    margin-top: 10px;
}

/* -- admonitions ----------------------------------------------------------- */

div.admonition {
    margin-top: 10px;
    margin-bottom: 10px;
    padding: 7px;
}

div.admonition dt {
    font-weight: bold;
}

div.admonition dl {
    margin-bottom: 0;
}

p.admonition-title {
    margin: 0px 10px 5px 0px;
    font-weight: bold;
}

div.body p.centered {
    text-align: center;
    margin-top: 25px;
}

/* -- tables ---------------------------------------------------------------- */

table.docutils {
    border: 0;
    border-collapse: collapse;
}

table.docutils td, table.docutils th {
    padding: 1px 8px 1px 5px;
    border-top: 0;
    border-left: 0;
    border-right: 0;
    border-bottom: 1px solid #aaa;
}

table.field-list td, table.field-list th {
    border: 0 !important;
}

table.footnote td, table.footnote th {
    border: 0 !important;
}

th {
    text-align: left;
    padding-right: 5px;
}

table.citation {
    border-left: solid 1px gray;
    margin-left: 1px;
}

table.citation td {
    border-bottom: none;
}

/* -- other body styles ----------------------------------------------------- */

ol.arabic {
    list-style: decimal;
}

ol.loweralpha {
    list-style: lower-alpha;
}

ol.upperalpha {
    list-style: upper-alpha;
}

ol.lowerroman {
    list-style: lower-roman;
}

ol.upperroman {
    list-style: upper-roman;
}

dl {
    margin-bottom: 15px;
}

dd p {
    margin-top: 0px;
}

dd ul, dd table {
    margin-bottom: 10px;
}

dd {
    margin-top: 3px;
    margin-bottom: 10px;
    margin-left: 30px;
}

dt:target, .highlighted {
    background-color: #fbe54e;
}

dl.glossary dt {
    font-weight: bold;
    font-size: 1.1em;
}

.field-list ul {
    margin: 0;
    padding-left: 1em;
}

.field-list p {
    margin: 0;
}

.refcount {
    color: #060;
}

.optional {
    font-size: 1.3em;
}

.versionmodified {
    font-style: italic;
}

.system-message {
    background-color: #fda;
    padding: 5px;
    border: 3px solid red;
}

.footnote:target  {
    background-color: #ffa;
}

.line-block {
    display: block;
    margin-top: 1em;
    margin-bottom: 1em;
}

.line-block .line-block {
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 1.5em;
}

.guilabel, .menuselection {
    font-family: sans-serif;
}

.accelerator {
    text-decoration: underline;
}

.classifier {
    font-style: oblique;
}

abbr, acronym {
    border-bottom: dotted 1px;
    cursor: help;
}

/* -- code displays --------------------------------------------------------- */

pre {
    overflow: auto;
    overflow-y: hidden;  /* fixes display issues on Chrome browsers */
}

td.linenos pre {
    padding: 5px 0px;
    border: 0;
    background-color: transparent;
    color: #aaa;
}

table.highlighttable {
    margin-left: 0.5em;
}

table.highlighttable td {
    padding: 0 0.5em 0 0.5em;
}

tt.descname {
    background-color: transparent;
    font-weight: bold;
    font-size: 1.2em;
}

tt.descclassname {
    background-color: transparent;
}

tt.xref, a tt {
    background-color: transparent;
    font-weight: bold;
}

h1 tt, h2 tt, h3 tt, h4 tt, h5 tt, h6 tt {
    background-color: transparent;
}

.viewcode-link {
    float: right;
}

.viewcode-back {
    float: right;
    font-family: sans-serif;
}

div.viewcode-block:target {
    margin: -1px -10px;
    padding: 0 10px;
}

/* -- math display ---------------------------------------------------------- */

img.math {
    vertical-align: middle;
}

div.body div.math p {
    text-align: center;
}

span.eqno {
    float: right;
}

/* -- printout stylesheet --------------------------------------------------- */

@media print {
    div.document,
    div.documentwrapper,
    div.bodywrapper {
        margin: 0 !important;
        width: 100%;
    }

    div.sphinxsidebar,
    div.related,
    div.footer,
    #top-link {
        display: none;
    }
}
------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/bg-page.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAAwAAABoCAIAAABKcob8AAAABGdBTUEAALGPC/xh
BQAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB9kIFxAKEhEr+RIAAAAzSURB
VEjH7dCxDQAgDASxgNh/1Vc2YASoI1/t6laSerXrIwiCIAiCIAiCJqDT3T5Bk9EF
a2wGchmkF9cAAAAASUVORK5CYII=
------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/bullet_orange.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAAYAAAAGCAMAAADXEh96AAAAYFBMVEXgfir/zJP/
u23gqX/37OX/nDf/3rX/wYL3uX//2KvviCr/xYv/vHr/tG7/y4X+8eXqhSr/oTz/
xYb/4bz/v3T/9Ojjqn////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACU4p+EAAAA
AWJLR0QfBQ0QvQAAAAlwSFlzAAAASAAAAEgARslrPgAAAAl2cEFnAAAABgAAAAYA
ldH5kgAAAC9JREFUCNcFwQkCABAIBMB1hpCE/z/VDC6rkoDZci9Qm8c1pHr8Bqi7
PR6kLIT4ASUEAZoGJjvOAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDEwLTAxLTA3VDEy
OjQ5OjA2KzAxOjAwOpF5yAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxMC0wMS0wN1Qx
Mjo0OTowNiswMTowMEvMwXQAAAAASUVORK5CYII=

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=haiku.css
Content-Type: text/css; name=haiku.css
Content-Location: http://tutorial.symblog.co.uk/_static/haiku.css
Content-Transfer-Encoding: 8bit

/*
 * haiku.css_t
 * ~~~~~~~~~~~
 *
 * Sphinx stylesheet -- haiku theme.
 *
 * Adapted from http://haiku-os.org/docs/Haiku-doc.css.
 * Original copyright message:
 *
 *     Copyright 2008-2009, Haiku. All rights reserved.
 *     Distributed under the terms of the MIT License.
 *
 *     Authors:
 *              Francois Revol <revol@free.fr>
 *              Stephan Assmus <superstippi@gmx.de>
 *              Braden Ewing <brewin@gmail.com>
 *              Humdinger <humdingerb@gmail.com>
 *
 * :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */

@import url("basic.css");

html {
    margin: 0px;
    padding: 0px;
    background: #FFF url(bg-page.png) top left repeat-x;
}

body {
    line-height: 1.5;
    margin: auto;
    padding: 0px;
    font-family: "DejaVu Sans", Arial, Helvetica, sans-serif;
    min-width: 59em;
    max-width: 70em;
    color: #333333;
}

div.footer {
    padding: 8px;
    font-size: 11px;
    text-align: center;
    letter-spacing: 0.5px;
}

/* link colors and text decoration */

a:link {
    font-weight: bold;
    text-decoration: none;
    color: #dc3c01;
}

a:visited {
    font-weight: bold;
    text-decoration: none;
    color: #892601;
}

a:hover, a:active {
    text-decoration: underline;
    color: #ff4500;
}

/* Some headers act as anchors, don't give them a hover effect */

h1 a:hover, a:active {
    text-decoration: none;
    color: #0c3762;
}

h2 a:hover, a:active {
    text-decoration: none;
    color: #0c3762;
}

h3 a:hover, a:active {
    text-decoration: none;
    color: #0c3762;
}

h4 a:hover, a:active {
    text-decoration: none;
    color: #0c3762;
}

a.headerlink {
    color: #a7ce38;
    padding-left: 5px;
}

a.headerlink:hover {
    color: #a7ce38;
}

/* basic text elements */

div.content {
    margin-top: 20px;
    margin-left: 40px;
    margin-right: 40px;
    margin-bottom: 50px;
    font-size: 0.9em;
}

/* heading and navigation */

div.header {
    position: relative;
    left: 0px;
    top: 0px;
    height: 85px;
    /* background: #eeeeee; */
    padding: 0 40px;
}
div.header h1 {
    font-size: 1.6em;
    font-weight: normal;
    letter-spacing: 1px;
    color: #0c3762;
    border: 0;
    margin: 0;
    padding-top: 15px;
}
div.header h1 a {
    font-weight: normal;
    color: #0c3762;
}
div.header h2 {
    font-size: 1.3em;
    font-weight: normal;
    letter-spacing: 1px;
    text-transform: uppercase;
    color: #aaa;
    border: 0;
    margin-top: -3px;
    padding: 0;
}

div.header img.rightlogo {
    float: right;
}


div.title {
    font-size: 1.3em;
    font-weight: bold;
    color: #0c3762;
    border-bottom: dotted thin #e0e0e0;
    margin-bottom: 25px;
}
div.topnav {
    /* background: #e0e0e0; */
}
div.topnav p {
    margin-top: 0;
    margin-left: 40px;
    margin-right: 40px;
    margin-bottom: 0px;
    text-align: right;
    font-size: 0.8em;
}
div.bottomnav {
    background: #eeeeee;
}
div.bottomnav p {
    margin-right: 40px;
    text-align: right;
    font-size: 0.8em;
}

a.uplink {
    font-weight: normal;
}


/* contents box */

table.index {
    margin: 0px 0px 30px 30px;
    padding: 1px;
    border-width: 1px;
    border-style: dotted;
    border-color: #e0e0e0;
}
table.index tr.heading {
    background-color: #e0e0e0;
    text-align: center;
    font-weight: bold;
    font-size: 1.1em;
}
table.index tr.index {
    background-color: #eeeeee;
}
table.index td {
    padding: 5px 20px;
}

table.index a:link, table.index a:visited {
    font-weight: normal;
    text-decoration: none;
    color: #dc3c01;
}
table.index a:hover, table.index a:active {
    text-decoration: underline;
    color: #ff4500;
}


/* Haiku User Guide styles and layout */

/* Rounded corner boxes */
/* Common declarations */
div.admonition {
    -webkit-border-radius: 10px;
    -khtml-border-radius: 10px;
    -moz-border-radius: 10px;
    border-radius: 10px;
    border-style: dotted;
    border-width: thin;
    border-color: #dcdcdc;
    padding: 10px 15px 10px 15px;
    margin-bottom: 15px;
    margin-top: 15px;
}
div.note {
    padding: 10px 15px 10px 80px;
    background: #e4ffde url(alert_info_32.png) 15px 15px no-repeat;
    min-height: 42px;
}
div.warning {
    padding: 10px 15px 10px 80px;
    background: #fffbc6 url(alert_warning_32.png) 15px 15px no-repeat;
    min-height: 42px;
}
div.seealso {
    background: #e4ffde;
}

/* More layout and styles */
h1 {
    font-size: 1.3em;
    font-weight: bold;
    color: #0c3762;
    border-bottom: dotted thin #e0e0e0;
    margin-top: 30px;
}

h2 {
    font-size: 1.2em;
    font-weight: normal;
    color: #0c3762;
    border-bottom: dotted thin #e0e0e0;
    margin-top: 30px;
}

h3 {
    font-size: 1.1em;
    font-weight: normal;
    color: #0c3762;
    margin-top: 30px;
}

h4 {
    font-size: 1.0em;
    font-weight: normal;
    color: #0c3762;
    margin-top: 30px;
}

p {
    text-align: justify;
}

p.last {
    margin-bottom: 0;
}

ol {
    padding-left: 20px;
}

ul {
    padding-left: 5px;
    margin-top: 3px;
}

li {
    line-height: 1.3;
}

div.content ul > li {
    -moz-background-clip:border;
    -moz-background-inline-policy:continuous;
    -moz-background-origin:padding;
    background: transparent url(bullet_orange.png) no-repeat scroll left 0.45em;
    list-style-image: none;
    list-style-type: none;
    padding: 0 0 0 1.666em;
    margin-bottom: 3px;
}

td {
    vertical-align: top;
}

tt {
    background-color: #e2e2e2;
    font-size: 1.0em;
    font-family: monospace;
}

pre {
    border-color: #0c3762;
    border-style: dotted;
    border-width: thin;
    margin: 0 0 12px 0;
    padding: 0.8em;
    background-color: #f0f0f0;
}

hr {
    border-top: 1px solid #ccc;
    border-bottom: 0;
    border-right: 0;
    border-left: 0;
    margin-bottom: 10px;
    margin-top: 20px;
}

/* printer only pretty stuff */
@media print {
    .noprint {
        display: none;
    }
    /* for acronyms we want their definitions inlined at print time */
    acronym[title]:after {
        font-size: small;
        content: " (" attr(title) ")";
        font-style: italic;
    }
    /* and not have mozilla dotted underline */
    acronym {
        border: none;
    }
    div.topnav, div.bottomnav, div.header, table.index {
        display: none;
    }
    div.content {
        margin: 0px;
        padding: 0px;
    }
    html {
        background: #FFF;
    }
}

.viewcode-back {
    font-family: "DejaVu Sans", Arial, Helvetica, sans-serif;
}

div.viewcode-block:target {
    background-color: #f4debf;
    border-top: 1px solid #ac9;
    border-bottom: 1px solid #ac9;
    margin: -1px -12px;
    padding: 0 12px;
}
------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=pygments.css
Content-Type: text/css; name=pygments.css
Content-Location: http://tutorial.symblog.co.uk/_static/pygments.css
Content-Transfer-Encoding: 8bit

.highlight .hll { background-color: #ffffcc }
.highlight  { background: #eeffcc; }
.highlight .c { color: #408090; font-style: italic } /* Comment */
.highlight .err { border: 1px solid #FF0000 } /* Error */
.highlight .k { color: #007020; font-weight: bold } /* Keyword */
.highlight .o { color: #666666 } /* Operator */
.highlight .cm { color: #408090; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #007020 } /* Comment.Preproc */
.highlight .c1 { color: #408090; font-style: italic } /* Comment.Single */
.highlight .cs { color: #408090; background-color: #fff0f0 } /* Comment.Special */
.highlight .gd { color: #A00000 } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #FF0000 } /* Generic.Error */
.highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */
.highlight .gi { color: #00A000 } /* Generic.Inserted */
.highlight .go { color: #303030 } /* Generic.Output */
.highlight .gp { color: #c65d09; font-weight: bold } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
.highlight .gt { color: #0040D0 } /* Generic.Traceback */
.highlight .kc { color: #007020; font-weight: bold } /* Keyword.Constant */
.highlight .kd { color: #007020; font-weight: bold } /* Keyword.Declaration */
.highlight .kn { color: #007020; font-weight: bold } /* Keyword.Namespace */
.highlight .kp { color: #007020 } /* Keyword.Pseudo */
.highlight .kr { color: #007020; font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #902000 } /* Keyword.Type */
.highlight .m { color: #208050 } /* Literal.Number */
.highlight .s { color: #4070a0 } /* Literal.String */
.highlight .na { color: #4070a0 } /* Name.Attribute */
.highlight .nb { color: #007020 } /* Name.Builtin */
.highlight .nc { color: #0e84b5; font-weight: bold } /* Name.Class */
.highlight .no { color: #60add5 } /* Name.Constant */
.highlight .nd { color: #555555; font-weight: bold } /* Name.Decorator */
.highlight .ni { color: #d55537; font-weight: bold } /* Name.Entity */
.highlight .ne { color: #007020 } /* Name.Exception */
.highlight .nf { color: #06287e } /* Name.Function */
.highlight .nl { color: #002070; font-weight: bold } /* Name.Label */
.highlight .nn { color: #0e84b5; font-weight: bold } /* Name.Namespace */
.highlight .nt { color: #062873; font-weight: bold } /* Name.Tag */
.highlight .nv { color: #bb60d5 } /* Name.Variable */
.highlight .ow { color: #007020; font-weight: bold } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mf { color: #208050 } /* Literal.Number.Float */
.highlight .mh { color: #208050 } /* Literal.Number.Hex */
.highlight .mi { color: #208050 } /* Literal.Number.Integer */
.highlight .mo { color: #208050 } /* Literal.Number.Oct */
.highlight .sb { color: #4070a0 } /* Literal.String.Backtick */
.highlight .sc { color: #4070a0 } /* Literal.String.Char */
.highlight .sd { color: #4070a0; font-style: italic } /* Literal.String.Doc */
.highlight .s2 { color: #4070a0 } /* Literal.String.Double */
.highlight .se { color: #4070a0; font-weight: bold } /* Literal.String.Escape */
.highlight .sh { color: #4070a0 } /* Literal.String.Heredoc */
.highlight .si { color: #70a0d0; font-style: italic } /* Literal.String.Interpol */
.highlight .sx { color: #c65d09 } /* Literal.String.Other */
.highlight .sr { color: #235388 } /* Literal.String.Regex */
.highlight .s1 { color: #4070a0 } /* Literal.String.Single */
.highlight .ss { color: #517918 } /* Literal.String.Symbol */
.highlight .bp { color: #007020 } /* Name.Builtin.Pseudo */
.highlight .vc { color: #bb60d5 } /* Name.Variable.Class */
.highlight .vg { color: #bb60d5 } /* Name.Variable.Global */
.highlight .vi { color: #bb60d5 } /* Name.Variable.Instance */
.highlight .il { color: #208050 } /* Literal.Number.Integer.Long */
------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=jquery.js
Content-Type: text/javascript; name=jquery.js
Content-Location: http://tutorial.symblog.co.uk/_static/jquery.js
Content-Transfer-Encoding: 8bit

/*!
 * jQuery JavaScript Library v1.4.2
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Sat Feb 13 22:33:48 2010 -0500
 */
(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalEval(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.length;if(typeof b==="object"){for(var o in b)X(a,o,b[o],f,e,d);return a}if(d!==w){f=!j&&f&&c.isFunction(d);for(o=0;o<i;o++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j);return a}return i?
e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=a;return c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,r;i=c.data(this,"events");if(!(a.liveFired===this||!i||!i.live||a.button&&a.type==="click")){a.liveFired=this;var u=i.live.slice(0);for(k=0;k<u.length;k++){i=u[k];i.origType.replace(O,"")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget);n=0;for(r=
j.length;n<r;n++)for(k=0;k<u.length;k++){i=u[k];if(j[n].selector===i.selector){o=j[n].elem;f=null;if(i.preType==="mouseenter"||i.preType==="mouseleave")f=c(a.relatedTarget).closest(i.selector)[0];if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0;for(r=d.length;n<r;n++){j=d[n];a.currentTarget=j.elem;a.data=j.handleObj.data;a.handleObj=j.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)===false){b=false;break}}return b}}function pa(a,b){return"live."+(a&&a!=="*"?a+".":"")+b.replace(/\./g,"`").replace(/ /g,
"&")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0;b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f);if(f=f&&f.events){delete e.handle;e.events={};for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,j;b=b&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length===1&&typeof a[0]==="string"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=
true;if(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1;return{fragment:f,cacheable:e}}function K(a,b){var d={};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a});return d}function wa(a){return"scrollTo"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,Ua=/^.[^:#\[\.,]*$/,Va=/\S/,
Wa=/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOf;c.fn=c.prototype={init:function(a,b){var d,f;if(!a)return this;if(a.nodeType){this.context=this[0]=a;this.length=1;return this}if(a==="body"&&!b){this.context=s;this[0]=s.body;this.selector="body";this.length=1;return this}if(typeof a==="string")if((d=Ta.exec(a))&&
(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:s;if(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])];else{a=sa([d[1]],[f]);a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a);this.length=1;this[0]=b}this.context=s;this.selector=a;return this}else if(!b&&/^\w+$/.test(a)){this.selector=a;this.context=s;a=s.getElementsByTagName(a);return c.merge(this,
a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else if(c.isFunction(a))return T.ready(a);if(a.selector!==w){this.selector=a.selector;this.context=a.context}return c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=this;f.context=this.context;if(b===
"find")f.selector=this.selector+(this.selector?" ":"")+d;else if(b)f.selector=this.selector+"."+b+"("+d+")";return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c);else Q&&Q.push(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","))},map:function(a){return this.pushStack(c.map(this,
function(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.init.prototype=c.fn;c.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,o;if(typeof a==="boolean"){f=a;a=arguments[1]||{};b=2}if(typeof a!=="object"&&!c.isFunction(a))a={};if(d===b){a=this;--b}for(;b<d;b++)if((e=arguments[b])!=null)for(j in e){i=a[j];o=e[j];if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||
c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a};c.extend({noConflict:function(a){A.$=Sa;if(a)A.jQuery=Ra;return c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13);c.isReady=true;if(Q){for(var a,b=0;a=Q[b++];)a.call(s,c);Q=null}c.fn.triggerHandler&&c(s).triggerHandler("ready")}},bindReady:function(){if(!xa){xa=true;if(s.readyState==="complete")return c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",
L,false);A.addEventListener("load",c.ready,false)}else if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("onload",c.ready);var a=false;try{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)==="[object Function]"},isArray:function(a){return $.call(a)==="[object Array]"},isPlainObject:function(a){if(!a||$.call(a)!=="[object Object]"||a.nodeType||a.setInterval)return false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor.prototype,
"isPrototypeOf"))return false;var b;for(b in a);return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return false;return true},error:function(a){throw a;},parseJSON:function(a){if(typeof a!=="string"||!a)return null;a=c.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+
a))();else c.error("Invalid JSON: "+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName("head")[0]||s.documentElement,d=s.createElement("script");d.type="text/javascript";if(c.support.scriptEval)d.appendChild(s.createTextNode(a));else d.text=a;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a);if(d)if(i)for(f in a){if(b.apply(a[f],
d)===false)break}else for(;e<j;){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0];e<j&&b.call(d,e,d)!==false;d=a[++e]);return a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b){b=b||[];if(a!=null)a.length==null||typeof a==="string"||c.isFunction(a)||typeof a!=="function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var d=0,f=b.length;d<f;d++)if(b[d]===
a)return d;return-1},merge:function(a,b){var d=a.length,f=0;if(typeof b.length==="number")for(var e=b.length;f<e;f++)a[d++]=b[f];else for(;b[f]!==w;)a[d++]=b[f++];a.length=d;return a},grep:function(a,b,d){for(var f=[],e=0,j=a.length;e<j;e++)!d!==!b(a[e],e)&&f.push(a[e]);return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.length;j<i;j++){e=b(a[j],j,d);if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b==="string"){d=a;a=d[b];b=w}else if(b&&
!c.isFunction(b)){d=b;b=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)};if(a)b.guid=a.guid=a.guid||b.guid||c.guid++;return b},uaMatch:function(a){a=a.toLowerCase();a=/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},browser:{}});P=c.uaMatch(P);if(P.browser){c.browser[P.browser]=true;c.browser.version=P.version}if(c.browser.webkit)c.browser.safari=
true;if(ya)c.inArray=function(a,b){return ya.call(b,a)};T=c(s);if(s.addEventListener)L=function(){s.removeEventListener("DOMContentLoaded",L,false);c.ready()};else if(s.attachEvent)L=function(){if(s.readyState==="complete"){s.detachEvent("onreadystatechange",L);c.ready()}};(function(){c.support={};var a=s.documentElement,b=s.createElement("script"),d=s.createElement("div"),f="script"+J();d.style.display="none";d.innerHTML="   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
var e=d.getElementsByTagName("*"),j=d.getElementsByTagName("a")[0];if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.getElementsByTagName("link").length,style:/red/.test(j.getAttribute("style")),hrefNormalized:j.getAttribute("href")==="/a",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName("input")[0].value==="on",optSelected:s.createElement("select").appendChild(s.createElement("option")).selected,
parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null};b.type="text/javascript";try{b.appendChild(s.createTextNode("window."+f+"=1;"))}catch(i){}a.insertBefore(b,a.firstChild);if(A[f]){c.support.scriptEval=true;delete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b);if(d.attachEvent&&d.fireEvent){d.attachEvent("onclick",function k(){c.support.noCloneEvent=
false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")}d=s.createElement("div");d.innerHTML="<input type='radio' name='radiotest' checked='checked'/>";a=s.createDocumentFragment();a.appendChild(d.firstChild);c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checked;c(function(){var k=s.createElement("div");k.style.width=k.style.paddingLeft="1px";s.body.appendChild(k);c.boxModel=c.support.boxModel=k.offsetWidth===2;s.body.removeChild(k).style.display="none"});a=function(k){var n=
s.createElement("div");k="on"+k;var r=k in n;if(!r){n.setAttribute(k,"return;");r=typeof n[k]==="function"}return r};c.support.submitBubbles=a("submit");c.support.changeBubbles=a("change");a=b=d=e=j=null}})();c.props={"for":"htmlFor","class":"className",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpacing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useMap",frameborder:"frameBorder"};var G="jQuery"+J(),Ya=0,za={};c.extend({cache:{},expando:G,noData:{embed:true,object:true,
applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var f=a[G],e=c.cache;if(!f&&typeof b==="string"&&d===w)return null;f||(f=++Ya);if(typeof b==="object"){a[G]=f;e[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=f;e[f]={}}a=e[f];if(d!==w)a[b]=d;return typeof b==="string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:a;var d=a[G],f=c.cache,e=f[d];if(b){if(e){delete e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando];
else a.removeAttribute&&a.removeAttribute(c.expando);delete f[d]}}}});c.fn.extend({data:function(a,b){if(typeof a==="undefined"&&this.length)return c.data(this[0]);else if(typeof a==="object")return this.each(function(){c.data(this,a)});var d=a.split(".");d[1]=d[1]?"."+d[1]:"";if(b===w){var f=this.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f===w&&this.length)f=c.data(this[0],a);return f===w&&d[1]?this.data(d[0]):f}else return this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,
a,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a,b,d){if(a){b=(b||"fx")+"queue";var f=c.data(a,b);if(!d)return f||[];if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d));else f.push(d);return f}},dequeue:function(a,b){b=b||"fx";var d=c.queue(a,b),f=d.shift();if(f==="inprogress")f=d.shift();if(f){b==="fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof a!=="string"){b=a;a="fx"}if(b===
w)return c.queue(this[0],a);return this.each(function(){var d=c.queue(this,a,b);a==="fx"&&d[0]!=="inprogress"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:a;b=b||"fx";return this.queue(b,function(){var d=this;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])}});var Aa=/[\n\t]/g,ca=/\s+/,Za=/\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,
cb=/^(a|area)$/i,Ba=/radio|checkbox/;c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,"");this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof a==="string")for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1)if(e.className){for(var j=" "+e.className+" ",
i=e.className,o=0,k=b.length;o<k;o++)if(j.indexOf(" "+b[o]+" ")<0)i+=" "+b[o];e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof a==="string"||a===w)for(var b=(a||"").split(ca),d=0,f=this.length;d<f;d++){var e=this[d];if(e.nodeType===1&&e.className)if(a){for(var j=(" "+e.className+" ").replace(Aa," "),i=0,o=b.length;i<o;i++)j=j.replace(" "+b[i]+" ",
" ");e.className=c.trim(j)}else e.className=""}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b==="boolean";if(c.isFunction(a))return this.each(function(e){var j=c(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return this.each(function(){if(d==="string")for(var e,j=0,i=c(this),o=b,k=a.split(ca);e=k[j++];){o=f?o:!i.hasClass(e);i[o?"addClass":"removeClass"](e)}else if(d==="undefined"||d==="boolean"){this.className&&c.data(this,"__className__",this.className);this.className=
this.className||a===false?"":c.data(this,"__className__")||""}})},hasClass:function(a){a=" "+a+" ";for(var b=0,d=this.length;b<d;b++)if((" "+this[b].className+" ").replace(Aa," ").indexOf(a)>-1)return true;return false},val:function(a){if(a===w){var b=this[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}).specified?b.value:b.text;if(c.nodeName(b,"select")){var d=b.selectedIndex,f=[],e=b.options;b=b.type==="select-one";if(d<0)return null;var j=b?d:0;for(d=b?d+1:e.length;j<d;j++){var i=
e[j];if(i.selected){a=c(i).val();if(b)return a;f.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute("value")===null?"on":b.value;return(b.value||"").replace(Za,"")}return w}var o=c.isFunction(a);return this.each(function(k){var n=c(this),r=a;if(this.nodeType===1){if(o)r=a.call(this,k,n.val());if(typeof r==="number")r+="";if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0;else if(c.nodeName(this,"select")){var u=c.makeArray(r);c("option",this).each(function(){this.selected=
c.inArray(c(this).val(),u)>=0});if(!u.length)this.selectedIndex=-1}else this.value=r}})}});c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return w;if(f&&b in c.attrFn)return c(a)[b](d);f=a.nodeType!==1||!c.isXMLDoc(a);var e=d!==w;b=f&&c.props[b]||b;if(a.nodeType===1){var j=$a.test(b);if(b in a&&f&&!j){if(e){b==="type"&&ab.test(a.nodeName)&&a.parentNode&&c.error("type property can't be changed");
a[b]=d}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValue;if(b==="tabIndex")return(b=a.getAttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:w;return a[b]}if(!c.support.style&&f&&b==="style"){if(e)a.style.cssText=""+d;return a.style.cssText}e&&a.setAttribute(b,""+d);a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b);return a===null?w:a}return c.style(a,b,d)}});var O=/\.(.*)$/,db=function(a){return a.replace(/[^\w\s\.\|`]/g,
function(b){return"\\"+b})};c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=A;var e,j;if(d.handler){e=d;d=e.handler}if(!d.guid)d.guid=c.guid++;if(j=c.data(a)){var i=j.events=j.events||{},o=j.handle;if(!o)j.handle=o=function(){return typeof c!=="undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w};o.elem=a;b=b.split(" ");for(var k,n=0,r;k=b[n++];){j=e?c.extend({},e):{handler:d,data:f};if(k.indexOf(".")>-1){r=k.split(".");
k=r.shift();j.namespace=r.slice(0).sort().join(".")}else{r=[];j.namespace=""}j.type=k;j.guid=d.guid;var u=i[k],z=c.event.special[k]||{};if(!u){u=i[k]=[];if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false);else a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.handler.guid)j.handler.guid=d.guid}u.push(j);c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),
C=z&&z.events;if(z&&C){if(b&&b.type){d=b.handler;b=b.type}if(!b||typeof b==="string"&&b.charAt(0)==="."){b=b||"";for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(" ");e=b[j++];){n=e;i=e.indexOf(".")<0;o=[];if(!i){o=e.split(".");e=o.shift();k=new RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|$)")}if(r=C[e])if(d){n=c.event.special[e]||{};for(B=f||0;B<r.length;B++){u=r[B];if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=
null)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle);delete C[e]}}else for(var B=0;B<r.length;B++){u=r[B];if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=null;delete z.events;delete z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||a;if(!f){a=typeof a==="object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf("!")>=0){a.type=
e=e.slice(0,-1);a.exclusive=true}if(!d){a.stopPropagation();c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return w;a.result=w;a.target=d;b=c.makeArray(b);b.unshift(a)}a.currentTarget=d;(f=c.data(d,"handle"))&&f.apply(d,b);f=d.parentNode||d.ownerDocument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["on"+e]&&d["on"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&
f)c.event.trigger(a,b,f,true);else if(!a.isDefaultPrevented()){f=a.target;var i,o=c.nodeName(f,"a")&&e==="click",k=c.event.special[e]||{};if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f["on"+e])f["on"+e]=null;c.event.triggered=true;f[e]()}}catch(n){}if(i)f["on"+e]=i;c.event.triggered=false}}},handle:function(a){var b,d,f,e;a=arguments[0]=c.event.fix(a||A.event);a.currentTarget=this;b=a.type.indexOf(".")<0&&!a.exclusive;
if(!b){d=a.type.split(".");a.type=d.shift();f=new RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=c.data(this,"events");d=e[a.type];if(e&&d){d=d.slice(0);e=0;for(var j=d.length;e<j;e++){var i=d[e];if(b||f.test(i.namespace)){a.handler=i.handler;a.data=i.data;a.handleObj=i;i=i.handler.apply(this,arguments);if(i!==w){a.result=i;if(i===false){a.preventDefault();a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
fix:function(a){if(a[G])return a;var b=a;a=c.Event(b);for(var d=this.props.length,f;d;){f=this.props[--d];a[f]=b[f]}if(!a.target)a.target=a.srcElement||s;if(a.target.nodeType===3)a.target=a.target.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement;if(a.pageX==null&&a.clientX!=null){b=s.documentElement;d=s.body;a.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0);a.pageY=a.clientY+(b&&b.scrollTop||
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKey;if(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0;return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,"");c.each(c.data(this,
"events").live||[],function(){if(d===this.origType.replace(O,""))return b=false});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=d;return false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}};var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=function(a){if(!this.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=
a;this.type=a.type}else this.type=a;this.timeStamp=J();this[G]=true};c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Z;var a=this.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Z;var a=this.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Z;this.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,
isImmediatePropagationStopped:Y};var Da=function(a){var b=a.relatedTarget;try{for(;b&&b!==this;)b=b.parentNode;if(b!==this){a.type=a.data;c.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.data;c.event.handle.apply(this,arguments)};c.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(!c.support.submitBubbles)c.event.special.submit=
{setup:function(){if(this.nodeName.toLowerCase()!=="form"){c.event.add(this,"click.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="submit"||d==="image")&&c(b).closest("form").length)return na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,d=b.type;if((d==="text"||d==="password")&&c(b).closest("form").length&&a.keyCode===13)return na("submit",this,arguments)})}else return false},teardown:function(){c.event.remove(this,".specialSubmit")}};
if(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.value;if(b==="radio"||b==="checkbox")d=a.checked;else if(b==="select-multiple")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join("-"):"";else if(a.nodeName.toLowerCase()==="select")d=a.selectedIndex;return d},fa=function(a,b){var d=a.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,"_change_data");e=Fa(d);if(a.type!=="focusout"||d.type!=="radio")c.data(d,"_change_data",
e);if(!(f===w||e===f))if(f!=null||e){a.type="change";return c.event.trigger(a,b,d)}}};c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.type;if(d==="radio"||d==="checkbox"||b.nodeName.toLowerCase()==="select")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.type;if(a.keyCode===13&&b.nodeName.toLowerCase()!=="textarea"||a.keyCode===32&&(d==="checkbox"||d==="radio")||d==="select-multiple")return fa.call(this,a)},beforeactivate:function(a){a=a.target;c.data(a,
"_change_data",Fa(a))}},setup:function(){if(this.type==="file")return false;for(var a in ea)c.event.add(this,a+".specialChange",ea[a]);return da.test(this.nodeName)},teardown:function(){c.event.remove(this,".specialChange");return da.test(this.nodeName)}};ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function d(f){f=c.event.fix(f);f.type=b;return c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,
d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.each(["bind","one"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d==="object"){for(var j in d)this[b](j,f,d[j],e);return this}if(c.isFunction(f)){e=f;f=w}var i=b==="one"?c.proxy(e,function(k){c(this).unbind(k,i);return e.apply(this,arguments)}):e;if(d==="unload"&&b!=="one")this.one(d,f,e);else{j=0;for(var o=this.length;j<o;j++)c.event.add(this[j],d,i,f)}return this}});c.fn.extend({unbind:function(a,b){if(typeof a==="object"&&
!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=0;for(var f=this.length;d<f;d++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind("live"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a);a.preventDefault();a.stopPropagation();c.event.trigger(a,b,this[0]);return a.result}},
toggle:function(a){for(var b=arguments,d=1;d<b.length;)c.proxy(a,b[d++]);return this.click(c.proxy(a,function(f){var e=(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.guid,e+1);f.preventDefault();return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Ga={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,
u=j?this:c(this.context);if(c.isFunction(f)){e=f;f=w}for(d=(d||"").split(" ");(i=d[o++])!=null;){j=O.exec(i);k="";if(j){k=j[0];i=i.replace(O,"")}if(i==="hover")d.push("mouseenter"+k,"mouseleave"+k);else{n=i;if(i==="focus"||i==="blur"){d.push(Ga[i]+k);i+=k}else i=(Ga[i]||i)+k;b==="live"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),
function(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=true});A.attachEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}});(function(){function a(g){for(var h="",l,m=0;g[m];m++){l=g[m];if(l.nodeType===3||l.nodeType===4)h+=l.nodeValue;else if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];
if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1&&!p){t.sizcache=l;t.sizset=q}if(t.nodeName.toLowerCase()===h){y=t;break}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0;for(var v=m.length;q<v;q++){var t=m[q];if(t){t=t[g];for(var y=false;t;){if(t.sizcache===l){y=m[t.sizset];break}if(t.nodeType===1){if(!p){t.sizcache=l;t.sizset=q}if(typeof h!=="string"){if(t===h){y=true;break}}else if(k.filter(h,[t]).length>0){y=t;break}}t=t[g]}m[q]=y}}}var f=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
e=0,j=Object.prototype.toString,i=false,o=true;[0,0].sort(function(){o=false;return 0});var k=function(g,h,l,m){l=l||[];var q=h=h||s;if(h.nodeType!==1&&h.nodeType!==9)return[];if(!g||typeof g!=="string")return l;for(var p=[],v,t,y,S,H=true,M=x(h),I=g;(f.exec(""),v=f.exec(I))!==null;){I=v[3];p.push(v[1]);if(v[2]){S=v[3];break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h);else for(t=n.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=p.shift();if(n.relative[g])g+=p.shift();
t=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M);h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]==="~"||p[0]==="+")&&h.parentNode?h.parentNode:h,M);t=v.expr?k.filter(v.expr,v.set):v.set;if(p.length>0)y=z(t);else H=false;for(;p.length;){var D=p.pop();v=D;if(n.relative[D])v=p.pop();else D="";if(v==null)v=h;n.relative[D](y,v,M)}}else y=[]}y||(y=t);y||k.error(D||
g);if(j.call(y)==="[object Array]")if(H)if(h&&h.nodeType===1)for(g=0;y[g]!=null;g++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0;y[g]!=null;g++)y[g]&&y[g].nodeType===1&&l.push(t[g]);else l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return l};k.uniqueSort=function(g){if(B){i=o;g.sort(B);if(i)for(var h=1;h<g.length;h++)g[h]===g[h-1]&&g.splice(h--,1)}return g};k.matches=function(g,h){return k(g,null,null,h)};k.find=function(g,h,l){var m,q;if(!g)return[];
for(var p=0,v=n.order.length;p<v;p++){var t=n.order[p];if(q=n.leftMatch[t].exec(g)){var y=q[1];q.splice(1,1);if(y.substr(y.length-1)!=="\\"){q[1]=(q[1]||"").replace(/\\/g,"");m=n.find[t](q,h,l);if(m!=null){g=g.replace(n.match[t],"");break}}}}m||(m=h.getElementsByTagName("*"));return{set:m,expr:g}};k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0]);g&&h.length;){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,D;D=t[1];y=false;t.splice(1,1);if(D.substr(D.length-
1)!=="\\"){if(v===p)p=[];if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=true;if(t)for(var U=0;(D=v[U])!=null;U++)if(D){I=M(D,t,U,v);var Ha=m^!!I;if(l&&I!=null)if(Ha)y=true;else v[U]=false;else if(Ha){p.push(D);y=true}}if(I!==w){l||(v=p);g=g.replace(n.match[H],"");if(!y)return[];break}}}if(g===q)if(y==null)k.error(g);else break;q=g}return v};k.error=function(g){throw"Syntax error, unrecognized expression: "+g;};var n=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF-]|\\.)+)/,
CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(g){return g.getAttribute("href")}},
relative:{"+":function(g,h){var l=typeof h==="string",m=l&&!/\W/.test(h);l=l&&!m;if(m)h=h.toLowerCase();m=0;for(var q=g.length,p;m<q;m++)if(p=g[m]){for(;(p=p.previousSibling)&&p.nodeType!==1;);g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},">":function(g,h){var l=typeof h==="string";if(l&&!/\W/.test(h)){h=h.toLowerCase();for(var m=0,q=g.length;m<q;m++){var p=g[m];if(p){l=p.parentNode;g[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0;for(q=g.length;m<q;m++)if(p=g[m])g[m]=
l?p.parentNode:p.parentNode===h;l&&k.filter(h,g,true)}},"":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("parentNode",h,m,g,p,l)},"~":function(g,h,l){var m=e++,q=d;if(typeof h==="string"&&!/\W/.test(h)){var p=h=h.toLowerCase();q=b}q("previousSibling",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!=="undefined"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!=="undefined"){var l=[];
h=h.getElementsByName(g[1]);for(var m=0,q=h.length;m<q;m++)h[m].getAttribute("name")===g[1]&&l.push(h[m]);return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=0;for(var v;(v=h[p])!=null;p++)if(v)if(q^(v.className&&(" "+v.className+" ").replace(/[\t\n]/g," ").indexOf(g)>=0))l||m.push(v);else if(l)h[p]=false;return false},ID:function(g){return g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},
CHILD:function(g){if(g[1]==="nth"){var h=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]==="even"&&"2n"||g[2]==="odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=h[1]+(h[2]||1)-0;g[3]=h[3]-0}g[0]=e++;return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\/g,"");if(!p&&n.attrMap[h])g[1]=n.attrMap[h];if(g[2]==="~=")g[4]=" "+g[4]+" ";return g},PSEUDO:function(g,h,l,m,q){if(g[1]==="not")if((f.exec(g[3])||"").length>1||/^\w/.test(g[3]))g[3]=k(g[3],null,null,h);else{g=k.filter(g[3],h,l,true^q);l||m.push.apply(m,
g);return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return g},POS:function(g){g.unshift(true);return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!=="hidden"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\d/i.test(g.nodeName)},
text:function(g){return"text"===g.type},radio:function(g){return"radio"===g.type},checkbox:function(g){return"checkbox"===g.type},file:function(g){return"file"===g.type},password:function(g){return"password"===g.type},submit:function(g){return"submit"===g.type},image:function(g){return"image"===g.type},reset:function(g){return"reset"===g.type},button:function(g){return"button"===g.type||g.nodeName.toLowerCase()==="button"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},
setFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q];if(p)return p(g,l,h,m);else if(q==="contains")return(g.textContent||g.innerText||a([g])||"").indexOf(h[3])>=0;else if(q==="not"){h=
h[3];l=0;for(m=h.length;l<m;l++)if(h[l]===g)return false;return true}else k.error("Syntax error, unrecognized expression: "+q)},CHILD:function(g,h){var l=h[1],m=g;switch(l){case "only":case "first":for(;m=m.previousSibling;)if(m.nodeType===1)return false;if(l==="first")return true;m=g;case "last":for(;m=m.nextSibling;)if(m.nodeType===1)return false;return true;case "nth":l=h[2];var q=h[3];if(l===1&&q===0)return true;h=h[0];var p=g.parentNode;if(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0;for(m=p.firstChild;m;m=
m.nextSibling)if(m.nodeType===1)m.nodeIndex=++v;p.sizcache=h}g=g.nodeIndex-q;return l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute("id")===h},TAG:function(g,h){return h==="*"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" ").indexOf(h)>-1},ATTR:function(g,h){var l=h[1];g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l);l=g+"";var m=h[2];h=h[4];return g==null?m==="!=":m===
"="?l===h:m==="*="?l.indexOf(h)>=0:m==="~="?(" "+l+" ").indexOf(h)>=0:!h?l&&g!==false:m==="!="?l!==h:m==="^="?l.indexOf(h)===0:m==="$="?l.substr(l.length-h.length)===h:m==="|="?l===h||l.substr(0,h.length+1)===h+"-":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=n.match.POS;for(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u]=new RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,function(g,
h){return"\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0);if(h){h.push.apply(h,g);return h}return g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[];if(j.call(g)==="[object Array]")Array.prototype.push.apply(h,g);else if(typeof g.length==="number")for(var l=0,m=g.length;l<m;l++)h.push(g[l]);else for(l=0;g[l];l++)h.push(g[l]);return h}}var B;if(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||
!h.compareDocumentPosition){if(g==h)i=true;return g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1;if(g===0)i=true;return g};else if("sourceIndex"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=true;return g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndex;if(g===0)i=true;return g};else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=true;return g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=
h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,0);m.setEnd(h,0);g=l.compareBoundaryPoints(Range.START_TO_END,m);if(g===0)i=true;return g};(function(){var g=s.createElement("div"),h="script"+(new Date).getTime();g.innerHTML="<a name='"+h+"'/>";var l=s.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!=="undefined"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!=="undefined"&&
q.getAttributeNode("id").nodeValue===m[1]?[q]:w:[]};n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!=="undefined"&&m.getAttributeNode("id");return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g);l=g=null})();(function(){var g=s.createElement("div");g.appendChild(s.createComment(""));if(g.getElementsByTagName("*").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1]);if(h[1]==="*"){h=[];for(var m=0;l[m];m++)l[m].nodeType===1&&h.push(l[m]);l=h}return l};g.innerHTML="<a href='#'></a>";
if(g.firstChild&&typeof g.firstChild.getAttribute!=="undefined"&&g.firstChild.getAttribute("href")!=="#")n.attrHandle.href=function(h){return h.getAttribute("href",2)};g=null})();s.querySelectorAll&&function(){var g=k,h=s.createElement("div");h.innerHTML="<p class='TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST").length===0)){k=function(m,q,p,v){q=q||s;if(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)};for(var l in g)k[l]=g[l];h=null}}();
(function(){var g=s.createElement("div");g.innerHTML="<div class='test e'></div><div class='test'></div>";if(!(!g.getElementsByClassName||g.getElementsByClassName("e").length===0)){g.lastChild.className="e";if(g.getElementsByClassName("e").length!==1){n.order.splice(1,0,"CLASS");n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!=="undefined"&&!m)return l.getElementsByClassName(h[1])};g=null}}})();var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:
function(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!=="HTML":false},ga=function(g,h){var l=[],m="",q;for(h=h.nodeType?[h]:h;q=n.match.PSEUDO.exec(g);){m+=q[0];g=g.replace(n.match.PSEUDO,"")}g=n.relative[g]?g+"*":g;q=0;for(var p=h.length;q<p;q++)k(g,h[q],l);return k.filter(m,l)};c.find=k;c.expr=k.selectors;c.expr[":"]=c.expr.filters;c.unique=k.uniqueSort;c.text=a;c.isXMLDoc=x;c.contains=E})();var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,
gb=/,/;R=Array.prototype.slice;var Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d});else if(b.nodeType)return c.grep(a,function(e){return e===b===d});else if(typeof b==="string"){var f=c.grep(a,function(e){return e.nodeType===1});if(Ua.test(b))return c.filter(b,f,!d);else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})};c.fn.extend({find:function(a){for(var b=this.pushStack("","find",a),d=0,f=0,e=this.length;f<e;f++){d=b.length;
c.find(a,this[f],b);if(f>0)for(var j=d;j<b.length;j++)for(var i=0;i<d;i++)if(b[i]===b[j]){b.splice(j--,1);break}}return b},has:function(a){var b=c(a);return this.filter(function(){for(var d=0,f=b.length;d<f;d++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=
{},i;if(f&&a.length){e=0;for(var o=a.length;e<o;e++){i=a[e];j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(;f&&f.ownerDocument&&f!==b;){for(i in j){e=j[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f});delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):null;return this.map(function(n,r){for(;r&&r.ownerDocument&&r!==b;){if(k?k.index(r)>-1:c(r).is(a))return r;r=r.parentNode}return null})},index:function(a){if(!a||typeof a===
"string")return c.inArray(this[0],a?c(a):this.parent().children());return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a==="string"?c(a,b||this.context):c.makeArray(a);b=c.merge(this.get(),a);return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}});c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return c.dir(a,"parentNode",
d)},next:function(a){return c.nth(a,2,"nextSibling")},prev:function(a){return c.nth(a,2,"previousSibling")},nextAll:function(a){return c.dir(a,"nextSibling")},prevAll:function(a){return c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return c.dir(a,"previousSibling",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,"iframe")?
a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d);eb.test(a)||(f=d);if(f&&typeof f==="string")e=c.filter(f,e);e=this.length>1?c.unique(e):e;if((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse();return this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:function(a,b,d){if(d)a=":not("+a+")";return c.find.matches(a,b)},dir:function(a,b,d){var f=[];for(a=a[b];a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d));){a.nodeType===
1&&f.push(a);a=a[b]}return f},nth:function(a,b,d){b=b||1;for(var f=0;a;a=a[d])if(a.nodeType===1&&++f===b)break;return a},sibling:function(a,b){for(var d=[];a;a=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a);return d}});var Ja=/ jQuery\d+="(?:\d+|null)"/g,V=/^\s+/,Ka=/(<([\w:]+)[^>]*?)\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\w:]+)/,ib=/<tbody/i,jb=/<|&#?\w+;/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\s*(?:[^=]|=\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?
a:b+"></"+d+">"},F={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]};F.optgroup=F.option;F.tbody=F.tfoot=F.colgroup=F.caption=F.thead;F.th=F.td;if(!c.support.htmlSerialize)F._default=[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=
c(this);d.text(a.call(this,b,d.text()))});if(typeof a!=="object"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a));return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.insertBefore(this[0]);b.map(function(){for(var d=this;d.firstChild&&d.firstChild.nodeType===1;)d=d.firstChild;return d}).append(this)}return this},
wrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))});return this.each(function(){var b=c(this),d=b.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},
prepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)});else if(arguments.length){var a=c(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,
this.nextSibling)});else if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0]).toArray());return a}},remove:function(a,b){for(var d=0,f;(f=this[d])!=null;d++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName("*"));c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);
return this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocument;if(!d){d=f.createElement("div");d.appendChild(this.cloneNode(true));d=d.innerHTML}return c.clean([d.replace(Ja,"").replace(/=([^="'>\s]+\/)>/g,'="$1">').replace(V,"")],f)[0]}else return this.cloneNode(true)});if(a===true){ra(this,b);ra(this.find("*"),b.find("*"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,
""):null;else if(typeof a==="string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Ka,Ma);try{for(var b=0,d=this.length;b<d;b++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName("*"));this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html();j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&
this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html();d.replaceWith(a.call(this,b,f))});if(typeof a!=="string")a=c(a).detach();return this.each(function(){var b=this.nextSibling,d=this.parentNode;c(this).remove();b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||
u.appendChild(u.ownerDocument.createElement("tbody")):u}var e,j,i=a[0],o=[],k;if(!c.support.checkClone&&arguments.length===3&&typeof i==="string"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))return this.each(function(u){var z=c(this);a[0]=i.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(this[0]){e=i&&i.parentNode;e=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o);k=e.fragment;if(j=k.childNodes.length===
1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,"tr");for(var n=0,r=this.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}});c.fragments={};c.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){c.fn[a]=function(d){var f=[];d=c(d);var e=this.length===1&&this[0].parentNode;if(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0]);
return this}else{e=0;for(var j=d.length;e<j;e++){var i=(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=f.concat(i)}return this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=b||s;if(typeof b.createElement==="undefined")b=b.ownerDocument||b[0]&&b[0].ownerDocument||s;for(var e=[],j=0,i;(i=a[j])!=null;j++){if(typeof i==="number")i+="";if(i){if(typeof i==="string"&&!jb.test(i))i=b.createTextNode(i);else if(typeof i==="string"){i=i.replace(Ka,Ma);var o=(La.exec(i)||["",
""])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement("div");for(r.innerHTML=k[1]+i+k[2];n--;)r=r.lastChild;if(!c.support.tbody){n=ib.test(i);o=o==="table"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]==="<table>"&&!n?r.childNodes:[];for(k=o.length-1;k>=0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=r.childNodes}if(i.nodeType)e.push(i);else e=
c.merge(e,i)}}if(d)for(j=0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!e[j].type||e[j].type.toLowerCase()==="text/javascript"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName("script"))));d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o;(o=a[i])!=null;i++)if(d=o[c.expando]){b=f[d];if(b.events)for(var k in b.events)e[k]?
c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\([^)]*\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\d+(?:px)?$/i,nb=/^-?\d/,ob={position:"absolute",visibility:"hidden",display:"block"},pb=["Left","Right"],qb=["Top","Bottom"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?"cssFloat":"styleFloat",ja=
function(a,b){return b.toUpperCase()};c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f);if(typeof e==="number"&&!kb.test(f))e+="px";c.style(d,f,e)})};c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return w;if((b==="width"||b==="height")&&parseFloat(d)<0)d=w;var f=a.style||a,e=d!==w;if(!c.support.opacity&&b==="opacity"){if(e){f.zoom=1;b=parseInt(d,10)+""==="NaN"?"":"alpha(opacity="+d*100+")";a=f.filter||c.curCSS(a,"filter")||"";f.filter=
Na.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf("opacity=")>=0?parseFloat(Oa.exec(f.filter)[1])/100+"":""}if(ha.test(b))b=Pa;b=b.replace(ia,ja);if(e)f[b]=d;return f[b]},css:function(a,b,d,f){if(b==="width"||b==="height"){var e,j=b==="width"?pb:qb;function i(){e=b==="width"?a.offsetWidth:a.offsetHeight;f!=="border"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,"padding"+this,true))||0);if(f==="margin")e+=parseFloat(c.curCSS(a,"margin"+this,true))||0;else e-=parseFloat(c.curCSS(a,
"border"+this+"Width",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i);return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.style;if(!c.support.opacity&&b==="opacity"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";return f===""?"1":f}if(ha.test(b))b=Pa;if(!d&&e&&e[b])f=e[b];else if(rb){if(ha.test(b))b="float";b=b.replace(lb,"-$1").toLowerCase();e=a.ownerDocument.defaultView;if(!e)return null;if(a=e.getComputedStyle(a,null))f=
a.getPropertyValue(b);if(b==="opacity"&&f==="")f="1"}else if(a.currentStyle){d=b.replace(ia,ja);f=a.currentStyle[b]||a.currentStyle[d];if(!mb.test(f)&&nb.test(f)){b=e.left;var j=a.runtimeStyle.left;a.runtimeStyle.left=a.currentStyle.left;e.left=d==="fontSize"?"1em":f||0;f=e.pixelLeft+"px";e.left=b;a.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={};for(var e in b){f[e]=a.style[e];a.style[e]=b[e]}d.call(a);for(e in b)a.style[e]=f[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=
a.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()==="tr";return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display")==="none"};c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\s)*?\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\?(&|$)/,ka=/\?/,wb=/(\?|&)_=.*?(&|$)/,xb=/^(\w+:)?\/\/([^\/?#]+)/,yb=/%20/g,zb=c.fn.load;c.fn.extend({load:function(a,b,d){if(typeof a!==
"string")return zb.call(this,a);else if(!this.length)return this;var f=a.indexOf(" ");if(f>=0){var e=a.slice(f,a.length);a=a.slice(0,f)}f="GET";if(b)if(c.isFunction(b)){d=b;b=null}else if(typeof b==="object"){b=c.param(b,c.ajaxSettings.traditional);f="POST"}var j=this;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,o){if(o==="success"||o==="notmodified")j.html(e?c("<div />").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.each(d,[i.responseText,o,i])}});return this},
serialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val();return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),
function(a,b){c.fn[b]=function(d){return this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b=null}return c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||d;d=b;b={}}return c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,
global:true,type:"GET",contentType:"application/x-www-form-urlencoded",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=="file:"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&
e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);e.global&&!--c.active&&c.event.trigger("ajaxStop")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase();if(e.data&&e.processData&&typeof e.data!=="string")e.data=c.param(e.data,e.traditional);if(e.dataType==="jsonp"){if(n==="GET")N.test(e.url)||(e.url+=(ka.test(e.url)?
"&":"?")+(e.jsonp||"callback")+"=?");else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+"&":"")+(e.jsonp||"callback")+"=?";e.dataType="json"}if(e.dataType==="json"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||"jsonp"+sb++;if(e.data)e.data=(e.data+"").replace(N,"="+j+"$1");e.url=e.url.replace(N,"="+j+"$1");e.dataType="script";A[j]=A[j]||function(q){o=q;b();d();A[j]=w;try{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType==="script"&&e.cache===null)e.cache=false;if(e.cache===
false&&n==="GET"){var r=J(),u=e.url.replace(wb,"$1_="+r+"$2");e.url=u+(u===e.url?(ka.test(e.url)?"&":"?")+"_="+r:"")}if(e.data&&n==="GET")e.url+=(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("ajaxStart");r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host);if(e.dataType==="script"&&n==="GET"&&r){var z=s.getElementsByTagName("head")[0]||s.documentElement,C=s.createElement("script");C.src=e.url;if(e.scriptCharset)C.charset=e.scriptCharset;if(!j){var B=
false;C.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){B=true;b();d();C.onload=C.onreadystatechange=null;z&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var E=false,x=e.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.setRequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader("If-Modified-Since",
c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest");x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+", */*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.abort();return false}e.global&&f("ajaxSend",[x,e]);var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q==="abort"){E||
d();E=true;if(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q==="timeout")){E=true;x.onreadystatechange=c.noop;i=q==="timeout"?"timeout":!c.httpSuccess(x)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success";var p;if(i==="success")try{o=c.httpData(x,e.dataType,e)}catch(v){i="parsererror";p=v}if(i==="success"||i==="notmodified")j||b();else c.handleError(e,x,i,p);d();q==="timeout"&&x.abort();if(e.async)x=null}};try{var h=x.abort;x.abort=function(){x&&h.call(x);
g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g("timeout")},e.timeout);try{x.send(n==="POST"||n==="PUT"||n==="DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.async||g();return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol==="file:"||a.status>=200&&a.status<300||a.status===304||a.status===
1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader("Last-Modified"),f=a.getResponseHeader("Etag");if(d)c.lastModified[b]=d;if(f)c.etag[b]=f;return a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader("content-type")||"",e=b==="xml"||!b&&f.indexOf("xml")>=0;a=e?a.responseXML:a.responseText;e&&a.documentElement.nodeName==="parsererror"&&c.error("parsererror");if(d&&d.dataFilter)a=d.dataFilter(a,b);if(typeof a==="string")if(b===
"json"||!b&&f.indexOf("json")>=0)a=c.parseJSON(a);else if(b==="script"||!b&&f.indexOf("javascript")>=0)c.globalEval(a);return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d(i+"["+(typeof n==="object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=null&&typeof o==="object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():o;e[e.length]=encodeURIComponent(i)+"="+encodeURIComponent(o)}var e=[];if(b===w)b=c.ajaxSettings.traditional;
if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});else for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\d+-.]+)(.*)$/,W,va=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]];c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K("show",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");
this[a].style.display=d||"";if(c.css(this[a],"display")==="none"){d=this[a].nodeName;var f;if(la[d])f=la[d];else{var e=c("<"+d+" />").appendTo("body");f=e.css("display");if(f==="none")f="block";e.remove();la[d]=f}c.data(this[a],"olddisplay",f)}}a=0;for(b=this.length;a<b;a++)this[a].style.display=c.data(this[a],"olddisplay")||"";return this}},hide:function(a,b){if(a||a===0)return this.animate(K("hide",3),a,b);else{a=0;for(b=this.length;a<b;a++){var d=c.data(this[a],"olddisplay");!d&&d!=="none"&&c.data(this[a],
"olddisplay",c.css(this[a],"display"))}a=0;for(b=this.length;a<b;a++)this[a].style.display="none";return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a==="boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments);else a==null||d?this.each(function(){var f=d?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K("toggle",3),a,b);return this},fadeTo:function(a,b,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,d)},
animate:function(a,b,d,f){var e=c.speed(b,d,f);if(c.isEmptyObject(a))return this.each(e.complete);return this[e.queue===false?"each":"queue"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(":hidden"),k=this;for(i in a){var n=i.replace(ia,ja);if(i!==n){a[n]=a[i];delete a[i];i=n}if(a[i]==="hide"&&o||a[i]==="show"&&!o)return j.complete.call(this);if((i==="height"||i==="width")&&this.style){j.display=c.css(this,"display");j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=
j.specialEasing||{})[i]=a[i][1];a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow="hidden";j.curAnim=c.extend({},a);c.each(a,function(r,u){var z=new c.fx(k,j,r);if(Ab.test(u))z[u==="toggle"?o?"show":"hide":u](a);else{var C=Bb.exec(u),B=z.cur(true)||0;if(C){u=parseFloat(C[2]);var E=C[3]||"px";if(E!=="px"){k.style[r]=(u||1)+E;B=(u||1)/z.cur(true)*B;k.style[r]=B+E}if(C[1])u=(C[1]==="-="?-1:1)*u+B;z.custom(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var d=c.timers;a&&this.queue([]);
this.each(function(){for(var f=d.length-1;f>=0;f--)if(d[f].elem===this){b&&d[f](true);d.splice(f,1)}});b||this.dequeue();return this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=a&&typeof a==="object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b};f.duration=c.fx.off?0:typeof f.duration===
"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=f.complete;f.complete=function(){f.queue!==false&&c(this).dequeue();c.isFunction(f.old)&&f.old.call(this)};return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=b;this.elem=a;this.prop=d;if(!b.orig)b.orig={}}});c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.prop]||
c.fx.step._default)(this);if((this.prop==="height"||this.prop==="width")&&this.elem.style)this.elem.style.display="block"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J();this.start=a;this.end=b;this.unit=d||this.unit||"px";this.now=this.start;
this.pos=this.state=0;var e=this;f.elem=this.elem;if(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.show=true;this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur());c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop);this.options.hide=true;this.custom(this.cur(),0)},step:function(a){var b=J(),d=true;if(a||b>=this.options.duration+this.startTime){this.now=
this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;for(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=false;if(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;a=c.data(this.elem,"olddisplay");this.elem.style.display=a?a:this.options.display;if(c.css(this.elem,"display")==="none")this.elem.style.display="block"}this.options.hide&&c(this.elem).hide();if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,
e,this.options.orig[e]);this.options.complete.call(this.elem)}return false}else{e=b-this.startTime;this.state=e/this.options.duration;a=this.options.easing||(c.easing.swing?"swing":"linear");this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration);this.now=this.start+(this.end-this.start)*this.pos;this.update()}return true}};c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||
c.fx.stop()},stop:function(){clearInterval(W);W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length};c.fn.offset="getBoundingClientRect"in s.documentElement?
function(a){var b=this[0];if(a)return this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);var d=b.getBoundingClientRect(),f=b.ownerDocument;b=f.body;f=f.documentElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=
this[0];if(a)return this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.body;f=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStyle;for(var k=b.offsetTop,n=b.offsetLeft;(b=b.parentNode)&&b!==o&&b!==i;){if(c.offset.supportsFixedPosition&&f.position==="fixed")break;j=e?e.getComputedStyle(b,null):b.currentStyle;
k-=b.scrollTop;n-=b.scrollLeft;if(b===d){k+=b.offsetTop;n+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=d;d=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=="visible"){k+=parseFloat(j.borderTopWidth)||0;n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position==="relative"||f.position==="static"){k+=o.offsetTop;n+=o.offsetLeft}if(c.offset.supportsFixedPosition&&
f.position==="fixed"){k+=Math.max(i.scrollTop,o.scrollTop);n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset={initialize:function(){var a=s.body,b=s.createElement("div"),d,f,e,j=parseFloat(c.curCSS(a,"marginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML="<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
a.insertBefore(b,a.firstChild);d=b.firstChild;f=d.firstChild;e=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=f.offsetTop!==5;this.doesAddBorderForTableAndCells=e.offsetTop===5;f.style.position="fixed";f.style.top="20px";this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15;f.style.position=f.style.top="";d.style.overflow="hidden";d.style.position="relative";this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==j;a.removeChild(b);
c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,"marginTop",true))||0;d+=parseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.style.position="relative";var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,"top",true),10)||0,i=parseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=b.call(a,
d,e);d={top:b.top-e.top+j,left:b.left-e.left+i};"using"in b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.curCSS(a,"marginTop",true))||0;d.left-=parseFloat(c.curCSS(a,"marginLeft",true))||0;f.top+=parseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.left+=parseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.top-
f.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(a,"position")==="static";)a=a.offsetParent;return a})}});c.each(["Left","Top"],function(a,b){var d="scroll"+b;c.fn[d]=function(f){var e=this[0],j;if(!e)return null;if(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop());else this[d]=f});else return(j=wa(e))?"pageXOffset"in j?j[a?"pageYOffset":
"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var d=b.toLowerCase();c.fn["inner"+b]=function(){return this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=function(f){return this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=function(f){var e=this[0];if(!e)return f==null?null:this;if(c.isFunction(f))return this.each(function(j){var i=c(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in
e&&e.document?e.document.compatMode==="CSS1Compat"&&e.document.documentElement["client"+b]||e.document.body["client"+b]:e.nodeType===9?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElement["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f===w?c.css(e,d):this.css(d,typeof f==="string"?f:f+"px")}});A.jQuery=A.$=c})(window);

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=underscore.js
Content-Type: text/javascript; name=underscore.js
Content-Location: http://tutorial.symblog.co.uk/_static/underscore.js
Content-Transfer-Encoding: 8bit

// Underscore.js 0.5.5
// (c) 2009 Jeremy Ashkenas, DocumentCloud Inc.
// Underscore is freely distributable under the terms of the MIT license.
// Portions of Underscore are inspired by or borrowed from Prototype.js,
// Oliver Steele's Functional, and John Resig's Micro-Templating.
// For all details and documentation:
// http://documentcloud.github.com/underscore/
(function(){var j=this,n=j._,i=function(a){this._wrapped=a},m=typeof StopIteration!=="undefined"?StopIteration:"__break__",b=j._=function(a){return new i(a)};if(typeof exports!=="undefined")exports._=b;var k=Array.prototype.slice,o=Array.prototype.unshift,p=Object.prototype.toString,q=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;b.VERSION="0.5.5";b.each=function(a,c,d){try{if(a.forEach)a.forEach(c,d);else if(b.isArray(a)||b.isArguments(a))for(var e=0,f=a.length;e<f;e++)c.call(d,
a[e],e,a);else{var g=b.keys(a);f=g.length;for(e=0;e<f;e++)c.call(d,a[g[e]],g[e],a)}}catch(h){if(h!=m)throw h;}return a};b.map=function(a,c,d){if(a&&b.isFunction(a.map))return a.map(c,d);var e=[];b.each(a,function(f,g,h){e.push(c.call(d,f,g,h))});return e};b.reduce=function(a,c,d,e){if(a&&b.isFunction(a.reduce))return a.reduce(b.bind(d,e),c);b.each(a,function(f,g,h){c=d.call(e,c,f,g,h)});return c};b.reduceRight=function(a,c,d,e){if(a&&b.isFunction(a.reduceRight))return a.reduceRight(b.bind(d,e),c);
var f=b.clone(b.toArray(a)).reverse();b.each(f,function(g,h){c=d.call(e,c,g,h,a)});return c};b.detect=function(a,c,d){var e;b.each(a,function(f,g,h){if(c.call(d,f,g,h)){e=f;b.breakLoop()}});return e};b.select=function(a,c,d){if(a&&b.isFunction(a.filter))return a.filter(c,d);var e=[];b.each(a,function(f,g,h){c.call(d,f,g,h)&&e.push(f)});return e};b.reject=function(a,c,d){var e=[];b.each(a,function(f,g,h){!c.call(d,f,g,h)&&e.push(f)});return e};b.all=function(a,c,d){c=c||b.identity;if(a&&b.isFunction(a.every))return a.every(c,
d);var e=true;b.each(a,function(f,g,h){(e=e&&c.call(d,f,g,h))||b.breakLoop()});return e};b.any=function(a,c,d){c=c||b.identity;if(a&&b.isFunction(a.some))return a.some(c,d);var e=false;b.each(a,function(f,g,h){if(e=c.call(d,f,g,h))b.breakLoop()});return e};b.include=function(a,c){if(b.isArray(a))return b.indexOf(a,c)!=-1;var d=false;b.each(a,function(e){if(d=e===c)b.breakLoop()});return d};b.invoke=function(a,c){var d=b.rest(arguments,2);return b.map(a,function(e){return(c?e[c]:e).apply(e,d)})};b.pluck=
function(a,c){return b.map(a,function(d){return d[c]})};b.max=function(a,c,d){if(!c&&b.isArray(a))return Math.max.apply(Math,a);var e={computed:-Infinity};b.each(a,function(f,g,h){g=c?c.call(d,f,g,h):f;g>=e.computed&&(e={value:f,computed:g})});return e.value};b.min=function(a,c,d){if(!c&&b.isArray(a))return Math.min.apply(Math,a);var e={computed:Infinity};b.each(a,function(f,g,h){g=c?c.call(d,f,g,h):f;g<e.computed&&(e={value:f,computed:g})});return e.value};b.sortBy=function(a,c,d){return b.pluck(b.map(a,
function(e,f,g){return{value:e,criteria:c.call(d,e,f,g)}}).sort(function(e,f){e=e.criteria;f=f.criteria;return e<f?-1:e>f?1:0}),"value")};b.sortedIndex=function(a,c,d){d=d||b.identity;for(var e=0,f=a.length;e<f;){var g=e+f>>1;d(a[g])<d(c)?(e=g+1):(f=g)}return e};b.toArray=function(a){if(!a)return[];if(a.toArray)return a.toArray();if(b.isArray(a))return a;if(b.isArguments(a))return k.call(a);return b.values(a)};b.size=function(a){return b.toArray(a).length};b.first=function(a,c,d){return c&&!d?k.call(a,
0,c):a[0]};b.rest=function(a,c,d){return k.call(a,b.isUndefined(c)||d?1:c)};b.last=function(a){return a[a.length-1]};b.compact=function(a){return b.select(a,function(c){return!!c})};b.flatten=function(a){return b.reduce(a,[],function(c,d){if(b.isArray(d))return c.concat(b.flatten(d));c.push(d);return c})};b.without=function(a){var c=b.rest(arguments);return b.select(a,function(d){return!b.include(c,d)})};b.uniq=function(a,c){return b.reduce(a,[],function(d,e,f){if(0==f||(c===true?b.last(d)!=e:!b.include(d,
e)))d.push(e);return d})};b.intersect=function(a){var c=b.rest(arguments);return b.select(b.uniq(a),function(d){return b.all(c,function(e){return b.indexOf(e,d)>=0})})};b.zip=function(){for(var a=b.toArray(arguments),c=b.max(b.pluck(a,"length")),d=new Array(c),e=0;e<c;e++)d[e]=b.pluck(a,String(e));return d};b.indexOf=function(a,c){if(a.indexOf)return a.indexOf(c);for(var d=0,e=a.length;d<e;d++)if(a[d]===c)return d;return-1};b.lastIndexOf=function(a,c){if(a.lastIndexOf)return a.lastIndexOf(c);for(var d=
a.length;d--;)if(a[d]===c)return d;return-1};b.range=function(a,c,d){var e=b.toArray(arguments),f=e.length<=1;a=f?0:e[0];c=f?e[0]:e[1];d=e[2]||1;e=Math.ceil((c-a)/d);if(e<=0)return[];e=new Array(e);f=a;for(var g=0;1;f+=d){if((d>0?f-c:c-f)>=0)return e;e[g++]=f}};b.bind=function(a,c){var d=b.rest(arguments,2);return function(){return a.apply(c||j,d.concat(b.toArray(arguments)))}};b.bindAll=function(a){var c=b.rest(arguments);if(c.length==0)c=b.functions(a);b.each(c,function(d){a[d]=b.bind(a[d],a)});
return a};b.delay=function(a,c){var d=b.rest(arguments,2);return setTimeout(function(){return a.apply(a,d)},c)};b.defer=function(a){return b.delay.apply(b,[a,1].concat(b.rest(arguments)))};b.wrap=function(a,c){return function(){var d=[a].concat(b.toArray(arguments));return c.apply(c,d)}};b.compose=function(){var a=b.toArray(arguments);return function(){for(var c=b.toArray(arguments),d=a.length-1;d>=0;d--)c=[a[d].apply(this,c)];return c[0]}};b.keys=function(a){if(b.isArray(a))return b.range(0,a.length);
var c=[];for(var d in a)q.call(a,d)&&c.push(d);return c};b.values=function(a){return b.map(a,b.identity)};b.functions=function(a){return b.select(b.keys(a),function(c){return b.isFunction(a[c])}).sort()};b.extend=function(a,c){for(var d in c)a[d]=c[d];return a};b.clone=function(a){if(b.isArray(a))return a.slice(0);return b.extend({},a)};b.tap=function(a,c){c(a);return a};b.isEqual=function(a,c){if(a===c)return true;var d=typeof a;if(d!=typeof c)return false;if(a==c)return true;if(!a&&c||a&&!c)return false;
if(a.isEqual)return a.isEqual(c);if(b.isDate(a)&&b.isDate(c))return a.getTime()===c.getTime();if(b.isNaN(a)&&b.isNaN(c))return true;if(b.isRegExp(a)&&b.isRegExp(c))return a.source===c.source&&a.global===c.global&&a.ignoreCase===c.ignoreCase&&a.multiline===c.multiline;if(d!=="object")return false;if(a.length&&a.length!==c.length)return false;d=b.keys(a);var e=b.keys(c);if(d.length!=e.length)return false;for(var f in a)if(!b.isEqual(a[f],c[f]))return false;return true};b.isEmpty=function(a){return b.keys(a).length==
0};b.isElement=function(a){return!!(a&&a.nodeType==1)};b.isArray=function(a){return!!(a&&a.concat&&a.unshift)};b.isArguments=function(a){return a&&b.isNumber(a.length)&&!b.isArray(a)&&!r.call(a,"length")};b.isFunction=function(a){return!!(a&&a.constructor&&a.call&&a.apply)};b.isString=function(a){return!!(a===""||a&&a.charCodeAt&&a.substr)};b.isNumber=function(a){return p.call(a)==="[object Number]"};b.isDate=function(a){return!!(a&&a.getTimezoneOffset&&a.setUTCFullYear)};b.isRegExp=function(a){return!!(a&&
a.test&&a.exec&&(a.ignoreCase||a.ignoreCase===false))};b.isNaN=function(a){return b.isNumber(a)&&isNaN(a)};b.isNull=function(a){return a===null};b.isUndefined=function(a){return typeof a=="undefined"};b.noConflict=function(){j._=n;return this};b.identity=function(a){return a};b.breakLoop=function(){throw m;};var s=0;b.uniqueId=function(a){var c=s++;return a?a+c:c};b.template=function(a,c){a=new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+a.replace(/[\r\t\n]/g,
" ").replace(/'(?=[^%]*%>)/g,"\t").split("'").join("\\'").split("\t").join("'").replace(/<%=(.+?)%>/g,"',$1,'").split("<%").join("');").split("%>").join("p.push('")+"');}return p.join('');");return c?a(c):a};b.forEach=b.each;b.foldl=b.inject=b.reduce;b.foldr=b.reduceRight;b.filter=b.select;b.every=b.all;b.some=b.any;b.head=b.first;b.tail=b.rest;b.methods=b.functions;var l=function(a,c){return c?b(a).chain():a};b.each(b.functions(b),function(a){var c=b[a];i.prototype[a]=function(){var d=b.toArray(arguments);
o.call(d,this._wrapped);return l(c.apply(b,d),this._chain)}});b.each(["pop","push","reverse","shift","sort","splice","unshift"],function(a){var c=Array.prototype[a];i.prototype[a]=function(){c.apply(this._wrapped,arguments);return l(this._wrapped,this._chain)}});b.each(["concat","join","slice"],function(a){var c=Array.prototype[a];i.prototype[a]=function(){return l(c.apply(this._wrapped,arguments),this._chain)}});i.prototype.chain=function(){this._chain=true;return this};i.prototype.value=function(){return this._wrapped}})();

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=doctools.js
Content-Type: text/javascript; name=doctools.js
Content-Location: http://tutorial.symblog.co.uk/_static/doctools.js
Content-Transfer-Encoding: 8bit

/*
 * doctools.js
 * ~~~~~~~~~~~
 *
 * Sphinx JavaScript utilities for all documentation.
 *
 * :copyright: Copyright 2007-2011 by the Sphinx team, see AUTHORS.
 * :license: BSD, see LICENSE for details.
 *
 */

/**
 * select a different prefix for underscore
 */
$u = _.noConflict();

/**
 * make the code below compatible with browsers without
 * an installed firebug like debugger
if (!window.console || !console.firebug) {
  var names = ["log", "debug", "info", "warn", "error", "assert", "dir",
    "dirxml", "group", "groupEnd", "time", "timeEnd", "count", "trace",
    "profile", "profileEnd"];
  window.console = {};
  for (var i = 0; i < names.length; ++i)
    window.console[names[i]] = function() {};
}
 */

/**
 * small helper function to urldecode strings
 */
jQuery.urldecode = function(x) {
  return decodeURIComponent(x).replace(/\+/g, ' ');
}

/**
 * small helper function to urlencode strings
 */
jQuery.urlencode = encodeURIComponent;

/**
 * This function returns the parsed url parameters of the
 * current request. Multiple values per key are supported,
 * it will always return arrays of strings for the value parts.
 */
jQuery.getQueryParameters = function(s) {
  if (typeof s == 'undefined')
    s = document.location.search;
  var parts = s.substr(s.indexOf('?') + 1).split('&');
  var result = {};
  for (var i = 0; i < parts.length; i++) {
    var tmp = parts[i].split('=', 2);
    var key = jQuery.urldecode(tmp[0]);
    var value = jQuery.urldecode(tmp[1]);
    if (key in result)
      result[key].push(value);
    else
      result[key] = [value];
  }
  return result;
};

/**
 * small function to check if an array contains
 * a given item.
 */
jQuery.contains = function(arr, item) {
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] == item)
      return true;
  }
  return false;
};

/**
 * highlight a given string on a jquery object by wrapping it in
 * span elements with the given class name.
 */
jQuery.fn.highlightText = function(text, className) {
  function highlight(node) {
    if (node.nodeType == 3) {
      var val = node.nodeValue;
      var pos = val.toLowerCase().indexOf(text);
      if (pos >= 0 && !jQuery(node.parentNode).hasClass(className)) {
        var span = document.createElement("span");
        span.className = className;
        span.appendChild(document.createTextNode(val.substr(pos, text.length)));
        node.parentNode.insertBefore(span, node.parentNode.insertBefore(
          document.createTextNode(val.substr(pos + text.length)),
          node.nextSibling));
        node.nodeValue = val.substr(0, pos);
      }
    }
    else if (!jQuery(node).is("button, select, textarea")) {
      jQuery.each(node.childNodes, function() {
        highlight(this);
      });
    }
  }
  return this.each(function() {
    highlight(this);
  });
};

/**
 * Small JavaScript module for the documentation.
 */
var Documentation = {

  init : function() {
    this.fixFirefoxAnchorBug();
    this.highlightSearchWords();
    this.initIndexTable();
  },

  /**
   * i18n support
   */
  TRANSLATIONS : {},
  PLURAL_EXPR : function(n) { return n == 1 ? 0 : 1; },
  LOCALE : 'unknown',

  // gettext and ngettext don't access this so that the functions
  // can safely bound to a different name (_ = Documentation.gettext)
  gettext : function(string) {
    var translated = Documentation.TRANSLATIONS[string];
    if (typeof translated == 'undefined')
      return string;
    return (typeof translated == 'string') ? translated : translated[0];
  },

  ngettext : function(singular, plural, n) {
    var translated = Documentation.TRANSLATIONS[singular];
    if (typeof translated == 'undefined')
      return (n == 1) ? singular : plural;
    return translated[Documentation.PLURALEXPR(n)];
  },

  addTranslations : function(catalog) {
    for (var key in catalog.messages)
      this.TRANSLATIONS[key] = catalog.messages[key];
    this.PLURAL_EXPR = new Function('n', 'return +(' + catalog.plural_expr + ')');
    this.LOCALE = catalog.locale;
  },

  /**
   * add context elements like header anchor links
   */
  addContextElements : function() {
    $('div[id] > :header:first').each(function() {
      $('<a class="headerlink">\u00B6</a>').
      attr('href', '#' + this.id).
      attr('title', _('Permalink to this headline')).
      appendTo(this);
    });
    $('dt[id]').each(function() {
      $('<a class="headerlink">\u00B6</a>').
      attr('href', '#' + this.id).
      attr('title', _('Permalink to this definition')).
      appendTo(this);
    });
  },

  /**
   * workaround a firefox stupidity
   */
  fixFirefoxAnchorBug : function() {
    if (document.location.hash && $.browser.mozilla)
      window.setTimeout(function() {
        document.location.href += '';
      }, 10);
  },

  /**
   * highlight the search words provided in the url in the text
   */
  highlightSearchWords : function() {
    var params = $.getQueryParameters();
    var terms = (params.highlight) ? params.highlight[0].split(/\s+/) : [];
    if (terms.length) {
      var body = $('div.body');
      window.setTimeout(function() {
        $.each(terms, function() {
          body.highlightText(this.toLowerCase(), 'highlighted');
        });
      }, 10);
      $('<p class="highlight-link"><a href="javascript:Documentation.' +
        'hideSearchWords()">' + _('Hide Search Matches') + '</a></p>')
          .appendTo($('#searchbox'));
    }
  },

  /**
   * init the domain index toggle buttons
   */
  initIndexTable : function() {
    var togglers = $('img.toggler').click(function() {
      var src = $(this).attr('src');
      var idnum = $(this).attr('id').substr(7);
      $('tr.cg-' + idnum).toggle();
      if (src.substr(-9) == 'minus.png')
        $(this).attr('src', src.substr(0, src.length-9) + 'plus.png');
      else
        $(this).attr('src', src.substr(0, src.length-8) + 'minus.png');
    }).css('display', '');
    if (DOCUMENTATION_OPTIONS.COLLAPSE_INDEX) {
        togglers.click();
    }
  },

  /**
   * helper function to hide the search marks again
   */
  hideSearchWords : function() {
    $('#searchbox .highlight-link').fadeOut(300);
    $('span.highlighted').removeClass('highlighted');
  },

  /**
   * make the url absolute
   */
  makeURL : function(relativeURL) {
    return DOCUMENTATION_OPTIONS.URL_ROOT + '/' + relativeURL;
  },

  /**
   * get the current relative url
   */
  getCurrentURL : function() {
    var path = document.location.pathname;
    var parts = path.split(/\//);
    $.each(DOCUMENTATION_OPTIONS.URL_ROOT.split(/\//), function() {
      if (this == '..')
        parts.pop();
    });
    var url = parts.join('/');
    return path.substring(url.lastIndexOf('/') + 1, path.length - 1);
  }
};

// quick alias for translations
_ = Documentation.gettext;

$(document).ready(function() {
  Documentation.init();
});

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=css.css
Content-Type: text/css; name=css.css
Content-Location: http://fonts.googleapis.com/css?family=Irish+Grover
Content-Transfer-Encoding: 8bit

@font-face {
  font-family: 'Irish Grover';
  font-style: normal;
  font-weight: 400;
  src: local('Irish Grover'), local('IrishGrover'), url(http://themes.googleusercontent.com/static/fonts/irishgrover/v3/kUp7uUPooL-KsLGzeVJbBHhCUOGz7vYGh680lGh-uXM.woff) format('woff');
}

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=css.css
Content-Type: text/css; name=css.css
Content-Location: http://fonts.googleapis.com/css?family=La+Belle+Aurore
Content-Transfer-Encoding: 8bit

@font-face {
  font-family: 'La Belle Aurore';
  font-style: normal;
  font-weight: 400;
  src: local('La Belle Aurore'), local('LaBelleAurore'), url(http://themes.googleusercontent.com/static/fonts/labelleaurore/v3/Irdbc4ASuUoWDjd_Wc3mdyPuxW3DwjEqq93dVR72jP4.woff) format('woff');
}

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/languages/gb.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAALCAIAAAD5gJpuAAAAGXRFWHRTb2Z0d2Fy
ZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAflJREFUeNpinDRzn5qN3uFDt16+YWBg
+Pv339+KGN0rbVP+//2rW5tf0Hfy/2+mr99+yKpyOl3Ydt8njEWIn8f9zj639NC7
j78eP//8739GVUUhNUNuhl8//ysKeZrJ/v7z10Zb2PTQTIY1XZO2Xmfad+f7XgkX
xuUrVB6cjPVXef78JyMjA8PFuwyX7gAZj97+T2e9o3d4BWNp84K1NzubTjAB3fH0
+fv6N3qP/ir9bW6ozNQCijB8/8zw/TuQ7r4/ndvN5mZgkpPXiis3Pv34+ZPh5t23
//79Rwehof/9/NDEgMrOXHvJcrllgpoRN8PFOwy/fzP8+gUlgZI/f/5xcPj/69e/
37//AUX+/mXRkN555gsOG2xt/5hZQMwF4r9///75++f3nz8nr75gSms82jfvQnT6
zqvXPjC8e/srJQHo9P9fvwNtAHmG4f8zZ6dDc3bIyM2LTNlsbtfM9OPHH3FhtqUz
3eXX9H+cOy9ZMB2o6t/Pn0DHMPz/b+2wXGTvPlPGFxdcD+mZyjP8+8MUE6sa7a/x
o6Pykn1s4zdzIZ6///8zMGpKM2pKAB0jqy4UE7/msKat6Jw5mafrsxNtWZ6/fjvN
LW29qv25pQd///n+5+/fxDDVbcc//P/zx/36m5Ub9zL8+7t66yEROcHK7q5bldMB
AgwADcRBCuVLfoEAAAAASUVORK5CYII=

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/languages/es.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAALCAIAAAD5gJpuAAAABGdBTUEAAK/INwWK
6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAFnSURBVHja
YvzPgAD/UNlYEUAAmuTYAAAQhAEYqF/zFbe50RZ1cMmS9TLi0pJLRjZohAMTGFUN
9HdnHgEE1sDw//+Tp0ClINW/f0NIKPoFJH/9//ULyGaUlQXaABBALAx/Gf4zAt31
F4i+ffj3/cN/XrFfzOx//v///f//LzACM/79ZmD8/e8TA0AAMYHdDVT958vXP38n
MDB0s3x94/Tj5y+YahhiAKLfQKUAAcQEdtJfoDHMF2L+vPzDmFXLelf551tGFOOh
ev4A/QgQQExgHwAd8IdFT/Wz6j+GhlpmXSOW/2z///8Eq/sJ18Dw/zdQA0AAMQEx
xJjjdy9x2/76EfLz4MXdP/i+wsyGkkA3Aw3984cBIIAYfzIwMKel/bt3jwEaLNAw
gZIQxp/fDH/+MqqovL14ESCAWICeZvr9h0FSEhSgwBgAygFDEMT+wwAhgQgc4kAE
VAwQQIxfUSMSTxxDAECAAQAJWke8v4u1tAAAAABJRU5ErkJggg==

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/languages/fr.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAALCAIAAAD5gJpuAAAABGdBTUEAAK/INwWK
6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAGzSURBVHja
YiyeepkBBv79+Zfnx/f379+fP38CyT9//jAyMiq5GP77wvDnJ8MfoAIGBoAAYgGq
C7STApL///3/9++/pCTv////Qdz/QO4/IMna0vf/z+9/v379//37bUUTQACBNDD8
Z/j87fffvyAVX79+/Q8GQDbQeKA9fM+e/Pv18/+vnwzCIkBLAAKQOAY5AIAwCEv4
/4PddNUm3ji0QJyxW3rgzE0iLfqDGr2oYuu0l54AYvnz5x9Q6d+/QPQfyAQqAin9
B3EOyG1A1UDj//36zfjr1y8GBoAAFI9BDgAwCMIw+P8Ho3GDO6XQ0l4MN8b2kUwY
aLszqgKM/KHcDXwBxAJUD3TJ779A8h9Q5D8SAHoARP36+Rfo41+/mcA2AAQQy49f
f0Cu//MPpAeI/0FdA1QNYYNVA/3wmwEYVgwMAAHE8uPHH5BqoD1//gJJLADoJKDS
378Z//wFhhJAALF8A3rizz8uTmYg788fJkj4QOKREQyYxSWBhjEC/fcXZANAALF8
+/anbcHlHz9+ffvx58uPX9KckkCn/gby/wLd8uvHjx96k+cD1UGiGQgAAgwA7q17
ZpsMdUQAAAAASUVORK5CYII=

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/languages/jp.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAABAAAAALCAIAAAD5gJpuAAAABGdBTUEAAK/INwWK
6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAE2SURBVHja
Yvz69SsDEvj37x+ERGbAwZ9//wACiAUoysXFBST///8P0QOm//+HU0jgxYsXAAHE
AlP0H8HYt+//4SP/f//6b2b238sLrpqRkRFoCUAAsaCrXrv2/8KF///8+f/r9//D
h/8/ffI/OQWiAeJCgABigrseJPT27f/Vq////v3/1y8oWrzk/+PHcEv+/PkDEEBM
EM/B3fj/40eo0t9g8suX/w8f/odZAVQMEEAsQAzj/2cQFf3PxARWCrYEaBXQLCkp
qB/+/wcqBgggJrjxQPX/hYX/+/v///kLqhpIBgf/l5ODhxiQBAggFriToDoTEv5z
cf3ftQuk2s7uf0wM3MdAAPQDQAAxvn37lo+PDy4KZUDcycj4/z9CBojv3r0LEEAg
G969eweLSBDEBSCWAAQYACaTbJ/kuok9AAAAAElFTkSuQmCC

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/note.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
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

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/tip.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
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

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline
Content-Type: image/png
Content-Location: http://tutorial.symblog.co.uk/_static/images/icons/warning.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
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
RU5ErkJggg==

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename*0="687474703a2f2f73332e616d617a6f6e6177732e";
 filename*1="636f6d2f6769746875622f726962626f6e732f66";
 filename*2="6f726b6d655f6c6566745f6f72616e67655f6666";
 filename*3="373630302e706e67.png"
Content-Type: image/png; name*0="687474703a2f2f73332e616d617a6f6e6177732e";
 name*1="636f6d2f6769746875622f726962626f6e732f66";
 name*2="6f726b6d655f6c6566745f6f72616e67655f6666";
 name*3="373630302e706e67.png"
Content-Location: https://a248.e.akamai.net/assets.github.com/img/6429057dfef9e98189338d22e7f6646c6694f032/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6f72616e67655f6666373630302e706e67
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAJUAAACVCAYAAABRorhPAAAAGXRFWHRTb2Z0d2Fy
ZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAJIBJREFUeNrsnQlwVNeZ7797u9WbulsL
EjtausUmQEBk8IbxggQGEttjG7wkk32kmpeZeZmX54FXUzVT9apeBRInYzseT0nQ
AmycxMjO4nic2FJYvNsgFoGWlpCQQAgBAoF2qZf7znfuvd2nr1pI6hZCyzlV17fV
2lr0z9/3P992BEmSgK+RLYEs9aFyicqlI5dec8Xg9fgCmOZ6Ztp+y5xlGaA3gv9a
HbnOAvuvL2nu0Tw3nM+pdzE2GQzpD4AQY4H+ltNwveHUz5e8DP+XfMpHLr9yl5TH
IT8+HD96jshtASqGvTZnQHLhZthjSc3OEMgb6Dn9NoC3b1ThCfc1w/1644L1oLPN
go7PX4Nr7d2/XPEr+Cnz9414cahuD1AG9f6oE5L3bI3fEzvD6QSjHXwXjkYE1O34
nGiZBvpZWeSeCL1n/wqX27pfvus12BntvxOHanSBMjBQGdY7YPrex8TdtgVrnZLf
Bz7yxkm9N2+LSxsxbKIOTEufBMnvhe5Tb0HTlbb/vPs1eFHzLdIgP+6WS+S43Bag
jAjU648ToNJWZEBsEviaT4C/p41oEP+ANzkcDLcbKGP6WhDts6Gv/gg0XLzy2t2v
el5UNNNQIA0Jl8CF+qgCZcTHuekwff+z8S6bc7UDv9F/tQZ8bQ13TJCzjwVzApgW
biQfS+BpPgk17qqCB3fBL8in+sjVTy6PcnkZoe4PY7kGFercUt0GoN54HHZZU7Ic
ArEE3vqPRgUoCSLf4bGPjY4HQTfNAT0Vf4SqqqpdBKiXNfAMBtGwrQ/XVKMM1JvP
JbpiZ893COZ48DV+DpK3d1zs8HDXaZyzktyToLf6fahp6d69zgWvKBbJy1gmnwYo
aSRAcahuh4Waf78DdDHgq/kQ/J6uUYMnWgFvWfI4+QtioPvkr8F9qbOIAPWrMK7O
F8ZawUitFXd/o6WhnjbvthJRjhbKj6K8vxMFx4iF+KhrqhgLGFCUW5Kg79wRqL54
07Vul+8VRT/1M1CFA2vEVooL9dGyUFutu+0LH3QS0wTeljMgdVwKADUWgnywrxeM
NjAve4q44H7oP/8FVNU1FilA9Q0izL0QGkEfUlNxoX4bgHqduDzbvKVOwT4LvOe/
BKm9eUyBkm7x7hvS7gd9Qhr01n4IlbX1rtEGiluq2+Hynk9yWecudggGK/gwl9da
c8cFOT4WrdPBkHIPiMQV9186DRWnT7hyZA016kDx3N9oWyjHKgeY4sBT8QfytvQO
+k4MJ5I4mlbMtPBRmoLp+LIQai513Tag+O5vNDXUM3aXdaaTAGUH38UyGjYIvAtS
+H14iNZR78LA56IJcqJl0s9aQe6Yyzt4R4Ca0u4vYqCeNOy2L3vUKfk84Gs6Cv7u
6zT1osLk19zD/usKyi8VBj4XKVCgM4Al+9sEj37oqSkB94XWonWFntuuobhQjwKo
HNXlpSxzAtEsvovHQepqDQDlV0DCy+eXLy9e5C3zkKtfuXv8oZ/3K9+r/oxIo+bG
tDWgj5sLvXWHobrhkitSoKRRsDJTzlJFCtSbzyW4rGlfc4CoI4L8LPiv1wfeCRWm
AFTk8mqeC4hoIXjpRNlaBS6N9RpWLi82CUzOR8gP1EN/SzlUVpyJ2OWpQAnC8Muo
prylihQoGilPXekQ4uaAt/5IACjtll4FCq2RODsb+snb14cXeft6FWvVp9z7/fLl
U6yVJEUWZTc5HwbdNCd0V/weKkYBqNFYIgdqKAuV6LI7VmWAOQ58578MKbCTVGGu
wORXgLLckwfzXjgGsffmUZh6yFsak5EDceu2QTy5PMYECht1jVIQLD+jxYZloebn
gEB2eb01H4C7pceVOw6AmjK7v2gslG3BGodEvgUL7Px9nSFvbsBCKU/4lKvrfBn4
uttg7jcLqGXqvlIPi/65JPC9SWvyoH7XVugjO0cjuj10g8oPQ7c4HB1lWfI39N5d
fgDczR1F4wWoKaGpIgVqP9nlWedlOsXZKwhQB8F343wITMC4PK/ixtBKqS5ONycb
FhCQ9JYEaG8oA3OyA6r25kNcejakbtoGXgJd5b85QdfXBjHkleCFGksnBHeCYVMv
eiMY5q2m+bzu8mKorK5x5RaNLlBcU90OoJ6xu2yZjzgF3OURoLwEKNUiqS7Px4hy
SXnsZUQ6glT+Yi54utrAnpYNrRWl0PxlMbjf2g6N7++ksCXenxcMPUjBHeBgFko0
xYElayuIZJeHQFW5z446UFxT3S5RPm8pLbDDeijVQvkZeFj9pIYGVG3kUcIIMzds
g7b6Mji2UwZr1uotMPshGaLLR4vpz7QvyglA5Ne41XBgYS5Pl+iAXvefqYXKcfnH
HVCTVlNFLMqfT3LFzl7gwJJbX8OnREN1hCZsNfEovwYu3M1hLGo6ASr1qR2gn+aA
U658+PynuXDv/ymBrO8XgHW6A6wzaJUx3KwuDUbXmbsWKB2xmDFzV4FoTYbuqj9B
9YUb49JCTVpNFY2FsmdtzhAMFvBUvQeSpyckVCAxrs7HuLlAkFMKBjklUwIs+UkJ
dXvnDxbCSQJWPNFSCFZMbAJ4ieVqLSuGlne3U01lIK9IL8qXGEZTWe76LohGO3Qc
LYKa5s7bDhTXVKOlodJWZghEs3gvHge/Big/A5BHsUg07uSV733K4znPF0DSA3nQ
29kGZT/Lpboq5ZE8WPGDAuhoJK6QPIdA9bbWQ+Ov8wF62ihIAmOp2As1lAFryjFs
UHd4TIDilmo0LNRTpt32JblygZ2SevGrbVSMVfIp1sirWKbkZwoobA378+nnrItz
YMn/ksMGCFTrmVLQE6t017YSiCMWq+lwIdS8ng+JjmzwXa8HES0UeWV6XdBCiSIT
WY8xg2XlN4nF7IXe+iNQ3dBSlLNrbFIv3FJB9Lk8wTYDvE1lIHVeCfblafQT695i
5udA4po8apXmEuuE1upyeSlU7cmn35v1owOQuCSHWqXaA9vpc3OJSE95mFgx8nsE
AhQNHyghBFHQJJdVUU52eT1k91lVd8E1VkBxSxWNy3su0WVLXS43KVyrDxmWgXcf
kxz2Ki6vX00Mk8cJ9+eB89sF9OubDhVCy1fFcJVYp3kEnKXfl58/9987IYnAZSbi
vPGd7dD6aSG1TgiTetcxOopaq9hkMBGXh0M8PFhgd6Z8zF1etJZqQkMVjYWKW5Kb
gXGofmZYhvovwcag2F2dfd02aHp/ZwCwGWvzIPN7BYHX88WOXLhWUQrJS3Ng5T8c
oKIcV+PvtsPlkp1gQIgw0CmGBwp/f+zyZ0EXnwIdn76KbVR3RENNWagit1AJLrKl
dwiJaeBrOQO+q+4ATGwtFC1PUcIFCFQS0VDo8lo+KqRuTi1jWb29hEKEC3d6Z/bm
g568GpM9AWat2gIeYgW7akppxJzu8HSyy1OBClQoxCaBcWYW6Kcvhr7Gz6Gi/Pgd
E+VTEqqILdQT4q645V/PQN3ka/gEpN72gChXgaJWigVKsUqYdpn/Yzntgu4O409L
iJtLI7s7dHsqWBcOyYIcIVKFeIwYFORsKiagpQQRrKt+AJLPCz1V70F1042i3N13
sB5qqkEVMVBPxuy2z1tKc3ne2hLw3WwKCWiywjwQGfcHy1SwqsAwLxuW/USONWGS
2EK0UgOxTuUEsLR1eTS4iesSsWYNb8pgDQWUQDSdMfV+OnSs68SvodJd51q/586G
DaYUVBG7PDos424HWijsePG2NYbd4UlSqIXyMuJcrYMyp2TDqm0yWF0ErNIfO2ko
AOFJJVZr8XdlsDAO1fZZYcDthQXKnACWRZsBxwz1N5+AisrqOw7UlAopRCPKrSnL
5FwecXkIFFsD5dOU96pAeZidXsq3CsC6KAdWvFBC4cO0C+bzYomlWvHDgoBWuvxx
IdTtz4ernxRSoAwaoARGmNMSYGKddAlp0F35p3ED1JQJKURsobAvb1aGA4dT+NBC
oSiXQiPlITs9cgkJDkh54Rh0VJdCbcFWsCwMBjVxoZZqJC4PS1juU9IuGNg8+0Y+
hSiGvUQ5oKkCJSh/gR5zeUSj4UjE/uaTcObU8XEF1KS3VFEFNjPulcf51B2kUAFo
GhQ0+smrCHQdEeM2YpnwY4yM91ytp9+L1unmuTL6GFMwXygVCBjYXPSdgoB2Uq2T
qMnlqXfT4q/TzuHu02+TXd7JSWOhJoSlijj1ssWy2zp7gVOcuQy8WG2g1JQPsE7+
0HJe1VqJxFp5aAF4AiRmb4G+zjYwJjtoRBwh+nxHLs3l2Yj7M9sTYOX/LoHrZcVw
8bf5A8ASBAYsQywYZn+NCPP7iMt7DyorK8YlUJNWqEcDlG3RwzSXh3EovzIsQ7VQ
aluUChR+bJyfA9Mf30F/We3LuRQi1FOZxO0lZObQMEF5UT6NluMOD8HCaDl+3PSX
ndDpLgWprT5UlIvBrhmaHDZaIXbZ04D9gr0Nn0F13fmiXJdvXKZeooVKP9lcHhHl
TtFOtMrpd0DqaQukXbTBTTU5rJ+bDan/WEJryluJ0BaIdfK2t9Gvq/ivrZD1kxIK
D358moCFr2zZ9wpgwVYZQqm3DfwIlDgQKIFxfWid9Inp0P7pf0J145VJ5/LGtaWK
SpTPXewA4mJoLk8zLIO+Q0wxnbrTc/x7HRiSHFDzUi7cqCoNiaZTV0i2/StfkGuj
0GJV7cuHBEc2zelhtLzjVPGAWFRILo+IclPKvSAY7dBPLGdF+YlxD9SkslRRWaj0
bIdgSaTDMrDAjgWKBUu96E6PAINAdRN9dL2yNFgyrFgzx9M7oIG4ubKf50L2C7LF
QmgwbNDSXCbv9kRN+YqmyM48fz2t3Gz/vIDONpjMFmrc7f4i1lAY2Ez/mlxg13Qs
pGJT6/rYj9XdHC5Laja1SCxQ8zZto10vaKUQlJO/kMX59FVbaDmwgc3licGOYxUo
HHhvdjxE7z21B6cMUOPG/UWTeolbttGJA+bpwLFbzCkP10qF99R/IK5tcQ40/Xkn
nHtnewhYS//+AIUIYSonUCFEmJrpv1hGHyNYahyKBQpTL9bs71BR3uP+AKovXCta
v3sC1UNN9DhVpEDte0LYZUvJctLB9xdPgNR9LQSocHMO2G4YNXnc8qF8asbcjdtg
5tq8QFcLrrq35QI77NlzElcIfW3gYYDSMeI8GIsSwJS2BnT2OdBbdwSqGlpcEwmo
Ce/+onF5cZnrMiB2GnjrDtGwQbgW8ZDKA3XHx8SjcN0k4rx+v1yxOf/bBRQerERA
d2ZRul4w/XL+N/m0HkqvCy2wC+zwBPmsF+vyZ0C0zYSu8reh8myDa8MUcXnjwv1F
bKGwwG7RQxlYD9V/8jcDZhuoglzSlLKw9eVq9wvbCTPjgTxw/q2cDMbu4Y6GMhqj
wsdnfnoXSNfrAwV2omKh2MAm/rLYZU+BPnkRtH/0H+C+1O3asHdiAjUhg58RW6jn
EuVcnm0W+K5W0wI7CAMUMNZJC5THH0zPqNZLBTBuUQ7MIW4wfrFcG4VdL3U486Cp
LFAXFQ4onSUZDLNX0DhU34VjNJc3UYGakFBFY6HiVzyWIQkieHFYRn8X+Yv8oe4u
DFAepiePTmRZkAOmlGwKElZxoiUCCM3PoYbCRHHvhbLAri6kUYHpesFlW/1DVOfQ
deotcF/sKFpf5JvQGmpCQRXxLu8p027r3EVO3azl4K0/DD61HmoYQLHVmyYC1KIf
BysOEKiKX+ZC9/myQPI3cCngqBDptEPK8A/Qm8A4bzUY09dA1+nfQWVl9YS2UBMO
qoiB2mpz2Rc+4MCwgf9yJfjaL4bMKdcCpe7w1JCBeo+7Lw+SiW4yESvk3pdPrREG
N+n0lZdyqVXSiaH14zplG6OtJ8dfrjPb6TgfydcPfee/gqqac671e/yTox5qIkTU
o3F5NiywIxrKe7oY/L3tAyxUSF5PbUdXksWqlfIbE2Dek/Ku7srRYtpOha8IgVpA
dnyZxHrVvJIL/U1lIakWgbFOgVcvyR8bU9dQDXXz45fBfaFtUlioCRNSiFiUP5/k
si9YQ8968Z77eABQ4WJRIaEDxlL1dLTBSWWsDwYzZz2YRwG8eEQurkPY5j2xIyQh
rGMEuXrhi9bbpoNl8TdAZ02GrjN/5ECNdUghqrBB1uYMTA57qv40aC6Pncbi1eio
XvJW+oiFsq/YAr0EJpwNZSECfbVSX46J4SsfyzXkcwhkmBjGYRlimEEZ7LQMa/Z3
QTTHQfsXu2nqZTICNW41VcRA4bCMmU6Hbvoi8Fw4GtI5PBhYPim0xhytEw5yzfif
cksVDXLiEDIsXSGP71bAqiVW6prSNcxOXlEj5CIDk2CMo2EDw9xs6KkppZ3Dk9VC
jcs0TcRAPWXcHbfwQQdGpPsxbMBMAR4Q3IRbjJsmXzD7Cbne6fRrW6mGwiEZ9xCY
sDT4BHGFqKdmrc0DozUhpKBOLaoTIDgxGHRGiF2+BXQJqdB18gBUVlUVcZc3hpoq
UqD2MsMyPFhtwAzLYF1doEePSbcMmF1OvgaTxL0EIBTm5QSsC4cLqXVa/MwO6CI7
Pdzx1fwqlw7LCFQaiMGUS2AEtQQ0ZIDDMnprD0JVfZNrvWtq5fLuKFQRhw2eS3TF
LX4kg9ZD1R0CqevqAAulnWbn056soEkcY07PmpoNcx7Ko9anmmgobFaYuXoLzeH1
YGCzV54PpRNCa6HUHR4evBibRSyUFXN570BVXRMX5cNY+nFhodK/RlzeLOgrPxA2
l8cC5ZMGujwVKDUVg+9q4++3Q2ZqCe1yodHxq3JHMVZ36tSkMGOhApUGUjAWZc5Y
p4QNXiGivNu1YR8Hasx2f5FbqAR6GpUQnwL+yxUhwzJuBZRPU/Lr01gq9Tlss1qY
fyAg1lFHVb0sx6PU3jy0Tnox9BgPHbFQMbOXQ0zSAuht/BIqMJc3hYC647u/SIBa
x+byyO/3NihxKE2BXWBiLxuDClNxYJyXTWNQmAAGCB0djUBhBQKuGyeLwXutnlol
FSid0uQpBv4KQc7lkR/SfeYP4G66WbS+aGppqDsKVaRAYcWmTTMsI+wOT9NNzM43
wMc4sHX+P5VALNFOuK6VFdPaKF9PW6CKQCeEBjC1aRgWKFEXA4bU+8CEwzJOvgWV
1bVT0uXdsTRNxEA9Y3fFzb/PgUMpsNrgVkCFjEdkZxyoo6Xvy6NAoQhPzMyh0XLa
k/dmvuzWlHZzNSmspl5UUc4CpTPHg3nx18kv80HXqeIpC9Qd2/1F4/LsqcvlVvSG
T8MezeGHgcMzPEzKhU5gUU6nsi3OoRB1Xq6nBXVYWIclwDqlclMQg80JejG0/FfV
T+rbb0xfS0S5A7oq3oPKKjcHaiyhihQomsubf28GnjlMW9E93QME+YA5UUxSGCGi
eTzlqDO8cM4B7uzu+pcS6Ca7u2Mv5tKfk/Wvx+QOGUFzvh5TtqJaKszlmRduBF1s
Em1Fr2nu4ECNZUghGgtly7jHgfVH/e4/g4QFdoPs8FigVCHep5zqid3ES79VQMX3
+UOFcO5gIXV5OPieDsp4MI/GoUxJDoghX+PTHNiovnB2WYjLw/HSHcfegNrmTg7U
WIYUItZQdFjGQqduRiZ4Gj+nqRctUAADqw1Ul6cChWOlV/6/OloHpa4b58rgsx25
sOqfDkDykpzA8/VEU7V/URjS8aJqKfxz6R9gtCrDMu4hFup9eqInB2oMd38RA/W0
ebc9c50TfB7wXjoF/s4rISXA2kK7wUZMQ4IDZq7fRktW3Ae2Uwu1eOsOOrkOR/sc
/XkubfA02xLo4HucbaDOigrpHFYtlSGWdr1ggV1P3cfgrm8qWr/Hx1MvY7X7i8rl
pWY5ResM6Kv4PUjd10NjT9odnzSwpcqnhA1QI6kBTFuaXF9+ao88LAPH+6wmmqr8
l7nQ2Rw850WnqSOXlEg5bUVPvR/08Slw87P/AnfDZW6hxlJTRSPK6fFmOGC+/ggF
ig1khjuvPuTYWAUsDGo6n5M1VG3xdrrDm000UyxxgV/+LBcq9+XTUMFMoqvsMx30
pE+9GtgUg8JciWmCGEtEueMB8qrN0Fn+Ow7UWGuqSIHCXF780g0ZeLZv35l3aC7P
z1gj7URgNkbFplzQ7c18poAeDYvr0I8S6UFCS75bQK0TJodP/CKXjvJJJEIdW9HV
SDmt3ISB4tyW/S0QrTOh/ZNXofZyLwfqNrk/cVQ11LPxLnt6dgYYbeBtOhqSHGaB
YmeVs/142moDnPCL3cG47nqhBEw2uWITZ2ziaJ+s/3EAjOQV0dkGapJYCXqKzL8L
nkJlzngEROJKe2pLOVBjbakitlB/o9sVn7U5g0bKGz8jFuRmoB4qcIq5JoenujnV
VLEzDnxMv176NwvonAMclIHTV3BAGQ7PuPThTrlZQU0OK9ZJVF69nJrRg23V9+iw
jO6q97GmvGjDHl4PNWa7v4iBekLESHmGbs5K8Lj/Av725gGhAh9T66Q2eOrnZNOe
O1akYzQcodGOU3QoYHUSsLDSQFJqoQLRcjW4CcH5BvjSzY619AChzrI3oNJd73r0
dW6hxsz9RePy4jPXZQjWZFpgpwVK2/WiDslI2kK00Y9KQDc7mzYpYDxq9rMFEDM3
m4YT1LZ0NXDZ+Jt8uPJJIe3bw/BBDHtWHmiAwhduTgTr8q10rDQdlsGBGts0TTSi
3JaS5RDi5tA2Kt/1c+F3dhBaAozWp5NYKLRKtDmBWCyMRU1/IA+MBCpsr/JKwV2b
TjlRAaf/1r+aC57msuDQVrUeCkLPzDNjLm+aE7oq3oWKMxUcqLGEKmILhSXAztUZ
OOLQ2/gFPSJWG9AMZ7FUvXT5o0KoU3ruluHwe1NCQNCjpfL7gzEtaq0Uy0SBEoOC
XGuhsB/PPD+XHmLdU/0XqGnu4kCNtfvUXMO2UHHLv5Eh6PTgIbspf3/noK3orHWi
WkpJuaDLwwvPzFv8nYLAqERcV44V05PQu9yldNCYOvk3UL4CwTs79J6GDVZ9HwS9
ATpP/BZqLnYUbdjLI+VjLtQViIYfKVeGZehnZYGHuDwvcXkDUi5SECxJU6XZq6Re
EKjl/3oMGg8V0u9dphzGqJ5Opa7rx4uhtXQntVDqzk5kmzzV/yNiLNR1muiwjD9C
ZWUlt1B3ME0zfKC2WnfbF651gt8LnrMHwYvDMjQQsTGpEEuluDU19bLk7w7QlAsm
iCve2k6/bvn35SaFshdzaUwqKTOHAtSj1JSHWCim80U02iB22ZM0bNB54gBU157j
QN1h9xczXJdnz7gnQzdzKfSV47CMmyG14GxwU1vG4vGHVh3MyN0GaU/JzZ4f/H0i
9HfK5b+pD+dRi4UNCqf/I5emXYzqLk8I7vRC/kfCrpeFG8CUdi/c/PhVcJ9v5UCN
g5DC0KI8MCwjgbo8BMovhbo3tkUqUPKr1pMzlZtoqc69v5NGxXFh17DBKldq4sCM
qtdl8Y51Unq1rjyMy6OiPHY6WJZ8A/S2GdB15l0O1DiyVJZbAbUHc3nLNmYIJjv0
V75Lh2Vou4S13cLa6LlavWkimgfPzbv0VTF0XK4P5PFwzgFWbUKPHNBMWpoD3TWl
cnKYmRmlY5LDiILtrm/TOeV0WEZzJwdqHAl1uwJUjAIVXsZ1yrAM7MvTJS8EL3FF
vtbaAXPJ2bYptEJArBkOGLv84c7ANBb8vJpqUVf1ge1Q+95OqqNSHpJTMOjyoLct
EIOKEYNlwCLT+SKY4sFINgoozHvOHqLHm3GgxpdQDwvU3icNRJQ/6JBF+V/Bj3PK
NYFMiQEKXRwK8PQfldCRPRg6aPpgJ403YYMCAoUuD6s1F27dAYuUA4Mq9+ZTaHCc
D5730n6yOFC+IkAoUPRP1RnBmvUUSF4iyk8ewMODijhQ4y+irkJFwcpxQDK6PDue
RkW0ivficfDjbAPN4PuQc16UHV36P8pAYWCzgegmVVvFpsh9ea0VpXRQxlc/kweQ
IVi2mQ6o3Z8PlS/nwk0GKIQphu18USPlafeBPm4e9NQdhqr6i65HeXJ4XEOFQE3f
+2xiUbwy+B7DBv7Oy2HryYGxWCjgVaBajxVDNRHbtNmTPI9AtSmneaZv3kZDBu3E
1VXskwfizyKCHEtWOlUNpdPk8pQLu12sK7bSwfed5W9D1dnzro3cQo1bqKiVWu+E
5KLHYLc9dYXcl1d/BLzMfKhwdeXqYwwBYLUBrvjMHAqXSHZwK39SQk/t7CKiHC0U
zojC0l9sUlAbFdrd8sCMGMUyqeUrA3J5GQ/LfXmn/wAVZ85woMbxolbq0QxIdj07
bY91usMJ5jjwXviKSKm+AfBogWKP0Dj/63y628O5BQgT9uHRM/IITN2t9VBTvJ2C
gucNY8EdrpaPC+lUYIMudNQ0G4vCXJ5x9nJ6REeP+0OoaenhQI13of+NBXD3a5vh
jfjlj83Hf3FP/WHw93UOGJZxq1aqfqXZEwObqc8Hd3ktR4vh1Gtb5V2bEhKYRiwZ
wubvaYPWTwsDukkvDmz4xGW/++/ob8Wa8pqLN4se5bm88R9SaH7BUGOZs2S+jlgD
1FBsK/pgloo98yXQQawEOTHAmfbNAjr6EN3i8Rdz5TIXIXgEB1tDHjIwg5lTLsYY
wZRyNx2WgUNeq6pruIWaKFC1uzZKOPienvVy48KQ+gkgdN6BOghf7SRWqxHSFYul
ply6meH3eiaYybalq4EznSUeYjMfI8bSQ90jB2piQSUK9lm0c3g4QIW8W8x4HrUs
RR0khhdWamLTAq2X+ucSmEaEuT7MwAydBij8eXhenj4xDboq3+dATUSh7mn4FCSs
hxoGUAGBzgh1VS/FaOL0CEvTb+WRPslr8iA2yQF9tUGIdExdlPoz9fYZYJx7Fw0f
4PQVoqE4UBPR0l39F+VNGEboINxwVz8zmCzcmERc1gVyLk9kIAzs8KTgTg+7XkSj
Fdq/3AM1lzo5UBPU/elHCpT2rs54ElQhzgAlKqmc3trSgIVSj+NgT1MQjXYwzlkB
Yuw06K76gAM10d2fdAtBPhRQwIAV0ESgVBNISlSCgU6Ntgb9p1yxaV2+hcbFsMDO
fe5iEQdqYi/xVoJ8uFaMhUudRR5o7GRnawbe/aCFM6XdD7r4edBT81eorjvv4nGo
SWCpYATwDAcsChRaKXX0oXIPmQ1Fh2Uk00ZPHISGgc3qhkvc5U0mqKLRVCGPFWj8
TM8ea5VUF4iP8dhZrDa48cmrdPD9pjc4UJNKU40GUOxZLgLr5pjnqL+1TAMD5vLM
idDtLuFATTVLNZywghYoYIAa8DlBBMuyJ+lY6c6TxeBuaiviQE1ioT5Si8VWgQ4H
KEHUg8m5FvS2mdBz9jBWbLo27uUFdpPa/UXkAqVBLBU7zAxFujkBLJmbaAYaLVRl
TT13eZPZUg3LGkUBFC4T2eXFJKbTNqqKqmoOFNdUI9dP6mOddToY5qykhXadFe+D
+1IXB2oq7/6iEuTKwkZPQWeA9mNvQu2lTg7UVBLq0hAucKRACYZY6vLo0Rxnj0BN
c7tr4+t+DtRUcn+jJcgpUEYrWLO20MH3HTgso+48DxtMRaE+WkDhDXN5tMCu+kOo
qj3n2riP5/KmpKa6lX4aLlA4+B4nr+DMhc7y34P7/FWuoXicKrIdnnq3LNpANFQy
3PysANwtXa7NHCiuqSIR5HjDwKZJ6cvrrj3IgeJLE1IYIVCCGCMPy6AT7N6C6gut
RRwovsRbwiMFDyIaABsIYHI8ALq4OdB99jBUnbvk2sRzeXwFLNVIdngYKY+dBuYF
OZTJzpNvk11eo2vzfm6h+FI1lXTrnV6450zOhyFmmhPajrxE66E4UHyFWqoR7PAw
h2eYtZxaqs6qv3Cg+Bp89zeUIFc/F7vkcdqH1XHyANRcbC/iQPEVVqgPByhsTqC5
PNsMmstzX2hzbXqdR8r5GqmmUv4jmuwQu/QJGjbAXF5VTR13eXwNYakGE+SqKE9/
APTT0qGz8s9Q6a51bXqDVxvwNQxNFc710Vxe6mrait55+l2ioW5wC8XXyHZ/WrBi
MzeBaI6Dm5+76GwDDhRfEe/+BKMdTOqwjOoSDhRfEVgqBigguzzr8qdlUX78ANQ0
tiBQryggcaD4Gp5QZ8MJ5vT7QZ+QCt21h8Bdf2HXxn2el7iF4isiTUWPiHU+CILe
SIdlnD3XVLBpP7ysgOPRXBwovobWVOb5j0BMYhrc+OhVaLza9dqGN+AlBRgvc3Gg
+BoeVOb5D8tdL+5SaLrW9WrOPvgFBI+d8YaBiwPF162hws7hjuNvQUvrzVce3gM/
B81ZRszFgeJreFD11H0MV6+2/nLNbtipPCdpoNLeOVB83XIJR/PhZ6sK4KfMcyxU
WsBCgCrPZ+adDVVCM4zntZ+L5ONwP5Ovwde9+6P7/sFOJrVCcCZZ4JB2GHi032Dz
OviawmswqMwaqIa6OFB8DQmVUes5BoGIA8XXsKHSwyCyRAMTB4qvYUOlGwQaaRDQ
+OJrSKiGOoiEw8RX1FBxiPiKGiq++OJQ8cWh4muqQcVTd3yN9uJQ8cWh4otDxReH
ii++ol//X4ABACXNFVQyXwmFAAAAAElFTkSuQmCC

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=widgets.js
Content-Type: application/javascript; charset=utf-8; name=widgets.js
Content-Location: http://platform.twitter.com/widgets.js
Content-Transfer-Encoding: Base64

aWYoIXdpbmRvdy5fX3R3dHRybHIpeyhmdW5jdGlvbihhLGIpe2Z1bmN0aW9uIHMo
YSl7Zm9yKHZhciBiPTEsYztjPWFyZ3VtZW50c1tiXTtiKyspZm9yKHZhciBkIGlu
IGMpYVtkXT1jW2RdO3JldHVybiBhfWZ1bmN0aW9uIHQoYSl7cmV0dXJuIEFycmF5
LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpfWZ1bmN0aW9uIHYoYSxiKXtmb3IodmFy
IGM9MCxkO2Q9YVtjXTtjKyspaWYoYj09ZClyZXR1cm4gYztyZXR1cm4tMX1mdW5j
dGlvbiB3KCl7dmFyIGE9dChhcmd1bWVudHMpLGI9W107Zm9yKHZhciBjPTAsZD1h
Lmxlbmd0aDtjPGQ7YysrKWFbY10ubGVuZ3RoPjAmJmIucHVzaChhW2NdLnJlcGxh
Y2UoL1wvJC8sIiIpKTtyZXR1cm4gYi5qb2luKCIvIil9ZnVuY3Rpb24geChhLGIs
Yyl7dmFyIGQ9Yi5zcGxpdCgiLyIpLGU9YTt3aGlsZShkLmxlbmd0aD4xKXt2YXIg
Zj1kLnNoaWZ0KCk7ZT1lW2ZdPWVbZl18fHt9fWVbZFswXV09Y31mdW5jdGlvbiB5
KCl7fWZ1bmN0aW9uIHooYSxiKXt0aGlzLmlkPXRoaXMucGF0aD1hLHRoaXMuZm9y
Y2U9ISFifWZ1bmN0aW9uIEEoYSxiKXt0aGlzLmlkPWEsdGhpcy5ib2R5PWIsdHlw
ZW9mIGI9PSJ1bmRlZmluZWQiJiYodGhpcy5wYXRoPXRoaXMucmVzb2x2ZVBhdGgo
YSkpfWZ1bmN0aW9uIEIoYSxiKXt0aGlzLmRlcHM9YSx0aGlzLmNvbGxlY3RSZXN1
bHRzPWIsdGhpcy5kZXBzLmxlbmd0aD09MCYmdGhpcy5jb21wbGV0ZSgpfWZ1bmN0
aW9uIEMoYSxiKXt0aGlzLmRlcHM9YSx0aGlzLmNvbGxlY3RSZXN1bHRzPWJ9ZnVu
Y3Rpb24gRCgpe2Zvcih2YXIgYSBpbiBkKWlmKGRbYV0ucmVhZHlTdGF0ZT09Imlu
dGVyYWN0aXZlIilyZXR1cm4gbFtkW2FdLmlkXX1mdW5jdGlvbiBFKGEsYil7dmFy
IGQ7cmV0dXJuIWEmJmMmJihkPWt8fEQoKSksZD8oZGVsZXRlIGxbZC5zY3JpcHRJ
ZF0sZC5ib2R5PWIsZC5leGVjdXRlKCkpOihqPWQ9bmV3IEEoYSxiKSxpW2QuaWRd
PWQpLGR9ZnVuY3Rpb24gRigpe3ZhciBhPXQoYXJndW1lbnRzKSxiLGM7cmV0dXJu
IHR5cGVvZiBhWzBdPT0ic3RyaW5nIiYmKGI9YS5zaGlmdCgpKSxjPWEuc2hpZnQo
KSxFKGIsYyl9ZnVuY3Rpb24gRyhhLGIpe3ZhciBjPWIuaWR8fCIiLGQ9Yy5zcGxp
dCgiLyIpO2QucG9wKCk7dmFyIGU9ZC5qb2luKCIvIik7cmV0dXJuIGEucmVwbGFj
ZSgvXlwuLyxlKX1mdW5jdGlvbiBIKGEsYil7ZnVuY3Rpb24gZChhKXtyZXR1cm4g
QS5leHBvcnRzW0coYSxiKV19dmFyIGM9W107Zm9yKHZhciBlPTAsZj1hLmxlbmd0
aDtlPGY7ZSsrKXtpZihhW2VdPT0icmVxdWlyZSIpe2MucHVzaChkKTtjb250aW51
ZX1pZihhW2VdPT0iZXhwb3J0cyIpe2IuZXhwb3J0cz1iLmV4cG9ydHN8fHt9LGMu
cHVzaChiLmV4cG9ydHMpO2NvbnRpbnVlfWMucHVzaChkKGFbZV0pKX1yZXR1cm4g
Y31mdW5jdGlvbiBJKCl7dmFyIGE9dChhcmd1bWVudHMpLGI9W10sYyxkO3JldHVy
biB0eXBlb2YgYVswXT09InN0cmluZyImJihjPWEuc2hpZnQoKSksdShhWzBdKSYm
KGI9YS5zaGlmdCgpKSxkPWEuc2hpZnQoKSxFKGMsZnVuY3Rpb24oYSl7ZnVuY3Rp
b24gZigpe3ZhciBlPUgodChiKSxjKSxmO3R5cGVvZiBkPT0iZnVuY3Rpb24iP2Y9
ZC5hcHBseShjLGUpOmY9ZCx0eXBlb2YgZj09InVuZGVmaW5lZCImJihmPWMuZXhw
b3J0cyksYShmKX12YXIgYz10aGlzLGU9W107Zm9yKHZhciBnPTAsaD1iLmxlbmd0
aDtnPGg7ZysrKXt2YXIgaT1iW2ddO3YoWyJyZXF1aXJlIiwiZXhwb3J0cyJdLGkp
PT0tMSYmZS5wdXNoKEcoaSxjKSl9ZS5sZW5ndGg+MD9KLmFwcGx5KHRoaXMsZS5j
b25jYXQoZikpOmYoKX0pfWZ1bmN0aW9uIEooKXt2YXIgYT10KGFyZ3VtZW50cyks
YixjO3R5cGVvZiBhW2EubGVuZ3RoLTFdPT0iZnVuY3Rpb24iJiYoYj1hLnBvcCgp
KSx0eXBlb2YgYVthLmxlbmd0aC0xXT09ImJvb2xlYW4iJiYoYz1hLnBvcCgpKTt2
YXIgZD1uZXcgQihLKGEsYyksYyk7cmV0dXJuIGImJmQudGhlbihiKSxkfWZ1bmN0
aW9uIEsoYSxiKXt2YXIgYz1bXTtmb3IodmFyIGQ9MCxlO2U9YVtkXTtkKyspdHlw
ZW9mIGU9PSJzdHJpbmciJiYoZT1MKGUpKSx1KGUpJiYoZT1uZXcgQyhLKGUsYiks
YikpLGMucHVzaChlKTtyZXR1cm4gY31mdW5jdGlvbiBMKGEpe3ZhciBiLGM7Zm9y
KHZhciBkPTAsZTtlPUoubWF0Y2hlcnNbZF07ZCsrKXt2YXIgZj1lWzBdLGc9ZVsx
XTtpZihiPWEubWF0Y2goZikpcmV0dXJuIGcoYSl9dGhyb3cgbmV3IEVycm9yKGEr
IiB3YXMgbm90IHJlY29nbmlzZWQgYnkgbG9hZGVyIil9ZnVuY3Rpb24gTigpe3Jl
dHVybiBhLnVzaW5nPW0sYS5wcm92aWRlPW4sYS5kZWZpbmU9byxhLmxvYWRydW5u
ZXI9cCxNfWZ1bmN0aW9uIE8oYSl7Zm9yKHZhciBiPTA7YjxKLmJ1bmRsZXMubGVu
Z3RoO2IrKylmb3IodmFyIGMgaW4gSi5idW5kbGVzW2JdKWlmKGMhPWEmJnYoSi5i
dW5kbGVzW2JdW2NdLGEpPi0xKXJldHVybiBjfXZhciBjPWEuYXR0YWNoRXZlbnQm
JiFhLm9wZXJhLGQ9Yi5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IiksZT0w
LGYsZz1iLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGg9e30saT17fSxqLGssbD17
fSxtPWEudXNpbmcsbj1hLnByb3ZpZGUsbz1hLmRlZmluZSxwPWEubG9hZHJ1bm5l
cjtmb3IodmFyIHE9MCxyO3I9ZFtxXTtxKyspaWYoci5zcmMubWF0Y2goL2xvYWRy
dW5uZXJcLmpzKFw/fCN8JCkvKSl7Zj1yO2JyZWFrfXZhciB1PUFycmF5LmlzQXJy
YXl8fGZ1bmN0aW9uKGEpe3JldHVybiBhLmNvbnN0cnVjdG9yPT1BcnJheX07eS5w
cm90b3R5cGUudGhlbj1mdW5jdGlvbihiKXt2YXIgYz10aGlzO3JldHVybiB0aGlz
LnN0YXJ0ZWR8fCh0aGlzLnN0YXJ0ZWQ9ITAsdGhpcy5zdGFydCgpKSx0aGlzLmNv
bXBsZXRlZD9iLmFwcGx5KGEsdGhpcy5yZXN1bHRzKToodGhpcy5jYWxsYmFja3M9
dGhpcy5jYWxsYmFja3N8fFtdLHRoaXMuY2FsbGJhY2tzLnB1c2goYikpLHRoaXN9
LHkucHJvdG90eXBlLnN0YXJ0PWZ1bmN0aW9uKCl7fSx5LnByb3RvdHlwZS5jb21w
bGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLmNvbXBsZXRlZCl7dGhpcy5yZXN1bHRz
PXQoYXJndW1lbnRzKSx0aGlzLmNvbXBsZXRlZD0hMDtpZih0aGlzLmNhbGxiYWNr
cylmb3IodmFyIGI9MCxjO2M9dGhpcy5jYWxsYmFja3NbYl07YisrKWMuYXBwbHko
YSx0aGlzLnJlc3VsdHMpfX0sei5sb2FkZWQ9W10sei5wcm90b3R5cGU9bmV3IHks
ei5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLGIsYyxkO3Jl
dHVybihkPWlbdGhpcy5pZF0pPyhkLnRoZW4oZnVuY3Rpb24oKXthLmNvbXBsZXRl
KCl9KSx0aGlzKTooKGI9aFt0aGlzLmlkXSk/Yi50aGVuKGZ1bmN0aW9uKCl7YS5s
b2FkZWQoKX0pOiF0aGlzLmZvcmNlJiZ2KHoubG9hZGVkLHRoaXMuaWQpPi0xP3Ro
aXMubG9hZGVkKCk6KGM9Tyh0aGlzLmlkKSk/SihjLGZ1bmN0aW9uKCl7YS5sb2Fk
ZWQoKX0pOnRoaXMubG9hZCgpLHRoaXMpfSx6LnByb3RvdHlwZS5sb2FkPWZ1bmN0
aW9uKCl7dmFyIGI9dGhpcztoW3RoaXMuaWRdPWI7dmFyIGM9Zy5jbG9uZU5vZGUo
ITEpO3RoaXMuc2NyaXB0SWQ9Yy5pZD0iTFIiKyArK2UsYy50eXBlPSJ0ZXh0L2ph
dmFzY3JpcHQiLGMuYXN5bmM9ITAsYy5vbmVycm9yPWZ1bmN0aW9uKCl7dGhyb3cg
bmV3IEVycm9yKGIucGF0aCsiIG5vdCBsb2FkZWQiKX0sYy5vbnJlYWR5c3RhdGVj
aGFuZ2U9Yy5vbmxvYWQ9ZnVuY3Rpb24oYyl7Yz1hLmV2ZW50fHxjO2lmKGMudHlw
ZT09ImxvYWQifHx2KFsibG9hZGVkIiwiY29tcGxldGUiXSx0aGlzLnJlYWR5U3Rh
dGUpPi0xKXRoaXMub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsYi5sb2FkZWQoKX0s
Yy5zcmM9dGhpcy5wYXRoLGs9dGhpcyxkWzBdLnBhcmVudE5vZGUuaW5zZXJ0QmVm
b3JlKGMsZFswXSksaz1udWxsLGxbYy5pZF09dGhpc30sei5wcm90b3R5cGUubG9h
ZGVkPWZ1bmN0aW9uKCl7dGhpcy5jb21wbGV0ZSgpfSx6LnByb3RvdHlwZS5jb21w
bGV0ZT1mdW5jdGlvbigpe3Yoei5sb2FkZWQsdGhpcy5pZCk9PS0xJiZ6LmxvYWRl
ZC5wdXNoKHRoaXMuaWQpLGRlbGV0ZSBoW3RoaXMuaWRdLHkucHJvdG90eXBlLmNv
bXBsZXRlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sQS5leHBvcnRzPXt9LEEucHJv
dG90eXBlPW5ldyB6LEEucHJvdG90eXBlLnJlc29sdmVQYXRoPWZ1bmN0aW9uKGEp
e3JldHVybiB3KEoucGF0aCxhKyIuanMiKX0sQS5wcm90b3R5cGUuc3RhcnQ9ZnVu
Y3Rpb24oKXt2YXIgYSxiLGM9dGhpcyxkO3RoaXMuYm9keT90aGlzLmV4ZWN1dGUo
KTooYT1BLmV4cG9ydHNbdGhpcy5pZF0pP3RoaXMuZXhwKGEpOihiPWlbdGhpcy5p
ZF0pP2IudGhlbihmdW5jdGlvbihhKXtjLmV4cChhKX0pOihidW5kbGU9Tyh0aGlz
LmlkKSk/SihidW5kbGUsZnVuY3Rpb24oKXtjLnN0YXJ0KCl9KTooaVt0aGlzLmlk
XT10aGlzLHRoaXMubG9hZCgpKX0sQS5wcm90b3R5cGUubG9hZGVkPWZ1bmN0aW9u
KCl7dmFyIGEsYixkPXRoaXM7Yz8oYj1BLmV4cG9ydHNbdGhpcy5pZF0pP3RoaXMu
ZXhwKGIpOihhPWlbdGhpcy5pZF0pJiZhLnRoZW4oZnVuY3Rpb24oYSl7ZC5leHAo
YSl9KTooYT1qLGo9bnVsbCxhLmlkPWEuaWR8fHRoaXMuaWQsYS50aGVuKGZ1bmN0
aW9uKGEpe2QuZXhwKGEpfSkpfSxBLnByb3RvdHlwZS5jb21wbGV0ZT1mdW5jdGlv
bigpe2RlbGV0ZSBpW3RoaXMuaWRdLHoucHJvdG90eXBlLmNvbXBsZXRlLmFwcGx5
KHRoaXMsYXJndW1lbnRzKX0sQS5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbigp
e3ZhciBhPXRoaXM7dHlwZW9mIHRoaXMuYm9keT09Im9iamVjdCI/dGhpcy5leHAo
dGhpcy5ib2R5KTp0eXBlb2YgdGhpcy5ib2R5PT0iZnVuY3Rpb24iJiZ0aGlzLmJv
ZHkuYXBwbHkod2luZG93LFtmdW5jdGlvbihiKXthLmV4cChiKX1dKX0sQS5wcm90
b3R5cGUuZXhwPWZ1bmN0aW9uKGEpe3RoaXMuY29tcGxldGUodGhpcy5leHBvcnRz
PUEuZXhwb3J0c1t0aGlzLmlkXT1hfHx7fSl9LEIucHJvdG90eXBlPW5ldyB5LEIu
cHJvdG90eXBlLnN0YXJ0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYigpe3ZhciBiPVtd
O2EuY29sbGVjdFJlc3VsdHMmJihiWzBdPXt9KTtmb3IodmFyIGM9MCxkO2Q9YS5k
ZXBzW2NdO2MrKyl7aWYoIWQuY29tcGxldGVkKXJldHVybjtkLnJlc3VsdHMubGVu
Z3RoPjAmJihhLmNvbGxlY3RSZXN1bHRzP2QgaW5zdGFuY2VvZiBDP3MoYlswXSxk
LnJlc3VsdHNbMF0pOngoYlswXSxkLmlkLGQucmVzdWx0c1swXSk6Yj1iLmNvbmNh
dChkLnJlc3VsdHMpKX1hLmNvbXBsZXRlLmFwcGx5KGEsYil9dmFyIGE9dGhpcztm
b3IodmFyIGM9MCxkO2Q9dGhpcy5kZXBzW2NdO2MrKylkLnRoZW4oYik7cmV0dXJu
IHRoaXN9LEMucHJvdG90eXBlPW5ldyB5LEMucHJvdG90eXBlLnN0YXJ0PWZ1bmN0
aW9uKCl7dmFyIGE9dGhpcyxiPTAsYz1bXTtyZXR1cm4gYS5jb2xsZWN0UmVzdWx0
cyYmKGNbMF09e30pLGZ1bmN0aW9uIGQoKXt2YXIgZT1hLmRlcHNbYisrXTtlP2Uu
dGhlbihmdW5jdGlvbihiKXtlLnJlc3VsdHMubGVuZ3RoPjAmJihhLmNvbGxlY3RS
ZXN1bHRzP2UgaW5zdGFuY2VvZiBDP3MoY1swXSxlLnJlc3VsdHNbMF0pOngoY1sw
XSxlLmlkLGUucmVzdWx0c1swXSk6Yy5wdXNoKGUucmVzdWx0c1swXSkpLGQoKX0p
OmEuY29tcGxldGUuYXBwbHkoYSxjKX0oKSx0aGlzfSxJLmFtZD17fTt2YXIgTT1m
dW5jdGlvbihhKXtyZXR1cm4gYShKLEYsTSxkZWZpbmUpfTtNLlNjcmlwdD16LE0u
TW9kdWxlPUEsTS5Db2xsZWN0aW9uPUIsTS5TZXF1ZW5jZT1DLE0uRGVwZW5kZW5j
eT15LE0ubm9Db25mbGljdD1OLGEubG9hZHJ1bm5lcj1NLGEudXNpbmc9SixhLnBy
b3ZpZGU9RixhLmRlZmluZT1JLEoucGF0aD0iIixKLm1hdGNoZXJzPVtdLEoubWF0
Y2hlcnMuYWRkPWZ1bmN0aW9uKGEsYil7dGhpcy51bnNoaWZ0KFthLGJdKX0sSi5t
YXRjaGVycy5hZGQoLyhec2NyaXB0IXxcLmpzJCkvLGZ1bmN0aW9uKGEpe3ZhciBi
PW5ldyB6KGEucmVwbGFjZSgvXlwkLyxKLnBhdGgucmVwbGFjZSgvXC8kLywiIikr
Ii8iKS5yZXBsYWNlKC9ec2NyaXB0IS8sIiIpLCExKTtyZXR1cm4gYi5pZD1hLGJ9
KSxKLm1hdGNoZXJzLmFkZCgvXlthLXpBLVowLTlfXC1cL10rJC8sZnVuY3Rpb24o
YSl7cmV0dXJuIG5ldyBBKGEpfSksSi5idW5kbGVzPVtdLGYmJihKLnBhdGg9Zi5n
ZXRBdHRyaWJ1dGUoImRhdGEtcGF0aCIpfHxmLnNyYy5zcGxpdCgvbG9hZHJ1bm5l
clwuanMvKVswXXx8IiIsKG1haW49Zi5nZXRBdHRyaWJ1dGUoImRhdGEtbWFpbiIp
KSYmSi5hcHBseShhLG1haW4uc3BsaXQoL1xzKixccyovKSkudGhlbihmdW5jdGlv
bigpe30pKX0pKHRoaXMsZG9jdW1lbnQpOyh3aW5kb3cuX190d3R0cmxyID0gbG9h
ZHJ1bm5lci5ub0NvbmZsaWN0KCkpO31fX3R3dHRybHIoZnVuY3Rpb24odXNpbmcs
IHByb3ZpZGUsIGxvYWRydW5uZXIsIGRlZmluZSkge3Byb3ZpZGUoInV0aWwvaWZy
YW1lIixmdW5jdGlvbihhKXthKGZ1bmN0aW9uKGEpe3ZhciBiPWRvY3VtZW50LmNy
ZWF0ZUVsZW1lbnQoImRpdiIpLGM7Yi5pbm5lckhUTUw9IjxpZnJhbWUgYWxsb3d0
cmFuc3BhcmVuY3k9J3RydWUnIGZyYW1lYm9yZGVyPScwJyBzY3JvbGxpbmc9J25v
Jz48L2lmcmFtZT4iLGM9Yi5maXJzdENoaWxkLGMuc3JjPWEudXJsLGMuY2xhc3NO
YW1lPWEuY2xhc3NOYW1lfHwiIjtpZihhLmNzcylmb3IodmFyIGQgaW4gYS5jc3Mp
Yy5zdHlsZVtkXT1hLmNzc1tkXTtpZihhLmF0dHJpYnV0ZXMpZm9yKHZhciBlIGlu
IGEuYXR0cmlidXRlcyljLnNldEF0dHJpYnV0ZShlLGEuYXR0cmlidXRlc1tlXSk7
cmV0dXJuIGEucmVwbGFjZT9hLnJlcGxhY2UucGFyZW50Tm9kZS5yZXBsYWNlQ2hp
bGQoYyxhLnJlcGxhY2UpOmRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGMsZG9j
dW1lbnQuYm9keS5maXJzdENoaWxkKSxjfSl9KTsKcHJvdmlkZSgidXRpbC9xdWVy
eXN0cmluZyIsZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYihhKXtyZXR1cm4gZW5jb2Rl
VVJJQ29tcG9uZW50KGEpLnJlcGxhY2UoL1wrL2csIiUyQiIpfWZ1bmN0aW9uIGMo
YSl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChhKX1mdW5jdGlvbiBkKGEpe3Zh
ciBjPVtdO2Zvcih2YXIgZCBpbiBhKWFbZF0hPT1udWxsJiZ0eXBlb2YgYVtkXSE9
InVuZGVmaW5lZCImJmMucHVzaChiKGQpKyI9IitiKGFbZF0pKTtyZXR1cm4gYy5z
b3J0KCkuam9pbigiJiIpfWZ1bmN0aW9uIGUoYSl7dmFyIGI9e30sZCxlLGYsZztp
ZihhKXtkPWEuc3BsaXQoIiYiKTtmb3IoZz0wO2Y9ZFtnXTtnKyspZT1mLnNwbGl0
KCI9IiksZS5sZW5ndGg9PTImJihiW2MoZVswXSldPWMoZVsxXSkpfXJldHVybiBi
fWZ1bmN0aW9uIGYoYSxiKXt2YXIgYz1kKGIpO3JldHVybiBjLmxlbmd0aD4wP2Eu
aW5kZXhPZigiPyIpPj0wP2ErIiYiK2QoYik6YSsiPyIrZChiKTphfWEoe3VybDpm
LGRlY29kZTplLGVuY29kZTpkLGVuY29kZVBhcnQ6YixkZWNvZGVQYXJ0OmN9KX0p
Owpwcm92aWRlKCJ1dGlsL25vZGVzZWxlY3QiLGZ1bmN0aW9uKGEpe3ZhciBiPWRv
Y3VtZW50LGM9InF1ZXJ5U2VsZWN0b3JBbGwiaW4gYj9mdW5jdGlvbihhLGMpe3Jl
dHVybiBiLnF1ZXJ5U2VsZWN0b3JBbGwoYSsiLiIrYyl9OiJnZXRFbGVtZW50c0J5
Q2xhc3NOYW1lImluIGI/ZnVuY3Rpb24oYSxjKXt2YXIgZD1iLmdldEVsZW1lbnRz
QnlDbGFzc05hbWUoYyksZSxmPVtdO2ZvcihpPTA7ZT1kW2ldO2krKyllLnRhZ05h
bWUudG9Mb3dlckNhc2UoKT09YSYmZi5wdXNoKGUpO3JldHVybiBmfTpmdW5jdGlv
bihhLGMpe3ZhciBkPWIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYSksZSxmPW5ldyBS
ZWdFeHAoIig/Ol58XFxzKykiK2MrIig/Olxccyt8JCkiKSxnPVtdO2ZvcihpPTA7
ZT1kW2ldO2krKylmLnRlc3QoZS5jbGFzc05hbWUpJiZnLnB1c2goZSk7cmV0dXJu
IGd9O2EoYyl9KTsKcHJvdmlkZSgiJHZlbmRvci9kb21yZWFkeS9yZWFkeS5qcyIs
IGZ1bmN0aW9uKGV4cG9ydHMpIHshZnVuY3Rpb24oYSl7ZnVuY3Rpb24gaygpe2I9
MTtmb3IodmFyIGE9MCxkPWMubGVuZ3RoO2E8ZDthKyspY1thXSgpfXZhciBiPTAs
Yz1bXSxkLGUsZj0hMSxnPWEuY3JlYXRlRWxlbWVudCgiYSIpLGg9IkRPTUNvbnRl
bnRMb2FkZWQiLGk9ImFkZEV2ZW50TGlzdGVuZXIiLGo9Im9ucmVhZHlzdGF0ZWNo
YW5nZSI7L15sb2FkZXxjLy50ZXN0KGEucmVhZHlTdGF0ZSkmJihiPTEpLGFbaV0m
JmFbaV0oaCxlPWZ1bmN0aW9uKCl7YS5yZW1vdmVFdmVudExpc3RlbmVyKGgsZSxm
KSxrKCl9LGYpLGcuZG9TY3JvbGwmJmEuYXR0YWNoRXZlbnQoaixkPWZ1bmN0aW9u
KCl7L15jLy50ZXN0KGEucmVhZHlTdGF0ZSkmJihhLmRldGFjaEV2ZW50KGosZCks
aygpKX0pO3ZhciBsPWcuZG9TY3JvbGw/ZnVuY3Rpb24oYSl7c2VsZiE9dG9wP2I/
YSgpOmMucHVzaChhKTohZnVuY3Rpb24oKXt0cnl7Zy5kb1Njcm9sbCgibGVmdCIp
fWNhdGNoKGIpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bChhKX0sNTAp
fWEoKX0oKX06ZnVuY3Rpb24oYSl7Yj9hKCk6Yy5wdXNoKGEpfTt0eXBlb2YgbW9k
dWxlIT0idW5kZWZpbmVkIiYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9
e2RvbVJlYWR5Omx9OndpbmRvdy5kb21SZWFkeT1sfShkb2N1bWVudCk7ZXhwb3J0
cygpO2xvYWRydW5uZXIuU2NyaXB0LmxvYWRlZC5wdXNoKCIkdmVuZG9yL2RvbXJl
YWR5L3JlYWR5LmpzIil9KTsKcHJvdmlkZSgidXRpbC9kb21yZWFkeSIsZnVuY3Rp
b24oYSl7dXNpbmcoIiR2ZW5kb3IvZG9tcmVhZHkvcmVhZHkuanMiLGZ1bmN0aW9u
KCl7YShkb21SZWFkeSl9KX0pOwpwcm92aWRlKCJ1dGlsL3V0aWwiLGZ1bmN0aW9u
KGEpe2Z1bmN0aW9uIGIoYSl7Zm9yKHZhciBiPTEsYztjPWFyZ3VtZW50c1tiXTti
KyspZm9yKHZhciBkIGluIGMpYVtkXT1jW2RdO3JldHVybiBhfWZ1bmN0aW9uIGMo
YSl7cmV0dXJuIGIoW10sYSl9ZnVuY3Rpb24gZChhKXtmb3IodmFyIGIgaW4gYSlh
Lmhhc093blByb3BlcnR5KGIpJiYhYVtiXSYmYVtiXSE9PSExJiZhW2JdIT09MCYm
ZGVsZXRlIGFbYl19ZnVuY3Rpb24gZShhLGIpe2lmKGEuaW5kZXhPZilyZXR1cm4g
YS5pbmRleE9mKGIpO2Zvcih2YXIgYz0wLGQ7ZD1hW2NdO2MrKylpZihiPT1kKXJl
dHVybiBjO3JldHVybi0xfWZ1bmN0aW9uIGYoYSxiKXtpZighYSlyZXR1cm4gbnVs
bDtpZighYilyZXR1cm4gYTtpZihhLmZpbHRlcilyZXR1cm4gYS5maWx0ZXIoYik7
dmFyIGM9W10sZD0wLGU9YS5sZW5ndGg7Zm9yKDtkPGU7ZCsrKWIoYVtkXSkmJmMu
cHVzaChhW2RdKTtyZXR1cm4gY31mdW5jdGlvbiBnKGEsYil7aWYoYS5jb250YWlu
cylyZXR1cm4gYS5jb250YWlucyhiKTt2YXIgYz1iLnBhcmVudE5vZGU7d2hpbGUo
Yyl7aWYoYz09PWEpcmV0dXJuITA7Yz1jLnBhcmVudE5vZGV9cmV0dXJuITF9YSh7
YXVnOmIsYXJyYXk6YyxpbmRleE9mOmUsZmlsdGVyOmYsY29tcGFjdDpkLGNvbnRh
aW5zRWxlbWVudDpnfSl9KTsKcHJvdmlkZSgidGZ3L3dpZGdldC9iYXNlIixmdW5j
dGlvbihhKXt1c2luZygidXRpbC91dGlsIiwidXRpbC9kb21yZWFkeSIsInV0aWwv
bm9kZXNlbGVjdCIsInV0aWwvcXVlcnlzdHJpbmciLCJ1dGlsL2lmcmFtZSIsZnVu
Y3Rpb24oYixjLGQsZSxmKXtmdW5jdGlvbiBtKGEpe2lmKCFhKXJldHVybjtyZXR1
cm4gYS5sYW5nP2EubGFuZzptKGEucGFyZW50Tm9kZSl9ZnVuY3Rpb24gbigpe3Zh
ciBhPWkud2lkZ2V0cyxiLGM7Zm9yKHZhciBlIGluIGEpe2UubWF0Y2goL1wuLyk/
Yj1kLmFwcGx5KHRoaXMsZS5zcGxpdCgiLiIpKTpiPWRvY3VtZW50LmdldEVsZW1l
bnRzQnlUYWdOYW1lKGUpO2Zvcih2YXIgZj0wLGc7Zz1iW2ZdO2YrKyl7aWYoZy5n
ZXRBdHRyaWJ1dGUoImRhdGEtdHd0dHItcmVuZGVyZWQiKSljb250aW51ZTtnLnNl
dEF0dHJpYnV0ZSgiZGF0YS10d3R0ci1yZW5kZXJlZCIsInRydWUiKSxjPW5ldyBh
W2VdKGcpLGoubGlzdC5wdXNoKGMpLGouYnlJZFtjLmlkXT1jLGMucmVuZGVyKGkp
fX19ZnVuY3Rpb24gbyhhKXtpPWF9ZnVuY3Rpb24gcCgpe24oKX1mdW5jdGlvbiBx
KGEpe3JldHVybiBhJiZqLmJ5SWRbYV0/ai5ieUlkW2FdLmVsZW1lbnQ6bnVsbH12
YXIgZz0wLGgsaSxqPXtsaXN0OltdLGJ5SWQ6e319LGs9eyJ6aC10dyI6eyIle2Zv
bGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9IOS9
jei3n+maqOiAhSIsIjEwMEsrIjoi6LaF6YGO5Y2B6JCsIiwiMTBrIHVuaXQiOiIx
6JCsIOWWruS9jSIsRm9sbG93OiLot5/pmqgiLCJGb2xsb3cgJXtzY3JlZW5fbmFt
ZX0iOiLot5/pmqggJXtzY3JlZW5fbmFtZX0iLEs6IuWNgyIsTToi55m+6JCsIixU
d2VldDoi5o6o5paHIiwiVHdlZXQgJXtoYXNodGFnfSI6IuaOqOaWhyV7aGFzaHRh
Z30iLCJUd2VldCB0byAle25hbWV9Ijoi5o6o5paH57WmJXtuYW1lfSJ9LCJ6aC1j
biI6eyIle2ZvbGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNf
Y291bnR9IOWFs+azqOiAhSIsIjEwMEsrIjoiMTDkuIcrIiwiMTBrIHVuaXQiOiIx
5LiH5Y2V5YWDIixGb2xsb3c6IuWFs+azqCIsIkZvbGxvdyAle3NjcmVlbl9uYW1l
fSI6IuWFs+azqCAle3NjcmVlbl9uYW1lfSIsSzoi5Y2DIixNOiLnmb7kuIciLFR3
ZWV0OiLlj5HmjqgiLCJUd2VldCAle2hhc2h0YWd9Ijoi5LulICV7aGFzaHRhZ30g
5Y+R5o6oIiwiVHdlZXQgdG8gJXtuYW1lfSI6IuWPkeaOqOe7mSAle25hbWV9In0s
amE6eyIle2ZvbGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNf
Y291bnR95Lq644Gu44OV44Kp44Ot44Ov44O8IiwiMTAwSysiOiIxMOS4h+S7peS4
iiIsIjEwayB1bml0Ijoi5LiHIixGb2xsb3c6IuODleOCqeODreODvOOBmeOCiyIs
IkZvbGxvdyAle3NjcmVlbl9uYW1lfSI6IiV7c2NyZWVuX25hbWV944GV44KT44KS
44OV44Kp44Ot44O8IixLOiJLIixNOiJNIixUd2VldDoi44OE44Kk44O844OIIiwi
VHdlZXQgJXtoYXNodGFnfSI6IiV7aGFzaHRhZ30g44KS44OE44Kk44O844OI44GZ
44KLIiwiVHdlZXQgdG8gJXtuYW1lfSI6IiV7bmFtZX3jgZXjgpPjgbjjg4TjgqTj
g7zjg4jjgZnjgosifSxydTp7IiV7Zm9sbG93ZXJzX2NvdW50fSBmb2xsb3dlcnMi
OiLQp9C40YLQsNGC0LXQu9C4OiAle2ZvbGxvd2Vyc19jb3VudH0gIiwiMTAwSysi
OiIxMDAg0YLRi9GBLisiLCIxMGsgdW5pdCI6ItCx0LvQvtC6IDEwayIsRm9sbG93
OiLQp9C40YLQsNGC0YwiLCJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiLQp9C40YLQ
sNGC0YwgJXtzY3JlZW5fbmFtZX0iLEs6ItGC0YvRgS4iLE06ItC80LvQvS4iLFR3
ZWV0OiLQotCy0LjRgtC90YPRgtGMIiwiVHdlZXQgJXtoYXNodGFnfSI6ItCi0LLQ
uNGC0L3Rg9GC0YwgJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7bmFtZX0iOiLQotCy
0LjRgtC90YPRgtGMICV7bmFtZX0ifSxkYTp7IiV7Zm9sbG93ZXJzX2NvdW50fSBm
b2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19jb3VudH0gZsO4bGdlcmUiLCIxMDBLKyI6
IjEwMEsrIiwiMTBrIHVuaXQiOiIxMGsgZW5oZWQiLEZvbGxvdzoiRsO4bGciLCJG
b2xsb3cgJXtzY3JlZW5fbmFtZX0iOiJGw7hsZyAle3NjcmVlbl9uYW1lfSIsSzoi
SyIsTToiTSIsVHdlZXQ6IlR3ZWV0IiwiVHdlZXQgJXtoYXNodGFnfSI6IlR3ZWV0
ICV7aGFzaHRhZ30iLCJUd2VldCB0byAle25hbWV9IjoiVHdlZXQgdGlsICV7bmFt
ZX0ifSxkZTp7IiV7Zm9sbG93ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxv
d2Vyc19jb3VudH0gRm9sbG93ZXIiLCIxMDBLKyI6IjEwMFRzZCsiLCIxMGsgdW5p
dCI6IjEwdHNkLUVpbmhlaXQiLEZvbGxvdzoiRm9sZ2VuIiwiRm9sbG93ICV7c2Ny
ZWVuX25hbWV9IjoiJXtzY3JlZW5fbmFtZX0gZm9sZ2VuIixLOiJUc2QiLE06Ik0i
LFR3ZWV0OiJUd2l0dGVybiIsIlR3ZWV0ICV7aGFzaHRhZ30iOiJUd2VldCAle2hh
c2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6IlR3ZWV0IGFuICV7bmFtZX0ifSxm
aWw6eyIle2ZvbGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNf
Y291bnR9IG1nYSB0YWdhc3Vub2QiLCIxMDBLKyI6IjEwMEsrIiwiMTBrIHVuaXQi
OiIxMGsgeXVuaXQiLEZvbGxvdzoiU3VuZGFuIiwiRm9sbG93ICV7c2NyZWVuX25h
bWV9IjoiU3VuZGFuIHNpICV7c2NyZWVuX25hbWV9IixLOiJLIixNOiJNIixUd2Vl
dDoiSS10d2VldCIsIlR3ZWV0ICV7aGFzaHRhZ30iOiJJLXR3ZWV0IGFuZyAle2hh
c2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6Ik1hZy1Ud2VldCBrYXkgJXtuYW1l
fSJ9LHVyOnsiJXtmb2xsb3dlcnNfY291bnR9IGZvbGxvd2VycyI6IiV7Zm9sbG93
ZXJzX2NvdW50fSDZgdin2YTZiNix2LIiLCIxMDBLKyI6IjEg2YTYp9qp2r4rIiwi
MTBrIHVuaXQiOiLYr9izINuB2LLYp9ixINuM2YjZhtm5IixGb2xsb3c6ItmB2KfZ
hNmIINqp2LHbjNq6IiwiRm9sbG93ICV7c2NyZWVuX25hbWV9IjoiJXtzY3JlZW5f
bmFtZX0g2qnZiCDZgdin2YTZiCDaqdix24zauiIsSzoi24HYstin2LEiLE06ItmF
2YTbjNmGIixUd2VldDoi2bnZiNuM2bkg2qnYsduM2roiLCJUd2VldCAle2hhc2h0
YWd9Ijoi2bnZiNuM2bkg2qnYsduM2rogJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7
bmFtZX0iOiIle25hbWV9INqp2Ygg2bnZiNuM2bkg2qnYsduM2roifSxpZDp7IiV7
Zm9sbG93ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19jb3VudH0g
cGVuZ2lrdXQiLCIxMDBLKyI6IjEwMCByaWJ1KyIsIjEwayB1bml0IjoiMTAgcmli
dSB1bml0IixGb2xsb3c6IklrdXRpIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9Ijoi
SWt1dGkgJXtzY3JlZW5fbmFtZX0iLEs6IiZuYnNwO3JpYnUiLE06IiZuYnNwO2p1
dGEiLFR3ZWV0OiJUd2VldCIsIlR3ZWV0ICV7aGFzaHRhZ30iOiJUd2VldCAle2hh
c2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6IlR3ZWV0IGtlICV7bmFtZX0ifSxp
dDp7IiV7Zm9sbG93ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19j
b3VudH0gZm9sbG93ZXIiLCIxMDBLKyI6IjEwMEsrIiwiMTBrIHVuaXQiOiIxMGsg
dW5pdMOgIixGb2xsb3c6IlNlZ3VpIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9Ijoi
U2VndWkgJXtzY3JlZW5fbmFtZX0iLEs6IksiLE06Ik0iLFR3ZWV0OiJUd2VldCIs
IlR3ZWV0ICV7aGFzaHRhZ30iOiJUd2l0dGEgJXtoYXNodGFnfSIsIlR3ZWV0IHRv
ICV7bmFtZX0iOiJUd2l0dGEgYSAle25hbWV9In0sZnI6eyIle2ZvbGxvd2Vyc19j
b3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9IGFib25uw6lzIiwi
MTAwSysiOiIxMDBLKyIsIjEwayB1bml0IjoidW5pdMOpIGRlIDEwayIsRm9sbG93
OiJTdWl2cmUiLCJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiJTdWl2cmUgJXtzY3Jl
ZW5fbmFtZX0iLEs6IksiLE06Ik0iLFR3ZWV0OiJUd2VldGVyIiwiVHdlZXQgJXto
YXNodGFnfSI6IlR3ZWV0ZXIgJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7bmFtZX0i
OiJUd2VldGVyIMOgICV7bmFtZX0ifSxmaTp7IiV7Zm9sbG93ZXJzX2NvdW50fSBm
b2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19jb3VudH0gc2V1cmFhamFhIiwiMTAwSysi
OiIxMDAgMDAwKyIsIjEwayB1bml0IjoiMTAgMDAwIHlrc2lra8O2w6QiLEZvbGxv
dzoiU2V1cmFhIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9IjoiU2V1cmFhIGvDpHl0
dMOkasOkw6QgJXtzY3JlZW5fbmFtZX0iLEs6InR1aGF0dGEiLE06Im1pbGouIixU
d2VldDoiVHdpaXR0YWEiLCJUd2VldCAle2hhc2h0YWd9IjoiVHdpaXR0YWEgJXto
YXNodGFnfSIsIlR3ZWV0IHRvICV7bmFtZX0iOiJUd2lpdHRhYSBrw6R5dHTDpGrD
pGxsZSAle25hbWV9In0sdHI6eyIle2ZvbGxvd2Vyc19jb3VudH0gZm9sbG93ZXJz
IjoiJXtmb2xsb3dlcnNfY291bnR9IHRha2lww6dpIiwiMTAwSysiOiIrMTAwIGJp
biIsIjEwayB1bml0IjoiMTAgYmluIGJpcmltIixGb2xsb3c6IlRha2lwIGV0Iiwi
Rm9sbG93ICV7c2NyZWVuX25hbWV9IjoiVGFraXAgZXQ6ICV7c2NyZWVuX25hbWV9
IixLOiJiaW4iLE06Im1pbHlvbiIsVHdlZXQ6IlR3ZWV0bGUiLCJUd2VldCAle2hh
c2h0YWd9IjoiVHdlZXRsZTogJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7bmFtZX0i
OiJUd2VldGxlOiAle25hbWV9In0sZmE6eyIle2ZvbGxvd2Vyc19jb3VudH0gZm9s
bG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9INiv2YbYqNin2YTigIzaqdmG2YbY
r9mHIiwiMTAwSysiOiI+27HbsNuw2YfYstin2LEiLCIxMGsgdW5pdCI6Itux27DZ
h9iy2KfYsSDZiNin2K3YryIsRm9sbG93OiLYr9mG2KjYp9mEINqp2LHYr9mGIiwi
Rm9sbG93ICV7c2NyZWVuX25hbWV9Ijoi2K/Zhtio2KfZhCDaqdix2K/ZhiAle3Nj
cmVlbl9uYW1lfSIsSzoi2YfYstin2LEiLE06ItmF24zZhNuM2YjZhiIsVHdlZXQ6
Itiq2YjbjNuM2KoiLCJUd2VldCAle2hhc2h0YWd9Ijoi2KrZiNuM24zYqiDaqdix
2K/ZhiAle2hhc2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6Itio2YcgJXtuYW1l
fSDYqtmI24zbjNiqINqp2YbbjNivIn0sa286eyIle2ZvbGxvd2Vyc19jb3VudH0g
Zm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR966qF7J2YIO2MlOuhnOybjCIs
IjEwMEsrIjoiMTAw66eMIOydtOyDgSIsIjEwayB1bml0Ijoi66eMIOuLqOychCIs
Rm9sbG93OiLtjJTroZzsmrAiLCJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiIle3Nj
cmVlbl9uYW1lfSDtjJTroZzsmrDtlZjquLAiLEs6IuyynCIsTToi67Cx66eMIixU
d2VldDoi7Yq47JyXIiwiVHdlZXQgJXtoYXNodGFnfSI6IiV7aGFzaHRhZ30g6rSA
66CoIO2KuOycl+2VmOq4sCIsIlR3ZWV0IHRvICV7bmFtZX0iOiIle25hbWV964uY
7JeQ6rKMIO2KuOycl+2VmOq4sCJ9LHRoOnsiJXtmb2xsb3dlcnNfY291bnR9IGZv
bGxvd2VycyI6IiV7Zm9sbG93ZXJzX2NvdW50fSDguJzguLnguYnguJXguLTguJTg
uJXguLLguKEiLCIxMDBLKyI6IjEwMOC4nuC4seC4mSsiLCIxMGsgdW5pdCI6IuC4
q+C4meC5iOC4p+C4oiAxMOC4nuC4seC4mSIsRm9sbG93OiLguJXguLTguJTguJXg
uLLguKEiLCJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiLguJXguLTguJTguJXguLLg
uKEgJXtzY3JlZW5fbmFtZX0iLEs6IuC4nuC4seC4mSIsTToi4Lil4LmJ4Liy4LiZ
IixUd2VldDoi4LiX4Lin4Li14LiVIiwiVHdlZXQgJXtoYXNodGFnfSI6IuC4l+C4
p+C4teC4lSAle2hhc2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6IuC4l+C4p+C4
teC4leC4luC4tuC4hyAle25hbWV9In0sYXI6eyIle2ZvbGxvd2Vyc19jb3VudH0g
Zm9sbG93ZXJzIjoi2LnYr9ivINin2YTZhdiq2KfYqNi52YrZhiAle2ZvbGxvd2Vy
c19jb3VudH0iLCIxMDBLKyI6IisxMDAg2KPZhNmBIiwiMTBrIHVuaXQiOiIxMCDY
otmE2KfZgSDZiNit2K/YqSIsRm9sbG93OiLYqtin2KjYuSIsIkZvbGxvdyAle3Nj
cmVlbl9uYW1lfSI6Itiq2KfYqNi5ICV7c2NyZWVuX25hbWV9IixLOiLYo9mE2YEi
LE06ItmF2YTZitmI2YYiLFR3ZWV0OiLYutix2ZDZkdivIiwiVHdlZXQgJXtoYXNo
dGFnfSI6Iti62LHZkNmR2K8gJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7bmFtZX0i
OiLYutix2ZDZkdivINmE2YAgJXtuYW1lfSJ9LGhpOnsiJXtmb2xsb3dlcnNfY291
bnR9IGZvbGxvd2VycyI6IiV7Zm9sbG93ZXJzX2NvdW50fSDgpKvgpLzgpYngpLLg
pYvgpIXgpLDgpY3gpLgiLCIxMDBLKyI6IuClp+ClpuClpiDgpLngpJzgpL7gpLAr
IiwiMTBrIHVuaXQiOiLgpafgpaYg4KS54KSc4KS+4KSwIOCkh+CkleCkvuCkiOCk
r+CkvuCkgiIsRm9sbG93OiLgpKvgpLzgpYngpLLgpYsiLCJGb2xsb3cgJXtzY3Jl
ZW5fbmFtZX0iOiIle3NjcmVlbl9uYW1lfSDgpJXgpYsg4KSr4KS84KWJ4KSy4KWL
IOCkleCksOClh+CkgiIsSzoi4KS54KSc4KS+4KSwIixNOiLgpafgpaYg4KSy4KS+
4KSWIixUd2VldDoi4KSf4KWN4KS14KWA4KSfIiwiVHdlZXQgJXtoYXNodGFnfSI6
IuCkn+CljeCkteClgOCknyAle2hhc2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6
IiV7bmFtZX0g4KSV4KWLIOCkn+CljeCkteClgOCknyDgpJXgpLDgpYfgpIIifSxz
djp7IiV7Zm9sbG93ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19j
b3VudH0gZsO2bGphcmUiLCIxMDBLKyI6IjEwMEsrIiwiMTBrIHVuaXQiOiIxMGsi
LEZvbGxvdzoiRsO2bGoiLCJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiJGw7ZsaiAl
e3NjcmVlbl9uYW1lfSIsSzoiSyIsTToiTSIsVHdlZXQ6IlR3ZWV0YSIsIlR3ZWV0
ICV7aGFzaHRhZ30iOiJUd2VldGEgJXtoYXNodGFnfSIsIlR3ZWV0IHRvICV7bmFt
ZX0iOiJUd2VldGEgdGlsbCAle25hbWV9In0saGU6eyIle2ZvbGxvd2Vyc19jb3Vu
dH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9INei15XXp9eR15nXnSIs
IjEwMEsrIjoi157XkNeV16og15DXnNek15nXnSIsIjEwayB1bml0Ijoi16LXqdeo
15XXqiDXkNec16TXmdedIixGb2xsb3c6Itee16LXp9eRIiwiRm9sbG93ICV7c2Ny
ZWVuX25hbWV9Ijoi15zXoten15XXkSDXkNeX16ggJXtzY3JlZW5fbmFtZX0iLEs6
IteQ15zXoyIsTToi157Xmdec15nXldefIixUd2VldDoi16bXmdeV16UiLCJUd2Vl
dCAle2hhc2h0YWd9Ijoi16bXmdeZ16bXlSAle2hhc2h0YWd9IiwiVHdlZXQgdG8g
JXtuYW1lfSI6Item15nXldelINeQ15wgJXtuYW1lfSJ9LHBsOnsiJXtmb2xsb3dl
cnNfY291bnR9IGZvbGxvd2VycyI6IiV7Zm9sbG93ZXJzX2NvdW50fSBvYnNlcnd1
asSFY3ljaCIsIjEwMEsrIjoiMTAwIHR5cy4rIiwiMTBrIHVuaXQiOiIxMCB0eXMu
IixGb2xsb3c6Ik9ic2Vyd3VqIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9IjoiT2Jz
ZXJ3dWogJXtzY3JlZW5fbmFtZX0iLEs6InR5cy4iLE06Im1sbiIsVHdlZXQ6IlR3
ZWV0bmlqIiwiVHdlZXQgJXtoYXNodGFnfSI6IlR3ZWV0bmlqICV7aGFzaHRhZ30i
LCJUd2VldCB0byAle25hbWV9IjoiVHdlZXRuaWogZG8gJXtuYW1lfSJ9LG5sOnsi
JXtmb2xsb3dlcnNfY291bnR9IGZvbGxvd2VycyI6IiV7Zm9sbG93ZXJzX2NvdW50
fSB2b2xnZXJzIiwiMTAwSysiOiIxMDBrKyIsIjEwayB1bml0IjoiMTBrLWVlbmhl
aWQiLEZvbGxvdzoiVm9sZ2VuIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9IjoiJXtz
Y3JlZW5fbmFtZX0gdm9sZ2VuIixLOiJrIixNOiIgbWxuLiIsVHdlZXQ6IlR3ZWV0
ZW4iLCJUd2VldCAle2hhc2h0YWd9IjoiJXtoYXNodGFnfSB0d2VldGVuIiwiVHdl
ZXQgdG8gJXtuYW1lfSI6IlR3ZWV0ZW4gbmFhciAle25hbWV9In0sZXM6eyIle2Zv
bGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9IHNl
Z3VpZG9yZXMiLCIxMDBLKyI6IjEwMEsrIiwiMTBrIHVuaXQiOiIxMGsgdW5pZGFk
IixGb2xsb3c6IlNlZ3VpciIsIkZvbGxvdyAle3NjcmVlbl9uYW1lfSI6IlNlZ3Vp
ciBhICV7c2NyZWVuX25hbWV9IixLOiJLIixNOiJNIixUd2VldDoiVHdpdHRlYXIi
LCJUd2VldCAle2hhc2h0YWd9IjoiVHdpdHRlYXIgJXtoYXNodGFnfSIsIlR3ZWV0
IHRvICV7bmFtZX0iOiJUd2l0dGVhciBhICV7bmFtZX0ifSxodTp7IiV7Zm9sbG93
ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19jb3VudH0ga8O2dmV0
xZEiLCIxMDBLKyI6IjEwMEUrIiwiMTBrIHVuaXQiOiIxMEUrIixGb2xsb3c6IkvD
tnZldMOpcyIsIkZvbGxvdyAle3NjcmVlbl9uYW1lfSI6IiV7c2NyZWVuX25hbWV9
IGvDtnZldMOpc2UiLEs6IkUiLE06Ik0iLFR3ZWV0OiJUd2VldCIsIlR3ZWV0ICV7
aGFzaHRhZ30iOiIle2hhc2h0YWd9IHR3ZWV0ZWzDqXNlIiwiVHdlZXQgdG8gJXtu
YW1lfSI6IlR3ZWV0IGvDvGxkw6lzZSBuZWtpOiAle25hbWV9In0scHQ6eyIle2Zv
bGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9IHNl
Z3VpZG9yZXMiLCIxMDBLKyI6IisxMDAgbWlsIiwiMTBrIHVuaXQiOiIxMCBtaWwg
dW5pZGFkZXMiLEZvbGxvdzoiU2VndWlyIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9
IjoiU2lnYSAle3NjcmVlbl9uYW1lfSIsSzoiTWlsIixNOiJNIixUd2VldDoiVHdl
ZXRhciIsIlR3ZWV0ICV7aGFzaHRhZ30iOiJUd2VldGFyICV7aGFzaHRhZ30iLCJU
d2VldCB0byAle25hbWV9IjoiVHdlZXRhciBwYXJhICV7bmFtZX0ifSxtc2E6eyIl
e2ZvbGxvd2Vyc19jb3VudH0gZm9sbG93ZXJzIjoiJXtmb2xsb3dlcnNfY291bnR9
IHBlbmdpa3V0IiwiMTAwSysiOiIxMDAgcmlidSsiLCIxMGsgdW5pdCI6IjEwIHJp
YnUgdW5pdCIsRm9sbG93OiJJa3V0IiwiRm9sbG93ICV7c2NyZWVuX25hbWV9Ijoi
SWt1dCAle3NjcmVlbl9uYW1lfSIsSzoicmlidSIsTToianV0YSIsVHdlZXQ6IlR3
ZWV0IiwiVHdlZXQgJXtoYXNodGFnfSI6IlR3ZWV0ICV7aGFzaHRhZ30iLCJUd2Vl
dCB0byAle25hbWV9IjoiVHdlZXQga2VwYWRhICV7bmFtZX0ifSxubzp7IiV7Zm9s
bG93ZXJzX2NvdW50fSBmb2xsb3dlcnMiOiIle2ZvbGxvd2Vyc19jb3VudH0gZsO4
bGdlcmUiLCIxMDBLKyI6IjEwMEsrIiwiMTBrIHVuaXQiOiIxMGsgIixGb2xsb3c6
IkbDuGxnIiwiRm9sbG93ICV7c2NyZWVuX25hbWV9IjoiRsO4bGcgJXtzY3JlZW5f
bmFtZX0iLEs6IksiLE06Ik0iLFR3ZWV0OiJUd2VldCIsIlR3ZWV0ICV7aGFzaHRh
Z30iOiJUd2VldCAle2hhc2h0YWd9IiwiVHdlZXQgdG8gJXtuYW1lfSI6IlNlbmQg
dHdlZXQgdGlsICV7bmFtZX0ifX0sbD1mdW5jdGlvbigpe307Yi5hdWcobC5wcm90
b3R5cGUse3NldExhbmd1YWdlOmZ1bmN0aW9uKGEpe3ZhciBiO2F8fChhPXRoaXMu
cGFyYW1zKCkubGFuZ3x8dGhpcy5vcmlnaW5FbGVtZW50LmdldEF0dHJpYnV0ZSgi
ZGF0YS1sYW5nIil8fG0odGhpcy5vcmlnaW5FbGVtZW50KSksYT1hJiZhLnRvTG93
ZXJDYXNlKCk7aWYoIWEpcmV0dXJuIHRoaXMubGFuZz0iZW4iO2lmKGtbYV0pcmV0
dXJuIHRoaXMubGFuZz1hO2I9YS5yZXBsYWNlKC9bLV9dLiovLCIiKTtpZihrW2Jd
KXJldHVybiB0aGlzLmxhbmc9Yjt0aGlzLmxhbmc9ImVuIn0sXzpmdW5jdGlvbihh
LGIpe3ZhciBjPXRoaXMubGFuZztiPWJ8fHt9O2lmKCFjfHwhay5oYXNPd25Qcm9w
ZXJ0eShjKSljPXRoaXMubGFuZz0iZW4iO3JldHVybiBhPWtbY10mJmtbY11bYV18
fGEsdGhpcy5yaW5nbyhhLGIsLyVceyhbXHdfXSspXH0vZyl9LHJpbmdvOmZ1bmN0
aW9uKGEsYixjKXtyZXR1cm4gYz1jfHwvXHtceyhbXHdfXSspXH1cfS9nLGEucmVw
bGFjZShjLGZ1bmN0aW9uKGEsYyl7cmV0dXJuIGJbY10hPT11bmRlZmluZWQ/Yltj
XTphfSl9LGFkZDpmdW5jdGlvbihhKXtqLmxpc3QucHVzaCh0aGlzKSxqLmJ5SWRb
dGhpcy5pZF09YX0sY3JlYXRlOmZ1bmN0aW9uKGEsYixjLGQpe3JldHVybiB0aGlz
LmlkPXRoaXMuZ2VuZXJhdGVJZCgpLGYoe3VybDphLGNzczp7d2lkdGg6Y1swXSso
dHlwZW9mIGNbMF0hPSJzdHJpbmciPyJweCI6IiIpLGhlaWdodDpjWzFdKyh0eXBl
b2YgY1sxXSE9InN0cmluZyI/InB4IjoiIil9LGNsYXNzTmFtZTpiLGlkOnRoaXMu
aWQsYXR0cmlidXRlczpkLHJlcGxhY2U6dGhpcy5vcmlnaW5FbGVtZW50fSl9LHBh
cmFtczpmdW5jdGlvbigpe3ZhciBhPXRoaXMub3JpZ2luRWxlbWVudC5ocmVmJiZ0
aGlzLm9yaWdpbkVsZW1lbnQuaHJlZi5zcGxpdCgiPyIpWzFdLGI9YT9lLmRlY29k
ZShhKTp7fTtyZXR1cm4odGhpcy5wYXJhbXM9ZnVuY3Rpb24oKXtyZXR1cm4gYn0p
KCl9LGRhdGFBdHRyOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLm9yaWdpbkVsZW1l
bnQuZ2V0QXR0cmlidXRlKCJkYXRhLSIrYSl9LGdlbmVyYXRlSWQ6ZnVuY3Rpb24o
KXtyZXR1cm4gdGhpcy5vcmlnaW5FbGVtZW50LmlkfHwidHdpdHRlci13aWRnZXQt
IitnKyt9LHN0eWxlczp7YmFzZToiZm9udDogbm9ybWFsIG5vcm1hbCBub3JtYWwg
MTFweC8xOHB4ICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmOyBt
YXJnaW46IDA7IHBhZGRpbmc6IDA7IHdoaXRlLXNwYWNlOiBub3dyYXA7IixidXR0
b246ImZvbnQtd2VpZ2h0OiBib2xkOyB0ZXh0LXNoYWRvdzogMCAxcHggMCByZ2Jh
KDI1NSwyNTUsMjU1LC41KTsiLGxhcmdlOiJmb250LXNpemU6IDEzcHg7IGxpbmUt
aGVpZ2h0OiAyNnB4OyIsdmJ1YmJsZToiZm9udC1zaXplOiAxNnB4OyJ9LHdpZHRo
OmZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKG5hbWUrIiBub3QgaW1wbGVtZW50
ZWQiKX0saGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2l6ZT09Im0iPzIw
OjI4fSxkaW1lbnNpb25zOmZ1bmN0aW9uKCl7cmV0dXJuW3RoaXMud2lkdGgoKSx0
aGlzLmhlaWdodCgpXX19KSxhKHtCYXNlOmwsaW5pdDpvLGVtYmVkOnAsZmluZDpx
LFRXSVRURVJfUFJPRklMRV9VUkw6L15odHRwcz9cOlwvXC8oPzp3d3dcLik/dHdp
dHRlclwuY29tXC8oPzojIT9cLyk/KFtcd19dezEsMjB9KVwvPyQvfSl9KX0pOwpw
cm92aWRlKCJ1dGlsL2V2ZW50cyIsZnVuY3Rpb24oYSl7dXNpbmcoInV0aWwvdXRp
bCIsZnVuY3Rpb24oYil7ZnVuY3Rpb24gZCgpe3RoaXMuY29tcGxldGVkPSExLHRo
aXMuY2FsbGJhY2tzPVtdfXZhciBjPXtiaW5kOmZ1bmN0aW9uKGEsYil7cmV0dXJu
IHRoaXMuX2hhbmRsZXJzPXRoaXMuX2hhbmRsZXJzfHx7fSx0aGlzLl9oYW5kbGVy
c1thXT10aGlzLl9oYW5kbGVyc1thXXx8W10sdGhpcy5faGFuZGxlcnNbYV0ucHVz
aChiKX0sdW5iaW5kOmZ1bmN0aW9uKGEsYyl7aWYoIXRoaXMuX2hhbmRsZXJzW2Fd
KXJldHVybjtpZihjKXt2YXIgZD1iLmluZGV4T2YodGhpcy5faGFuZGxlcnNbYV0s
Yyk7ZD49MCYmdGhpcy5faGFuZGxlcnNbYV0uc3BsaWNlKGQsMSl9ZWxzZSB0aGlz
Ll9oYW5kbGVyc1thXT1bXX0sdHJpZ2dlcjpmdW5jdGlvbihhLGIpe3ZhciBjPXRo
aXMuX2hhbmRsZXJzJiZ0aGlzLl9oYW5kbGVyc1thXTtiLnR5cGU9YTtpZihjKWZv
cih2YXIgZD0wLGU7ZT1jW2RdO2QrKyllLmNhbGwodGhpcyxiKX19O2QucHJvdG90
eXBlLmFkZENhbGxiYWNrPWZ1bmN0aW9uKGEpe3RoaXMuY29tcGxldGVkP2EuYXBw
bHkodGhpcyx0aGlzLnJlc3VsdHMpOnRoaXMuY2FsbGJhY2tzLnB1c2goYSl9LGQu
cHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7dGhpcy5yZXN1bHRzPW1ha2VB
cnJheShhcmd1bWVudHMpLHRoaXMuY29tcGxldGVkPSEwO2Zvcih2YXIgYT0wLGI7
Yj10aGlzLmNhbGxiYWNrc1thXTthKyspYi5hcHBseSh0aGlzLHRoaXMucmVzdWx0
cyl9LGEoe0VtaXR0ZXI6YyxQcm9taXNlOmR9KX0pfSk7CnByb3ZpZGUoInV0aWwv
dXJpIixmdW5jdGlvbihhKXt1c2luZygidXRpbC9xdWVyeXN0cmluZyIsInV0aWwv
dXRpbCIsZnVuY3Rpb24oYixjKXtmdW5jdGlvbiBkKGEpe3ZhciBiO3JldHVybiBh
Lm1hdGNoKC9eaHR0cHM/OlwvXC8vKT9hOihiPWxvY2F0aW9uLmhvc3QsbG9jYXRp
b24ucG9ydC5sZW5ndGg+MCYmKGIrPSI6Iitsb2NhdGlvbi5wb3J0KSxbbG9jYXRp
b24ucHJvdG9jb2wsIi8vIixiLGFdLmpvaW4oIiIpKX1mdW5jdGlvbiBlKCl7dmFy
IGE9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImxpbmsiKTtmb3IodmFy
IGI9MCxjO2M9YVtiXTtiKyspaWYoYy5nZXRBdHRyaWJ1dGUoInJlbCIpPT0iY2Fu
b25pY2FsIilyZXR1cm4gZChjLmdldEF0dHJpYnV0ZSgiaHJlZiIpKTtyZXR1cm4g
bnVsbH1mdW5jdGlvbiBmKCl7dmFyIGE9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRh
Z05hbWUoImEiKSxiPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJsaW5r
IiksZD0vXGJtZVxiLyxlPS9eaHR0cHM/XDpcL1wvKHd3d1wuKT90d2l0dGVyLmNv
bVwvKFthLXpBLVowLTlfXSspJC8sZj1jLmFycmF5KGEpLmNvbmNhdChjLmFycmF5
KGIpKSxnLGgsaTtmb3IodmFyIGo9MCxrO2s9ZltqXTtqKyspe2g9ay5nZXRBdHRy
aWJ1dGUoInJlbCIpLGk9ay5nZXRBdHRyaWJ1dGUoImhyZWYiKTtpZihoJiZpJiZo
Lm1hdGNoKGQpJiYoZz1pLm1hdGNoKGUpKSlyZXR1cm4gZ1syXX19YSh7YWJzb2x1
dGl6ZTpkLGdldENhbm9uaWNhbFVSTDplLGdldFNjcmVlbk5hbWVGcm9tUGFnZTpm
fSl9KX0pOwpwcm92aWRlKCJ0Zncvd2lkZ2V0L2ludGVudCIsZnVuY3Rpb24oYSl7
dXNpbmcoInV0aWwvdXRpbCIsInRmdy93aWRnZXQvYmFzZSIsInV0aWwvcXVlcnlz
dHJpbmciLCJ1dGlsL3VyaSIsZnVuY3Rpb24oYixjLGQsZSl7ZnVuY3Rpb24gbShh
KXt2YXIgYj1NYXRoLnJvdW5kKGsvMi1oLzIpLGM9MDtqPmkmJihjPU1hdGgucm91
bmQoai8yLWkvMikpLHdpbmRvdy5vcGVuKGEsImludGVudCIsZysiLHdpZHRoPSIr
aCsiLGhlaWdodD0iK2krIixsZWZ0PSIrYisiLHRvcD0iK2MpfWZ1bmN0aW9uIG4o
YSxiKXt1c2luZygidGZ3L3dpZGdldC9odWJjbGllbnQiLGZ1bmN0aW9uKGMpe2Mu
b3BlbkludGVudChhLGIpfSl9ZnVuY3Rpb24gbyhhKXt2YXIgYj0ib3JpZ2luYWxf
cmVmZXJlcj0iK2xvY2F0aW9uLmhyZWY7cmV0dXJuW2EsYl0uam9pbihhLmluZGV4
T2YoIj8iKT09LTE/Ij8iOiImIil9ZnVuY3Rpb24gcShhKXthPWF8fHdpbmRvdy5l
dmVudDt2YXIgYj1hLnRhcmdldHx8YS5zcmNFbGVtZW50LGMsZDt3aGlsZShiJiZi
Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPT0iYSIpYj1iLnBhcmVudE5vZGU7aWYo
YiYmYi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09ImEiJiZiLmhyZWYpe2M9Yi5o
cmVmLm1hdGNoKGYpO2lmKGMpe3ZhciBlPW8oYi5ocmVmKTtlPWUucmVwbGFjZSgv
Xmh0dHBbOl0vLCJodHRwczoiKSxlPWUucmVwbGFjZSgvXlwvXC8vLCJodHRwczov
LyIpLHR3dHRyLmV2ZW50cy5odWI/KGQ9bmV3IHAobC5nZW5lcmF0ZUlkKCksYiks
bC5hZGQoZCksbihlLGIpLHR3dHRyLmV2ZW50cy50cmlnZ2VyKCJjbGljayIse3Rh
cmdldDpiLHJlZ2lvbjoiaW50ZW50Iix0eXBlOiJjbGljayIsZGF0YTp7fX0pKTpt
KGUpLGEucmV0dXJuVmFsdWU9ITEsYS5wcmV2ZW50RGVmYXVsdCYmYS5wcmV2ZW50
RGVmYXVsdCgpfX19dmFyIGY9L3R3aXR0ZXJcLmNvbShcOlxkezIsNH0pP1wvaW50
ZW50XC8oXHcrKS8sZz0ic2Nyb2xsYmFycz15ZXMscmVzaXphYmxlPXllcyx0b29s
YmFyPW5vLGxvY2F0aW9uPXllcyIsaD01NTAsaT01MjAsaj1zY3JlZW4uaGVpZ2h0
LGs9c2NyZWVuLndpZHRoLGwscD1mdW5jdGlvbihhLGIpe3RoaXMuaWQ9YSx0aGlz
LmVsZW1lbnQ9dGhpcy5vcmlnaW5FbGVtZW50PWJ9LHI9ZnVuY3Rpb24oYSl7dGhp
cy5vcmlnaW5FbGVtZW50PVtdLHRoaXMuZWxlbWVudD1hfTtyLnByb3RvdHlwZT1u
ZXcgYy5CYXNlLGIuYXVnKHIucHJvdG90eXBlLHtyZW5kZXI6ZnVuY3Rpb24oYSl7
bD10aGlzLHdpbmRvdy5fX3R3aXR0ZXJJbnRlbnRIYW5kbGVyfHwoZG9jdW1lbnQu
YWRkRXZlbnRMaXN0ZW5lcj9kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGlj
ayIscSwhMSk6ZG9jdW1lbnQuYXR0YWNoRXZlbnQmJmRvY3VtZW50LmF0dGFjaEV2
ZW50KCJvbmNsaWNrIixxKSx3aW5kb3cuX190d2l0dGVySW50ZW50SGFuZGxlcj0h
MCl9fSksYSh7TGlzdGVuZXI6cn0pfSl9KTsKcHJvdmlkZSgibGliL3R3dCIsZnVu
Y3Rpb24oYSl7YShmdW5jdGlvbihhLGIpe3ZhciBjPWEhPSJlbiI/YSsiLiI6IiI7
dXNpbmcoIiR2ZW5kb3IvdHd0L2Rpc3QvdHd0LiIrYysibWluLmpzIixmdW5jdGlv
bigpe3R3dC5zZXR0aW5ncy5sYW5nPWEsYih0d3QpfSl9KX0pOwpwcm92aWRlKCIk
eGQvanNvbjIuanMiLCBmdW5jdGlvbihleHBvcnRzKSB7d2luZG93LkpTT058fCh3
aW5kb3cuSlNPTj17fSksZnVuY3Rpb24oKXtmdW5jdGlvbiBmKGEpe3JldHVybiBh
PDEwPyIwIithOmF9ZnVuY3Rpb24gcXVvdGUoYSl7cmV0dXJuIGVzY2FwYWJsZS5s
YXN0SW5kZXg9MCxlc2NhcGFibGUudGVzdChhKT8nIicrYS5yZXBsYWNlKGVzY2Fw
YWJsZSxmdW5jdGlvbihhKXt2YXIgYj1tZXRhW2FdO3JldHVybiB0eXBlb2YgYj09
InN0cmluZyI/YjoiXFx1IisoIjAwMDAiK2EuY2hhckNvZGVBdCgwKS50b1N0cmlu
ZygxNikpLnNsaWNlKC00KX0pKyciJzonIicrYSsnIid9ZnVuY3Rpb24gc3RyKGEs
Yil7dmFyIGMsZCxlLGYsZz1nYXAsaCxpPWJbYV07aSYmdHlwZW9mIGk9PSJvYmpl
Y3QiJiZ0eXBlb2YgaS50b0pTT049PSJmdW5jdGlvbiImJihpPWkudG9KU09OKGEp
KSx0eXBlb2YgcmVwPT0iZnVuY3Rpb24iJiYoaT1yZXAuY2FsbChiLGEsaSkpO3N3
aXRjaCh0eXBlb2YgaSl7Y2FzZSJzdHJpbmciOnJldHVybiBxdW90ZShpKTtjYXNl
Im51bWJlciI6cmV0dXJuIGlzRmluaXRlKGkpP1N0cmluZyhpKToibnVsbCI7Y2Fz
ZSJib29sZWFuIjpjYXNlIm51bGwiOnJldHVybiBTdHJpbmcoaSk7Y2FzZSJvYmpl
Y3QiOmlmKCFpKXJldHVybiJudWxsIjtnYXArPWluZGVudCxoPVtdO2lmKE9iamVj
dC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkoaSk9PT0iW29iamVjdCBBcnJheV0i
KXtmPWkubGVuZ3RoO2ZvcihjPTA7YzxmO2MrPTEpaFtjXT1zdHIoYyxpKXx8Im51
bGwiO3JldHVybiBlPWgubGVuZ3RoPT09MD8iW10iOmdhcD8iW1xuIitnYXAraC5q
b2luKCIsXG4iK2dhcCkrIlxuIitnKyJdIjoiWyIraC5qb2luKCIsIikrIl0iLGdh
cD1nLGV9aWYocmVwJiZ0eXBlb2YgcmVwPT0ib2JqZWN0Iil7Zj1yZXAubGVuZ3Ro
O2ZvcihjPTA7YzxmO2MrPTEpZD1yZXBbY10sdHlwZW9mIGQ9PSJzdHJpbmciJiYo
ZT1zdHIoZCxpKSxlJiZoLnB1c2gocXVvdGUoZCkrKGdhcD8iOiAiOiI6IikrZSkp
fWVsc2UgZm9yKGQgaW4gaSlPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChpLGQp
JiYoZT1zdHIoZCxpKSxlJiZoLnB1c2gocXVvdGUoZCkrKGdhcD8iOiAiOiI6Iikr
ZSkpO3JldHVybiBlPWgubGVuZ3RoPT09MD8ie30iOmdhcD8ie1xuIitnYXAraC5q
b2luKCIsXG4iK2dhcCkrIlxuIitnKyJ9IjoieyIraC5qb2luKCIsIikrIn0iLGdh
cD1nLGV9fXR5cGVvZiBEYXRlLnByb3RvdHlwZS50b0pTT04hPSJmdW5jdGlvbiIm
JihEYXRlLnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oYSl7cmV0dXJuIGlzRmlu
aXRlKHRoaXMudmFsdWVPZigpKT90aGlzLmdldFVUQ0Z1bGxZZWFyKCkrIi0iK2Yo
dGhpcy5nZXRVVENNb250aCgpKzEpKyItIitmKHRoaXMuZ2V0VVRDRGF0ZSgpKSsi
VCIrZih0aGlzLmdldFVUQ0hvdXJzKCkpKyI6IitmKHRoaXMuZ2V0VVRDTWludXRl
cygpKSsiOiIrZih0aGlzLmdldFVUQ1NlY29uZHMoKSkrIloiOm51bGx9LFN0cmlu
Zy5wcm90b3R5cGUudG9KU09OPU51bWJlci5wcm90b3R5cGUudG9KU09OPUJvb2xl
YW4ucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy52YWx1
ZU9mKCl9KTt2YXIgY3g9L1tcdTAwMDBcdTAwYWRcdTA2MDAtXHUwNjA0XHUwNzBm
XHUxN2I0XHUxN2I1XHUyMDBjLVx1MjAwZlx1MjAyOC1cdTIwMmZcdTIwNjAtXHUy
MDZmXHVmZWZmXHVmZmYwLVx1ZmZmZl0vZyxlc2NhcGFibGU9L1tcXFwiXHgwMC1c
eDFmXHg3Zi1ceDlmXHUwMGFkXHUwNjAwLVx1MDYwNFx1MDcwZlx1MTdiNFx1MTdi
NVx1MjAwYy1cdTIwMGZcdTIwMjgtXHUyMDJmXHUyMDYwLVx1MjA2Zlx1ZmVmZlx1
ZmZmMC1cdWZmZmZdL2csZ2FwLGluZGVudCxtZXRhPXsiXGIiOiJcXGIiLCJcdCI6
IlxcdCIsIlxuIjoiXFxuIiwiXGYiOiJcXGYiLCJcciI6IlxcciIsJyInOidcXCIn
LCJcXCI6IlxcXFwifSxyZXA7dHlwZW9mIEpTT04uc3RyaW5naWZ5IT0iZnVuY3Rp
b24iJiYoSlNPTi5zdHJpbmdpZnk9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkO2dhcD0i
IixpbmRlbnQ9IiI7aWYodHlwZW9mIGM9PSJudW1iZXIiKWZvcihkPTA7ZDxjO2Qr
PTEpaW5kZW50Kz0iICI7ZWxzZSB0eXBlb2YgYz09InN0cmluZyImJihpbmRlbnQ9
Yyk7cmVwPWI7aWYoIWJ8fHR5cGVvZiBiPT0iZnVuY3Rpb24ifHx0eXBlb2YgYj09
Im9iamVjdCImJnR5cGVvZiBiLmxlbmd0aD09Im51bWJlciIpcmV0dXJuIHN0cigi
Iix7IiI6YX0pO3Rocm93IG5ldyBFcnJvcigiSlNPTi5zdHJpbmdpZnkiKX0pLHR5
cGVvZiBKU09OLnBhcnNlIT0iZnVuY3Rpb24iJiYoSlNPTi5wYXJzZT1mdW5jdGlv
bih0ZXh0LHJldml2ZXIpe2Z1bmN0aW9uIHdhbGsoYSxiKXt2YXIgYyxkLGU9YVti
XTtpZihlJiZ0eXBlb2YgZT09Im9iamVjdCIpZm9yKGMgaW4gZSlPYmplY3QuaGFz
T3duUHJvcGVydHkuY2FsbChlLGMpJiYoZD13YWxrKGUsYyksZCE9PXVuZGVmaW5l
ZD9lW2NdPWQ6ZGVsZXRlIGVbY10pO3JldHVybiByZXZpdmVyLmNhbGwoYSxiLGUp
fXZhciBqO2N4Lmxhc3RJbmRleD0wLGN4LnRlc3QodGV4dCkmJih0ZXh0PXRleHQu
cmVwbGFjZShjeCxmdW5jdGlvbihhKXtyZXR1cm4iXFx1IisoIjAwMDAiK2EuY2hh
ckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC00KX0pKTtpZigvXltcXSw6
e31cc10qJC8udGVzdCh0ZXh0LnJlcGxhY2UoL1xcKD86WyJcXFwvYmZucnRdfHVb
MC05YS1mQS1GXXs0fSkvZywiQCIpLnJlcGxhY2UoLyJbXiJcXFxuXHJdKiJ8dHJ1
ZXxmYWxzZXxudWxsfC0/XGQrKD86XC5cZCopPyg/OltlRV1bK1wtXT9cZCspPy9n
LCJdIikucmVwbGFjZSgvKD86Xnw6fCwpKD86XHMqXFspKy9nLCIiKSkpcmV0dXJu
IGo9ZXZhbCgiKCIrdGV4dCsiKSIpLHR5cGVvZiByZXZpdmVyPT0iZnVuY3Rpb24i
P3dhbGsoeyIiOmp9LCIiKTpqO3Rocm93IG5ldyBTeW50YXhFcnJvcigiSlNPTi5w
YXJzZSIpfSl9KCk7ZXhwb3J0cygpO2xvYWRydW5uZXIuU2NyaXB0LmxvYWRlZC5w
dXNoKCIkeGQvanNvbjIuanMiKX0pOwpwcm92aWRlKCJ1dGlsL2RlY2lkZXIiLGZ1
bmN0aW9uKGEpe2Z1bmN0aW9uIGMoYSl7dmFyIGM9YlthXXx8ITE7aWYoIWMpcmV0
dXJuITE7aWYoYz09PSEwfHxjPT09MTAwKXJldHVybiEwO3ZhciBkPU1hdGgucmFu
ZG9tKCkqMTAwLGU9Yz49ZDtyZXR1cm4gYlthXT1lLGV9dmFyIGI9e2ZvcmNlX25l
d19jb29raWU6MTAwLHJ1Zm91c19waXhlbDo1MCxkZWNpZGVyX2ZpeHR1cmU6MTIu
MzR9O2Eoe2lzQXZhaWxhYmxlOmN9KX0pOwpwcm92aWRlKCJ1dGlsL3BhcmFtcyIs
ZnVuY3Rpb24oYSl7dXNpbmcoInV0aWwvcXVlcnlzdHJpbmciLGZ1bmN0aW9uKGIp
e3ZhciBjPWZ1bmN0aW9uKGEpe3ZhciBjPWEuc2VhcmNoLnN1YnN0cigxKTtyZXR1
cm4gYi5kZWNvZGUoYyl9LGQ9ZnVuY3Rpb24oYSl7dmFyIGM9YS5ocmVmLGQ9Yy5p
bmRleE9mKCIjIiksZT1kPDA/IiI6Yy5zdWJzdHJpbmcoZCsxKTtyZXR1cm4gYi5k
ZWNvZGUoZSl9LGU9ZnVuY3Rpb24oYSl7dmFyIGI9e30sZT1jKGEpLGY9ZChhKTtm
b3IodmFyIGcgaW4gZSllLmhhc093blByb3BlcnR5KGcpJiYoYltnXT1lW2ddKTtm
b3IodmFyIGcgaW4gZilmLmhhc093blByb3BlcnR5KGcpJiYoYltnXT1mW2ddKTty
ZXR1cm4gYn07YSh7Y29tYmluZWQ6ZSxmcm9tUXVlcnk6Yyxmcm9tRnJhZ21lbnQ6
ZH0pfSl9KTsKcHJvdmlkZSgidGZ3L3dpZGdldC9lbnYiLGZ1bmN0aW9uKGEpe3Vz
aW5nKCJ1dGlsL3BhcmFtcyIsZnVuY3Rpb24oYil7ZnVuY3Rpb24gZCgpe3ZhciBh
PTM2ZTUsZD1iLmNvbWJpbmVkKGRvY3VtZW50LmxvY2F0aW9uKS5fO3JldHVybiBj
IT09dW5kZWZpbmVkP2M6KGM9ITEsZCYmL15cZCskLy50ZXN0KGQpJiYoYz0rKG5l
dyBEYXRlKS1wYXJzZUludChkKTxhKSxjKX12YXIgYzthKHtpc0R5bmFtaWNXaWRn
ZXQ6ZH0pfSl9KTsKcHJvdmlkZSgiZG9tL2Nvb2tpZSIsZnVuY3Rpb24oYSl7dXNp
bmcoInV0aWwvdXRpbCIsZnVuY3Rpb24oYil7YShmdW5jdGlvbihhLGMsZCl7dmFy
IGU9Yi5hdWcoe30sZCk7aWYoYXJndW1lbnRzLmxlbmd0aD4xJiZTdHJpbmcoYykh
PT0iW29iamVjdCBPYmplY3RdIil7aWYoYz09PW51bGx8fGM9PT11bmRlZmluZWQp
ZS5leHBpcmVzPS0xO2lmKHR5cGVvZiBlLmV4cGlyZXM9PSJudW1iZXIiKXt2YXIg
Zj1lLmV4cGlyZXMsZz1uZXcgRGF0ZSgobmV3IERhdGUpLmdldFRpbWUoKStmKjYw
KjFlMyk7ZS5leHBpcmVzPWd9cmV0dXJuIGM9U3RyaW5nKGMpLGRvY3VtZW50LmNv
b2tpZT1bZW5jb2RlVVJJQ29tcG9uZW50KGEpLCI9IixlLnJhdz9jOmVuY29kZVVS
SUNvbXBvbmVudChjKSxlLmV4cGlyZXM/IjsgZXhwaXJlcz0iK2UuZXhwaXJlcy50
b1VUQ1N0cmluZygpOiIiLGUucGF0aD8iOyBwYXRoPSIrZS5wYXRoOiIiLGUuZG9t
YWluPyI7IGRvbWFpbj0iK2UuZG9tYWluOiIiLGUuc2VjdXJlPyI7IHNlY3VyZSI6
IiJdLmpvaW4oIiIpfWU9Y3x8e307dmFyIGgsaT1lLnJhdz9mdW5jdGlvbihhKXty
ZXR1cm4gYX06ZGVjb2RlVVJJQ29tcG9uZW50O3JldHVybihoPShuZXcgUmVnRXhw
KCIoPzpefDsgKSIrZW5jb2RlVVJJQ29tcG9uZW50KGEpKyI9KFteO10qKSIpKS5l
eGVjKGRvY3VtZW50LmNvb2tpZSkpP2koaFsxXSk6bnVsbH0pfSl9KTsKcHJvdmlk
ZSgidXRpbC9kb25vdHRyYWNrIixmdW5jdGlvbihhKXt1c2luZygiZG9tL2Nvb2tp
ZSIsZnVuY3Rpb24oYil7YShmdW5jdGlvbihhKXt2YXIgYz0vXC4oZ292fG1pbCko
OlxkKyk/JC9pLGQ9L2h0dHBzPzpcL1wvKFteXC9dKykuKi9pO3JldHVybiBhPWF8
fGRvY3VtZW50LnJlZmVycmVyLGE9ZC50ZXN0KGEpJiZkLmV4ZWMoYSlbMV0sYigi
ZG50Iik/ITA6Yy50ZXN0KGRvY3VtZW50LmxvY2F0aW9uLmhvc3QpPyEwOmEmJmMu
dGVzdChhKT8hMDpkb2N1bWVudC5uYXZpZ2F0b3I/ZG9jdW1lbnQubmF2aWdhdG9y
WyJkb05vdFRyYWNrIl09PTE6bmF2aWdhdG9yP25hdmlnYXRvclsiZG9Ob3RUcmFj
ayJdPT0xfHxuYXZpZ2F0b3JbIm1zRG9Ob3RUcmFjayJdPT0xOiExfSl9KX0pOwpw
cm92aWRlKCJ0Zncvd2lkZ2V0L2d1ZXN0X2Nvb2tpZSIsZnVuY3Rpb24oYSl7dXNp
bmcoImRvbS9jb29raWUiLCJ1dGlsL2Rvbm90dHJhY2siLCJ1dGlsL2RlY2lkZXIi
LGZ1bmN0aW9uKGIsYyxkKXtmdW5jdGlvbiBmKCl7dmFyIGE9YihlKXx8ITE7aWYo
IWEpcmV0dXJuO2EubWF0Y2goL152M1w6Lyl8fGcoKX1mdW5jdGlvbiBnKCl7Yihl
KSYmYihlLG51bGwse2RvbWFpbjoiLnR3aXR0ZXIuY29tIixwYXRoOiIvIn0pfWZ1
bmN0aW9uIGgoKXtjKCkmJmcoKX12YXIgZT0icGlkIjthKHtzZXQ6aCxkZXN0cm95
OmcsZm9yY2VOZXdDb29raWU6ZixndWVzdF9pZF9jb29raWU6ZX0pfSl9KTsKcHJv
dmlkZSgidGZ3L3dpZGdldC90cmFja2luZyIsZnVuY3Rpb24oYSl7dXNpbmcoImRv
bS9jb29raWUiLCJ1dGlsL2Rvbm90dHJhY2siLCJ0Zncvd2lkZ2V0L2d1ZXN0X2Nv
b2tpZSIsInRmdy93aWRnZXQvZW52IiwidXRpbC9kZWNpZGVyIixmdW5jdGlvbihi
LGMsZCxlLGYpe2Z1bmN0aW9uIGkoYSxiLGMpe3ZhciBkPWcrYjtpZighYSlyZXR1
cm47cmV0dXJuIGFbZF09YyxhfWZ1bmN0aW9uIGooYSxnLGosayxsKXtrfHwoaz0h
MSksbHx8KGw9ITEpLGd8fChnPXt9KSxqPWp8fCJ0d2VldGJ1dHRvbiI7dmFyIG09
aFtqXXx8aC50d2VldGJ1dHRvbixuPWEub3duZXJEb2N1bWVudC5jcmVhdGVFbGVt
ZW50KCJpbWciKSxvPVtdO2lmKCFrKXt2YXIgcD1nLm9yaWdpbmFsX3JlZGlyZWN0
X3JlZmVycmVyfHxkb2N1bWVudC5yZWZlcnJlci50b1N0cmluZygpO2koZywicmVm
ZXJyZXIiLHApLGkoZywid2lkZ2V0IiwrZS5pc0R5bmFtaWNXaWRnZXQoKSksIWwm
JiFjKHApPyhpKGcsImhhc2siLCshIWIoImsiKSksaShnLCJsaSIsKyEhYigidHdp
ZCIpKSxpKGcsZC5ndWVzdF9pZF9jb29raWUsYihkLmd1ZXN0X2lkX2Nvb2tpZSl8
fCIiKSk6aShnLCJkbnQiLCIxIil9Zm9yKHZhciBxIGluIGcpaWYoZy5oYXNPd25Q
cm9wZXJ0eShxKSl7dmFyIHI9ZW5jb2RlVVJJQ29tcG9uZW50KHEpLHM9ZW5jb2Rl
VVJJQ29tcG9uZW50KGdbcV0pO3M9cy5yZXBsYWNlKC8nL2csIiUyNyIpLG8ucHVz
aChyKyI9IitzKX1uLnNyYz1tKyI/IitvLmpvaW4oIiYiKSxuLmFsdD0iIixuLnN0
eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIsbi5zdHlsZS5oZWlnaHQ9IjFweCIsbi5z
dHlsZS53aWR0aD0iMXB4IixuLnN0eWxlLnRvcD0iLTk5OTlweCIsbi5zdHlsZS5s
ZWZ0PSItOTk5OXB4IixhLmFwcGVuZENoaWxkKG4pO2lmKGYuaXNBdmFpbGFibGUo
InJ1Zm91c19waXhlbCIpKXt2YXIgdD17dHd0dHJfcmVmZXJyZXI6InJlZmVycmVy
Iix0d3R0cl92YXJpYW50OiJ2ZXJzaW9uIixsYW5nOiJsYW5ndWFnZSIsc2NyZWVu
X25hbWU6InNjcmVlbl9uYW1lIn0sdT17X2NhdGVnb3J5XzoidGZ3X3dpZGdldHMi
LGV2ZW50X25hbWU6aisiOmltcHJlc3Npb24ifTtmb3IodmFyIHEgaW4gZyl7dmFy
IHY9dFtxXTt2JiYodVt2XT1nW3FdKX0hbCYmIWMocCkmJihnLnR3dHRyX2xpJiYo
dS5sb2dnZWRfaW49Z1sidHd0dHJfbGkiXT09IjEiKSx1LnBpZD1iKGQuZ3Vlc3Rf
aWRfY29va2llKXx8IiIpLGcuc3RhdHVzX2lkJiYodS50d2VldF9pZHM9W2cuc3Rh
dHVzX2lkXSksZy50d3R0cl93aWRnZXQmJih1LndpZGdldD1nWyJ0d3R0cl93aWRn
ZXQiXT09IjEiKTt2YXIgbj1hLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgi
aW1nIiksdz1BcnJheS5wcm90b3R5cGUudG9KU09OO2RlbGV0ZSBBcnJheS5wcm90
b3R5cGUudG9KU09OO3ZhciB4PSIvL3IudHdpbWcuY29tL2pvdD9sPSIrZW5jb2Rl
VVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHUpKS5yZXBsYWNlKC8nL2csIiUy
NyIpO0FycmF5LnByb3RvdHlwZS50b0pTT049dztpZihsfHxjKHApKXgrPSImZG50
PTEiO24uc3JjPXgsbi5hbHQ9IiIsbi5zdHlsZS5wb3NpdGlvbj0iYWJzb2x1dGUi
LG4uc3R5bGUuaGVpZ2h0PSIxcHgiLG4uc3R5bGUud2lkdGg9IjFweCIsbi5zdHls
ZS50b3A9Ii05OTk5cHgiLG4uc3R5bGUubGVmdD0iLTk5OTlweCIsYS5hcHBlbmRD
aGlsZChuKX19ZnVuY3Rpb24gaygpe2Eoe2FkZFBpeGVsOmosYWRkVmFyOml9KX12
YXIgZz0idHd0dHJfIixoPXt0d2VldGJ1dHRvbjoiLy9wLnR3aXR0ZXIuY29tL3Qu
Z2lmIixmb2xsb3didXR0b246Ii8vcC50d2l0dGVyLmNvbS9mLmdpZiIsdHdlZXRl
bWJlZDoiLy9wLnR3aXR0ZXIuY29tL2UuZ2lmIn07Zi5pc0F2YWlsYWJsZSgiZm9y
Y2VfbmV3X2Nvb2tpZSIpJiZkLmZvcmNlTmV3Q29va2llKCksdHlwZW9mIEpTT049
PSJ1bmRlZmluZWQiP3VzaW5nKCIkeGQvanNvbjIuanMiLGZ1bmN0aW9uKCl7aygp
fSk6aygpfSl9KTsKcHJvdmlkZSgidXRpbC90d2VldHBhcnNlciIsZnVuY3Rpb24o
YSl7dXNpbmcoInV0aWwvdXRpbCIsZnVuY3Rpb24oYil7ZnVuY3Rpb24gZyhhLGMp
e3ZhciBkPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKGEpLGU9Yi5maWx0
ZXIoZCxmdW5jdGlvbihhKXtyZXR1cm4gYi5jb250YWluc0VsZW1lbnQoYyxhKX0p
O3JldHVybiBlfHxbXX1mdW5jdGlvbiBoKGEpe3JldHVybiBhJiZjLnRlc3QoYSkm
JlJlZ0V4cC4kMX1mdW5jdGlvbiBpKGEpe2lmKCFhfHwhYS5ub2RlTmFtZXx8IS9i
bG9ja3F1b3RlL2kudGVzdChhLm5vZGVOYW1lKSlyZXR1cm47dmFyIGI9e30sYz1n
KCJwIixhKS5zaGlmdCgpLGQ9ZygiYSIsYSkucG9wKCk7aWYoIWMmJmcoImJyIixh
KS5sZW5ndGgpe2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgicCIpO2Zvcih2YXIg
ZT0wLGY7Zj1hLmNoaWxkTm9kZXNbZV07ZSsrKXtpZihmLm5vZGVUeXBlPT09MSYm
L15iciQvaS50ZXN0KGYubm9kZU5hbWUpKWJyZWFrO2MuYXBwZW5kQ2hpbGQoZil9
fXJldHVybiBjJiYoYi50ZXh0PWMudGV4dENvbnRlbnR8fGMuaW5uZXJUZXh0fHwi
IixiLnJlbmRlcmVkX3RleHQ9Yy5pbm5lckhUTUx8fCIiKSxkJiYoZC5nZXRBdHRy
aWJ1dGUoImRhdGEtZGF0ZXRpbWUiKT9iLmNyZWF0ZWRfYXQ9ZC5nZXRBdHRyaWJ1
dGUoImRhdGEtZGF0ZXRpbWUiKTpiLnRpbWU9ZC50ZXh0Q29udGVudHx8ZC5pbm5l
clRleHQpLGIudXNlcj1qKGEpLGIuaWQ9Yi5pZF9zdHI9aChkLmhyZWYpLGIuaWRf
c3RyJiZiLnRleHQmJmIudXNlciYmYn1mdW5jdGlvbiBqKGEpe3ZhciBiPXt9LGM9
MCxkPWEuY2hpbGROb2Rlcy5sZW5ndGgsaCxpO2Zvcig7YzxkO2MrKyl7aD1hLmNo
aWxkTm9kZXNbY10saC5ub2RlVHlwZT09PTEmJi9ecCQvaS50ZXN0KGgubm9kZU5h
bWUpJiYoaD1oLmNoaWxkTm9kZXNbMF0pO2lmKGgmJmgubm9kZVR5cGU9PT0zJiZl
LnRlc3QoaC5ub2RlVmFsdWUpKXtiLm5hbWU9UmVnRXhwLiQxLnNwbGl0KCIgIiku
c2xpY2UoMSkuam9pbigiICIpLGIuc2NyZWVuX25hbWU9UmVnRXhwLiQyO2JyZWFr
fX1pZihiLnNjcmVlbl9uYW1lKXJldHVybiBiO2k9ZygiYSIsYSkucG9wKCk7aWYo
aSYmZi50ZXN0KGkuaHJlZikpcmV0dXJuIGIubmFtZT0iIixiLnNjcmVlbl9uYW1l
PVJlZ0V4cC4kMixifXZhciBjPS9cLyhcZCspXC8/JC8sZD0vXmh0dHBzPzpcL1wv
KD86d3d3XC4pP3R3aXR0ZXJcLmNvbVwvKD86IyFcLyk/W1x3X10rXC9zdGF0dXMo
Pzplcyk/XC8oXGQrKVwvPy8sZT0vXlxzKiguKylccytcKEAoW1x3X117MSwyMH0p
XClccyokLyxmPS9eaHR0cHM/OlwvXC8oPzp3d3dcLik/dHdpdHRlclwuY29tXC8o
IyFcLyk/KFtcd19dezEsMjB9KS87YSh7cGFyc2VUd2VldDppLHBhcnNlSWQ6aCxw
YXJzZUF1dGhvcjpqfSl9KX0pOwpwcm92aWRlKCJpMThuL2kxOG4iLGZ1bmN0aW9u
KGEpe2Z1bmN0aW9uIGIoKXt0d3R0ci5pMThuX21pc3NpbmdfaW50ZXJ2YWx8fCh0
d3R0ci5pMThuX21pc3NpbmdfaW50ZXJ2YWw9d2luZG93LnNldEludGVydmFsKGZ1
bmN0aW9uKCl7dHd0dHIuaTE4bl9taXNzaW5nJiZ0d3R0ci5pMThuX21pc3Npbmcu
bGVuZ3RoPjAmJigkLmFqYXgoe3R5cGU6IlBPU1QiLGRhdGE6JC5wYXJhbSh7YXV0
aGVudGljaXR5X3Rva2VuOnR3dHRyLmZvcm1fYXV0aGVudGljaXR5X3Rva2VuLGxv
Y2F0aW9uOndpbmRvdy5sb2NhdGlvbi5ocmVmLCJzdHJpbmdzW10iOnR3dHRyLmkx
OG5fbWlzc2luZ30pLHVybDoiL3RyYW5zbGF0ZS91bnRyYW5zbGF0ZWRfamF2YXNj
cmlwdCJ9KSx0d3R0ci5pMThuX21pc3Npbmc9bmV3IEFycmF5KX0sMWU0KSl9ZnVu
Y3Rpb24gYyhhKXt0d3R0ci5pMThuX21pc3Npbmd8fCh0d3R0ci5pMThuX21pc3Np
bmc9bmV3IEFycmF5KSx0d3R0ci5pMThuX21pc3NpbmdfcmVwb3J0ZWR8fCh0d3R0
ci5pMThuX21pc3NpbmdfcmVwb3J0ZWQ9e30pLHR3dHRyLmkxOG5fbWlzc2luZ19y
ZXBvcnRlZFthXXx8KHR3dHRyLmkxOG5fbWlzc2luZy5wdXNoKGVuY29kZVVSSUNv
bXBvbmVudChhKSksdHd0dHIuaTE4bl9taXNzaW5nX3JlcG9ydGVkW2FdPSEwKX1m
dW5jdGlvbiBkKGEsYil7aWYoYilmb3IodmFyIGMgaW4gYilhPWEucmVwbGFjZShu
ZXcgUmVnRXhwKCJcXCVcXHsiK2MrIlxcfSIsImdpIiksYltjXSk7cmV0dXJuIGF9
d2luZG93LnNldHVwVHJhbnNsYXRpb25DYWxsYmFjaz1iLGEoe186ZnVuY3Rpb24o
YSxiKXtpZih0d3R0ci5pMThuKXt2YXIgZT10d3R0ci5pMThuW2FdO2U/YT1lOmMo
YSl9cmV0dXJuIGQoYSxiKX0sc2V0dXBUcmFuc2xhdGlvbkNhbGxiYWNrOmJ9KX0p
Owpwcm92aWRlKCJ0ZncvZGF0YSIsZnVuY3Rpb24oYSl7dXNpbmcoInV0aWwvcXVl
cnlzdHJpbmciLGZ1bmN0aW9uKGIpe3dpbmRvdy50d3R0cj13aW5kb3cudHd0dHJ8
fHt9LHdpbmRvdy50d3R0ci50Znc9d2luZG93LnR3dHRyLnRmd3x8e30sd2luZG93
LnR3dHRyLnRmdy5jYWxsYmFja3M9d2luZG93LnR3dHRyLnRmdy5jYWxsYmFja3N8
fHt9O3ZhciBjPSJ0d3R0ci50ZncuY2FsbGJhY2tzIixkPXR3dHRyLnRmdy5jYWxs
YmFja3MsZT0iY2IiLGY9MCxnPSExLGg9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09
e30udG9TdHJpbmcuY2FsbChiKS5tYXRjaCgvXHMoW2EtekEtWl0rKS8pWzFdLnRv
TG93ZXJDYXNlKCl9LGk9ZnVuY3Rpb24oYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe2Iu
ZXJyb3I/YS5lcnJvciYmYS5lcnJvcihiKTphLnN1Y2Nlc3MmJmEuc3VjY2Vzcyhi
KSxhLmNvbXBsZXRlJiZhLmNvbXBsZXRlKGIpLGooYSl9fSxqPWZ1bmN0aW9uKGEp
e3ZhciBiPWEuc2NyaXB0O2ImJihiLm9ubG9hZD1iLm9ucmVhZHlzdGF0ZWNoYW5n
ZT1udWxsLGIucGFyZW50Tm9kZSYmYi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGIp
LGEuc2NyaXB0PXVuZGVmaW5lZCxiPXVuZGVmaW5lZCksYS5jYWxsYmFja05hbWUm
JnR3dHRyLnRmdy5jYWxsYmFja3NbYS5jYWxsYmFja05hbWVdJiZkZWxldGUgdHd0
dHIudGZ3LmNhbGxiYWNrc1thLmNhbGxiYWNrTmFtZV19LGs9ZnVuY3Rpb24oYSl7
dmFyIGI9e307cmV0dXJuIGEuc3VjY2VzcyYmaCgiZnVuY3Rpb24iLGEuc3VjY2Vz
cykmJihiLnN1Y2Nlc3M9YS5zdWNjZXNzKSxhLmVycm9yJiZoKCJmdW5jdGlvbiIs
YS5lcnJvcikmJihiLmVycm9yPWEuZXJyb3IpLGEuY29tcGxldGUmJmgoImZ1bmN0
aW9uIixhLmNvbXBsZXRlKSYmKGIuY29tcGxldGU9YS5jb21wbGV0ZSksYn0sbD1m
dW5jdGlvbihhLGgpe2lmKGd8fCEvXmh0dHBzP1w6JC8udGVzdCh3aW5kb3cubG9j
YXRpb24ucHJvdG9jb2wpKWE9YS5yZXBsYWNlKC9eXC9cLy8sImh0dHBzOi8vIik7
dmFyIGo9ZStmLGs9YysiLiIrajtkW2pdPWkoaCk7dmFyIGw9ZG9jdW1lbnQuY3Jl
YXRlRWxlbWVudCgic2NyaXB0IiksbT17Y2FsbGJhY2s6ayxzdXBwcmVzc19yZXNw
b25zZV9jb2RlczohMH07bC5zcmM9Yi51cmwoYSxtKSxsLmFzeW5jPSJhc3luYyI7
dmFyIG49ZG9jdW1lbnQuaGVhZHx8ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05h
bWUoImhlYWQiKVswXXx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O24uYXBwZW5k
Q2hpbGQobCksaC5zY3JpcHQ9bCxoLmNhbGxiYWNrTmFtZT1qLGYrK30sbT1mdW5j
dGlvbihhLGIsYyl7dmFyIGQ9YS5sZW5ndGgsZT1bXSxmPXt9LGc9MDtyZXR1cm4g
ZnVuY3Rpb24oZSl7dmFyIGg7aD1jKGUpLGZbaF09ZTtpZigrK2c9PT1kKXt2YXIg
aT1bXSxqPVtdLGs9W107Zm9yKHZhciBsPTA7bDxkO2wrKyl7dmFyIGU9ZlthW2xd
XTtpLnB1c2goZSksZS5lcnJvcj9rLnB1c2goZSk6ai5wdXNoKGUpfWIuZXJyb3Im
JmsubGVuZ3RoPjAmJmIuZXJyb3IoayksYi5zdWNjZXNzJiZqLmxlbmd0aD4wJiZi
LnN1Y2Nlc3MoaiksYi5jb21wbGV0ZSYmYi5jb21wbGV0ZShpKX19fSxuPXt9O24u
Y29uZmlnPWZ1bmN0aW9uKGEpe2lmKGEuZm9yY2VTU0w9PT0hMHx8YS5mb3JjZVNT
TD09PSExKWc9YS5mb3JjZVNTTH0sbi51c2VyPWZ1bmN0aW9uKCl7dmFyIGE9Ii8v
YXBpLnR3aXR0ZXIuY29tLzEvdXNlcnMvbG9va3VwLmpzb24iLGM9Ii8vY2RuLmFw
aS50d2l0dGVyLmNvbS8xL3VzZXJzL3Nob3cuanNvbiI7cmV0dXJuIGZ1bmN0aW9u
KCl7dmFyIGQsZT17fTthcmd1bWVudHMubGVuZ3RoPT09MT8oZD1hcmd1bWVudHNb
MF0uc2NyZWVuTmFtZSxlPWsoYXJndW1lbnRzWzBdKSk6KGQ9YXJndW1lbnRzWzBd
LGUuc3VjY2Vzcz1hcmd1bWVudHNbMV0pO3ZhciBmPWgoImFycmF5IixkKT9hOmM7
ZD1oKCJhcnJheSIsZCk/ZC5qb2luKCIsIik6ZDt2YXIgZz17c2NyZWVuX25hbWU6
ZH0saT1iLnVybChmLGcpO2woaSxlKX19KCksbi5zdGF0dXM9ZnVuY3Rpb24oKXt2
YXIgYT0iLy9jZG4uYXBpLnR3aXR0ZXIuY29tLzEvc3RhdHVzZXMvc2hvdy5qc29u
IjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYyxkPXt9O2FyZ3VtZW50cy5sZW5ndGg9
PT0xPyhjPWFyZ3VtZW50c1swXS5pZCxkPWsoYXJndW1lbnRzWzBdKSk6KGM9YXJn
dW1lbnRzWzBdLGQuc3VjY2Vzcz1hcmd1bWVudHNbMV0pO2lmKCFoKCJhcnJheSIs
Yykpe3ZhciBlPXtpZDpjLGluY2x1ZGVfZW50aXRpZXM6ITB9LGY9Yi51cmwoYSxl
KTtsKGYsZCl9ZWxzZXt2YXIgZz1tKGMsZCxmdW5jdGlvbihhKXt2YXIgYjtyZXR1
cm4gYS5lcnJvcj9iPWEucmVxdWVzdC5zcGxpdCgiaWQ9IilbMV0uc3BsaXQoIiYi
KVswXTpiPWEuaWRfc3RyLGJ9KTtmb3IodmFyIGk9MDtpPGMubGVuZ3RoO2krKyl7
dmFyIGU9e2lkOmNbaV0saW5jbHVkZV9lbnRpdGllczohMH0sZj1iLnVybChhLGUp
O2woZix7c3VjY2VzczpnLGVycm9yOmd9KX19fX0oKSxuLnR3ZWV0PW4uc3RhdHVz
LG4uY291bnQ9ZnVuY3Rpb24oKXt2YXIgYT0iLy9jZG4uYXBpLnR3aXR0ZXIuY29t
LzEvdXJscy9jb3VudC5qc29uIjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz0iIixk
PXt9O2FyZ3VtZW50cy5sZW5ndGg9PT0xPyhjPWFyZ3VtZW50c1swXS51cmwsZD1r
KGFyZ3VtZW50c1swXSkpOmFyZ3VtZW50cy5sZW5ndGg9PT0yJiYoYz1hcmd1bWVu
dHNbMF0sZC5zdWNjZXNzPWFyZ3VtZW50c1sxXSk7dmFyIGU9e3VybDpjfSxmPWIu
dXJsKGEsZSk7bChmLGQpfX0oKSxuLmZyaWVuZHNoaXBFeGlzdHM9ZnVuY3Rpb24o
KXt2YXIgYT0iLy9jZG4uYXBpLnR3aXR0ZXIuY29tLzEvZnJpZW5kc2hpcHMvZXhp
c3RzLmpzb24iO3JldHVybiBmdW5jdGlvbihjKXt2YXIgZD1hcmd1bWVudHNbMF0s
ZT1rKGFyZ3VtZW50c1swXSksZj17c2NyZWVuX25hbWVfYTpjLnNjcmVlbk5hbWVB
LHNjcmVlbl9uYW1lX2I6Yy5zY3JlZW5OYW1lQn0sZz1iLnVybChhLGYpO2woZyxl
KX19KCksYShuKX0pfSk7CnByb3ZpZGUoInV0aWwvaW5zZXJ0IixmdW5jdGlvbihh
KXthKGZ1bmN0aW9uKGEsYil7aWYoYil7aWYoIWIucGFyZW50Tm9kZSlyZXR1cm4g
YjtiLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGEsYiksZGVsZXRlIGJ9ZWxzZSBk
b2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZShhLGRvY3VtZW50LmJvZHkuZmlyc3RD
aGlsZCk7cmV0dXJuIGF9KX0pOwpwcm92aWRlKCJkb20vdGV4dHNpemUiLGZ1bmN0
aW9uKGEpe2Z1bmN0aW9uIGMoYSxiLGMpe3JldHVybiBhK2IrY312YXIgYj17fTth
KGZ1bmN0aW9uKGEsZCxlKXt2YXIgZj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJz
cGFuIiksZz17fSxoO3JldHVybiBlPWV8fCIiLGQ9ZHx8IiIsaD1jKGEsZCxlKSxi
W2hdP2JbaF06KGYuY2xhc3NOYW1lPWQrIiB0d2l0dGVyLW1lYXN1cmVtZW50Iixm
LnNldEF0dHJpYnV0ZSgic3R5bGUiLGUpLGYuaW5uZXJIVE1MPWEsZG9jdW1lbnQu
Ym9keS5hcHBlbmRDaGlsZChmKSxnLndpZHRoPWYuY2xpZW50V2lkdGh8fGYub2Zm
c2V0V2lkdGgsZy5oZWlnaHQ9Zi5jbGllbnRIZWlnaHR8fGYub2Zmc2V0SGVpZ2h0
LGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZiksZGVsZXRlIGYsYltoXT1nKX0p
fSk7CnByb3ZpZGUoInRmdy93aWRnZXQvdHdlZXQiLGZ1bmN0aW9uKGEpe3VzaW5n
KCJ1dGlsL3V0aWwiLCJ0Zncvd2lkZ2V0L2Jhc2UiLCJ1dGlsL3F1ZXJ5c3RyaW5n
IiwidXRpbC91cmkiLCJkb20vdGV4dHNpemUiLGZ1bmN0aW9uKGIsYyxkLGUsZil7
dmFyIGc9ZG9jdW1lbnQudGl0bGUsaD1lbmNvZGVVUkkobG9jYXRpb24uaHJlZiks
aT1bInZlcnRpY2FsIiwiaG9yaXpvbnRhbCIsIm5vbmUiXSxqPWZ1bmN0aW9uKGEp
e3RoaXMub3JpZ2luRWxlbWVudD1hLHRoaXMuaWQ9dGhpcy5nZW5lcmF0ZUlkKCk7
dmFyIGM9dGhpcy5wYXJhbXMoKSxkPWMuY291bnR8fHRoaXMuZGF0YUF0dHIoImNv
dW50IiksZj1jLnNpemV8fHRoaXMuZGF0YUF0dHIoInNpemUiKSxqPWUuZ2V0U2Ny
ZWVuTmFtZUZyb21QYWdlKCk7dGhpcy5zZXRMYW5ndWFnZSgpLH5hLmNsYXNzTmFt
ZS5pbmRleE9mKCJ0d2l0dGVyLWhhc2h0YWctYnV0dG9uIik/dGhpcy50eXBlPSJo
YXNodGFnIjp+YS5jbGFzc05hbWUuaW5kZXhPZigidHdpdHRlci1tZW50aW9uLWJ1
dHRvbiIpJiYodGhpcy50eXBlPSJtZW50aW9uIiksdGhpcy50ZXh0PWMudGV4dHx8
dGhpcy5kYXRhQXR0cigidGV4dCIpLHRoaXMuYWxpZ249Yy5hbGlnbnx8dGhpcy5k
YXRhQXR0cigiYWxpZ24iKXx8IiIsdGhpcy52aWE9Yy52aWF8fHRoaXMuZGF0YUF0
dHIoInZpYSIpLHRoaXMucmVsYXRlZD1jLnJlbGF0ZWR8fHRoaXMuZGF0YUF0dHIo
InJlbGF0ZWQiKSx0aGlzLmNvdW50dXJsPWMuY291bnR1cmx8fHRoaXMuZGF0YUF0
dHIoImNvdW50dXJsIiksdGhpcy5zZWFyY2hsaW5rPWMuc2VhcmNobGlua3x8dGhp
cy5kYXRhQXR0cigic2VhcmNobGluayIpLHRoaXMucGxhY2VpZD1jLnBsYWNlaWR8
fHRoaXMuZGF0YUF0dHIoInBsYWNlaWQiKSx0aGlzLmhhc2h0YWdzPWMuaGFzaHRh
Z3N8fHRoaXMuZGF0YUF0dHIoImhhc2h0YWdzIiksdGhpcy5zY3JlZW5fbmFtZT1j
LnNjcmVlbl9uYW1lfHx0aGlzLmRhdGFBdHRyKCJidXR0b24tc2NyZWVuLW5hbWUi
KSx0aGlzLmJ1dHRvbl9oYXNodGFnPWMuYnV0dG9uX2hhc2h0YWd8fHRoaXMuZGF0
YUF0dHIoImJ1dHRvbi1oYXNodGFnIiksdGhpcy51cmw9Yy51cmx8fHRoaXMuZGF0
YUF0dHIoInVybCIpLHRoaXMuc2l6ZT1mPT0ibGFyZ2UiPyJsIjoibSIsdGhpcy5k
bnQ9Yy5kbnR8fHRoaXMuZGF0YUF0dHIoImRudCIpfHwiIix0aGlzLnR5cGU/KHRo
aXMuY291bnQ9Im5vbmUiLGomJih0aGlzLnJlbGF0ZWQ9dGhpcy5yZWxhdGVkP2or
IiwiK3RoaXMucmVsYXRlZDpqKSk6KHRoaXMudGV4dD10aGlzLnRleHR8fGcsdGhp
cy51cmw9dGhpcy51cmx8fGUuZ2V0Q2Fub25pY2FsVVJMKCl8fGgsdGhpcy5jb3Vu
dD1+Yi5pbmRleE9mKGksZCk/ZDoiaG9yaXpvbnRhbCIsdGhpcy5jb3VudD10aGlz
LmNvdW50PT0idmVydGljYWwiJiZ0aGlzLnNpemU9PSJsIj8ibm9uZSI6dGhpcy5j
b3VudCx0aGlzLnZpYT10aGlzLnZpYXx8ail9O2oucHJvdG90eXBlPW5ldyBjLkJh
c2UsYi5hdWcoai5wcm90b3R5cGUse3BhcmFtZXRlcnM6ZnVuY3Rpb24oKXt2YXIg
YT17dGV4dDp0aGlzLnRleHQsdXJsOnRoaXMudXJsLHZpYTp0aGlzLnZpYSxyZWxh
dGVkOnRoaXMucmVsYXRlZCxjb3VudDp0aGlzLmNvdW50LGxhbmc6dGhpcy5sYW5n
LGNvdW50dXJsOnRoaXMuY291bnR1cmwsc2VhcmNobGluazp0aGlzLnNlYXJjaGxp
bmsscGxhY2VpZDp0aGlzLnBsYWNlaWQsb3JpZ2luYWxfcmVmZXJlcjpsb2NhdGlv
bi5ocmVmLGlkOnRoaXMuaWQsc2l6ZTp0aGlzLnNpemUsdHlwZTp0aGlzLnR5cGUs
c2NyZWVuX25hbWU6dGhpcy5zY3JlZW5fbmFtZSxidXR0b25faGFzaHRhZzp0aGlz
LmJ1dHRvbl9oYXNodGFnLGhhc2h0YWdzOnRoaXMuaGFzaHRhZ3MsYWxpZ246dGhp
cy5hbGlnbixkbnQ6dGhpcy5kbnQsXzorKG5ldyBEYXRlKX07cmV0dXJuIGIuY29t
cGFjdChhKSxkLmVuY29kZShhKX0saGVpZ2h0OmZ1bmN0aW9uKCl7cmV0dXJuIHRo
aXMuY291bnQ9PSJ2ZXJ0aWNhbCI/NjI6dGhpcy5zaXplPT0ibSI/MjA6Mjh9LHdp
ZHRoOmZ1bmN0aW9uKCl7dmFyIGE9e3Zlcjo4LGNudDoxNCxidG46MjQseGxjbnQ6
MTgseGxidG46Mzh9LGM9dGhpcy5jb3VudD09InZlcnRpY2FsIixkPXRoaXMudHlw
ZT09Imhhc2h0YWciPyJUd2VldCAle2hhc2h0YWd9Ijp0aGlzLnR5cGU9PSJtZW50
aW9uIj8iVHdlZXQgdG8gJXtuYW1lfSI6IlR3ZWV0IixlPXRoaXMuXyhkLHtuYW1l
OiJAIit0aGlzLnNjcmVlbl9uYW1lLGhhc2h0YWc6IiMiK3RoaXMuYnV0dG9uX2hh
c2h0YWd9KSxnPXRoaXMuXygiSyIpLGg9dGhpcy5fKCIxMDBLKyIpLGk9KGM/Ijg4
ODgiOiI4ODg4OCIpK2csaj0wLGs9MCxsPTAsbT0wLG49dGhpcy5zdHlsZXMuYmFz
ZSxvPW47cmV0dXJufmIuaW5kZXhPZihbImphIiwia28iXSx0aGlzLmxhbmcpP2kr
PXRoaXMuXygiMTBrIHVuaXQiKTppPWkubGVuZ3RoPmgubGVuZ3RoP2k6aCxjPyhv
PW4rdGhpcy5zdHlsZXMudmJ1YmJsZSxtPWEudmVyLGw9YS5idG4pOnRoaXMuc2l6
ZT09ImwiPyhuPW89bit0aGlzLnN0eWxlcy5sYXJnZSxsPWEueGxidG4sbT1hLnhs
Y250KToobD1hLmJ0bixtPWEuY250KSx0aGlzLmNvdW50IT0ibm9uZSImJihrPWYo
aSwiIixvKS53aWR0aCttKSxqPWYoZSwiIixuK3RoaXMuc3R5bGVzLmJ1dHRvbiku
d2lkdGgrbCxjP2o+az9qOms6dGhpcy5jYWxjdWxhdGVkV2lkdGg9aitrfSxyZW5k
ZXI6ZnVuY3Rpb24oYSl7dmFyIGI9YS5hc3NldFVybCgpKyIvd2lkZ2V0cy90d2Vl
dF9idXR0b24uMTM0MDE3OTY1OC5odG1sIyIrdGhpcy5wYXJhbWV0ZXJzKCk7dGhp
cy5jb3VudCYmKHRoaXMub3JpZ2luRWxlbWVudC5jbGFzc05hbWUrPSIgdHdpdHRl
ci1jb3VudC0iK3RoaXMuY291bnQpLHRoaXMuZWxlbWVudD10aGlzLmNyZWF0ZShi
LHRoaXMub3JpZ2luRWxlbWVudC5jbGFzc05hbWUsdGhpcy5kaW1lbnNpb25zKCks
e3RpdGxlOnRoaXMuXygiVHdpdHRlciBUd2VldCBCdXR0b24iKX0pfX0pLGEoe0Vt
YmVkZGFibGU6an0pfSl9KTsKcHJvdmlkZSgidGZ3L3dpZGdldC90d2VldGVtYmVk
IixmdW5jdGlvbihhKXt1c2luZygidXRpbC91dGlsIiwidGZ3L3dpZGdldC9iYXNl
IiwidGZ3L3dpZGdldC90d2VldCIsInV0aWwvdXJpIiwidXRpbC9pbnNlcnQiLCJ0
ZncvZGF0YSIsImkxOG4vaTE4biIsInV0aWwvcGFyYW1zIiwidXRpbC90d2VldHBh
cnNlciIsInRmdy93aWRnZXQvdHJhY2tpbmciLGZ1bmN0aW9uKGIsYyxkLGUsZixn
LGgsaSxqLGspe2Z1bmN0aW9uIHIoYSl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRWxl
bWVudCgibGluayIpO2IucmVsPSJzdHlsZXNoZWV0IixiLnR5cGU9InRleHQvY3Nz
IixiLmhyZWY9dHd0dHIud2lkZ2V0cy5jb25maWcuYXNzZXRVcmwoKSsiLyIrYSxk
b2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENo
aWxkKGIpfWZ1bmN0aW9uIHMoKXtpZihuKXJldHVybjtyKCJlbWJlZC9lbWJlZC5h
NzQ5NjY4M2VkZDdkYWM1YWI4NDdjYTJhNDRlMDgwYi5jc3MiKSxuPSEwfWZ1bmN0
aW9uIHQoYSxiKXt2YXIgYz17fTtjLnN0YXR1c19pZD1hLmlkX3N0cixjLmNvbnRl
eHQ9cCxrLmFkZFZhcihjLCJ2YXJpYW50IixsKSxrLmFkZFZhcihjLCJyZWZlcnJl
ciIsZG9jdW1lbnQubG9jYXRpb24uaHJlZiksay5hZGRQaXhlbChkb2N1bWVudC5i
b2R5LGMsInR3ZWV0ZW1iZWQiLCEwKSxiJiZhLl93anNfcmVwbHkmJihjLnN0YXR1
c19pZD1hLl93anNfcmVwbHkuaWRfc3RyLGMuY29udGV4dD1xLGsuYWRkUGl4ZWwo
ZG9jdW1lbnQuYm9keSxjLCJ0d2VldGVtYmVkIiwhMCkpfXZhciBsPSIxLjAiLG09
aS5mcm9tUXVlcnkoZG9jdW1lbnQubG9jYXRpb24pLG4sbz0vXihbMC05XSspKCA/
cHgpPyQvLHA9InN1YmplY3QiLHE9InRocmVhZCIsdT1mdW5jdGlvbihhKXt2YXIg
YyxkLGU9YS5nZXRBdHRyaWJ1dGUoIndpZHRoIil8fCIiO3RoaXMub3JpZ2luRWxl
bWVudD1hLHRoaXMuaWQ9dGhpcy5nZW5lcmF0ZUlkKCksYz10aGlzLnBhcmFtcygp
LHRoaXMuc2V0TGFuZ3VhZ2UoKSx0aGlzLnJlbGF0ZWQ9Yy5yZWxhdGVkfHxhLmdl
dEF0dHJpYnV0ZSgiZGF0YS1yZWxhdGVkIiksdGhpcy5wYXJ0bmVyPWMucGFydG5l
cnx8YS5nZXRBdHRyaWJ1dGUoImRhdGEtcGFydG5lciIpLHRoaXMuY2xhc3NOYW1l
cz1iLmZpbHRlcihhLmNsYXNzTmFtZS5zcGxpdCgiICIpLGZ1bmN0aW9uKGEpe3Jl
dHVybiBhIT0idHdpdHRlci10d2VldCJ9KSx0aGlzLmNsYXNzTmFtZXMucHVzaChb
InR3aXR0ZXItdHdlZXQtcmVuZGVyZWQiXSksdGhpcy5zdHlsZUF0dHI9W10sdGhp
cy5zdHlsZUF0dHIucHVzaChhLmdldEF0dHJpYnV0ZSgic3R5bGUiKXx8IiIpLG8u
dGVzdChlKT90aGlzLmV4cGxpY2l0V2lkdGg9UmVnRXhwLiQxOmEuY2xhc3NOYW1l
Lm1hdGNoKC8oPzpcYnxeKXR3LWFsaWduLVtscl0vaSkmJih0aGlzLmV4cGxpY2l0
V2lkdGg9IjM1MCIpLHRoaXMuZXhwbGljaXRXaWR0aCYmdGhpcy5zdHlsZUF0dHIu
cHVzaCgid2lkdGg6Iit0aGlzLmV4cGxpY2l0V2lkdGgrInB4IWltcG9ydGFudCIp
LHRoaXMuc2hvd1RocmVhZD0hfmIuaW5kZXhPZih0aGlzLmNsYXNzTmFtZXMsInR3
LWhpZGUtdGhyZWFkIiksdGhpcy5zaG93TWVkaWE9IX5iLmluZGV4T2YodGhpcy5j
bGFzc05hbWVzLCJ0dy1oaWRlLW1lZGlhIiksdGhpcy5kYXRhPWoucGFyc2VUd2Vl
dCh0aGlzLm9yaWdpbkVsZW1lbnQpLHRoaXMuaW5SZXBseVRvPWEuZ2V0QXR0cmli
dXRlKCJkYXRhLWluLXJlcGx5LXRvIil8fCIifTt1LnByb3RvdHlwZT1uZXcgYy5C
YXNlLGIuYXVnKHUucHJvdG90eXBlLHtjcmVhdGU6ZnVuY3Rpb24oYSxiKXt2YXIg
Yz10aGlzLGQsZT0hIWEuX3dqc19zdHViX2RhdGE7cmV0dXJuIWUmJnQoYSxjLnNo
b3dUaHJlYWQpLHVzaW5nKCJsaWIvdHd0IixmdW5jdGlvbihnKXtnKGMubGFuZyxm
dW5jdGlvbihnKXt2YXIgaD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxp
PWcuYXV0b0Zvcm1hdChjLmV4cGxpY2l0V2lkdGh8fGMuZWxlbWVudCksaj1nKGEs
e2Zvcm1hdDppLHBvcHVwV2ViSW50ZW50czohMSx0d2VldEVsZW1lbnQ6ImJsb2Nr
cXVvdGUiLHNob3dNZWRpYTpjLnNob3dNZWRpYSxzaG93RXJyb3JzOiExLHNob3dG
b2xsb3dCdXR0b246IWUscmVuZGVyQWN0aW9uczohZSxwcm9kdWN0OiJ0d2VldGVt
YmVkIixwYXJ0bmVyOmMucGFydG5lcixyZWxhdGVkOmMucmVsYXRlZH0pLGs9Jzxk
aXYgaWQ9Int7aWR9fSIgY2xhc3M9Int7Y2xhc3NOYW1lc319IiBsYW5nPSJ7e2xh
bmd9fSIgc3R5bGU9Int7c3R5bGV9fSI+e3t0d3R9fTwvZGl2PicsbD17aWQ6Yy5p
ZCxjbGFzc05hbWVzOmJ8fCIiLHN0eWxlOmMuc3R5bGVBdHRyLmpvaW4oIjsiKSxs
YW5nOmMubGFuZyx0d3Q6Yy5kYXRhLl93anNfcmVwbHk/ai5pblJlcGx5VG8oYS5f
d2pzX3JlcGx5KS5odG1sKCk6ai5odG1sKCl9O2guaW5uZXJIVE1MPWMucmluZ28o
ayxsKSxkPWYoaC5maXJzdENoaWxkLGMuZWxlbWVudCl9KX0pLGR9LHJlbmRlcjpm
dW5jdGlvbihhKXt2YXIgYj10aGlzLGMsZDtpZighYi5kYXRhKXJldHVybjtzKCks
dXNpbmcoImxpYi90d3QiLGZ1bmN0aW9uKGEpe2EoYi5sYW5nLGZ1bmN0aW9uKCl7
Yz1iLmNsYXNzTmFtZXMuam9pbigiICIpLGIuZGF0YS5fd2pzX3N0dWJfZGF0YT0h
MCxiLmVsZW1lbnQ9Yi5vcmlnaW5FbGVtZW50LGIuZWxlbWVudD1iLmNyZWF0ZShi
LmRhdGEsYyksZD1bYi5kYXRhLmlkX3N0cl0sYi5pblJlcGx5VG8mJmIuc2hvd1Ro
cmVhZCYmZC5wdXNoKGIuaW5SZXBseVRvKSxnLnN0YXR1cyh7aWQ6ZCxjb21wbGV0
ZTpmdW5jdGlvbihhKXt2YXIgZD1hWzBdLGU9YVsxXTtpZihkLmVycm9yKXJldHVy
bjtiLmRhdGE9ZDtpZihiLnNob3dUaHJlYWQmJmQuaW5fcmVwbHlfdG9fc3RhdHVz
X2lkX3N0ciYmKCFlfHxkLmluX3JlcGx5X3RvX3N0YXR1c19pZF9zdHIhPWUuaWRf
c3RyKSl7Zy5zdGF0dXMoe2lkOmQuaW5fcmVwbHlfdG9fc3RhdHVzX2lkX3N0cixj
b21wbGV0ZTpmdW5jdGlvbihhKXthJiYhYS5lcnJvciYmKGIuZGF0YS5fd2pzX3Jl
cGx5PWEpLGIuZWxlbWVudD1iLmNyZWF0ZShiLmRhdGEsYyl9fSk7cmV0dXJufWQu
aW5fcmVwbHlfdG9fc3RhdHVzX2lkX3N0ciYmZSYmIWUuZXJyb3ImJihiLmRhdGEu
X3dqc19yZXBseT1lKSxiLmVsZW1lbnQ9Yi5jcmVhdGUoYi5kYXRhLGMpfX0pfSl9
KX19KSxhKHtFbWJlZGRhYmxlOnV9KX0pfSk7CnByb3ZpZGUoInRmdy93aWRnZXQv
Zm9sbG93IixmdW5jdGlvbihhKXt1c2luZygidXRpbC91dGlsIiwidGZ3L3dpZGdl
dC9iYXNlIiwidXRpbC9xdWVyeXN0cmluZyIsInV0aWwvdXJpIiwiZG9tL3RleHRz
aXplIixmdW5jdGlvbihiLGMsZCxlLGYpe3ZhciBnPWZ1bmN0aW9uKGEpe3RoaXMu
b3JpZ2luRWxlbWVudD1hO3ZhciBiPXRoaXMucGFyYW1zKCksYz1iLnNpemV8fHRo
aXMuZGF0YUF0dHIoInNpemUiKSxkPWIuc2hvd19zY3JlZW5fbmFtZXx8dGhpcy5k
YXRhQXR0cigic2hvdy1zY3JlZW4tbmFtZSIpLGU9Yi5zaG93X2NvdW50fHx0aGlz
LmRhdGFBdHRyKCJzaG93LWNvdW50Iik7dGhpcy5pZD10aGlzLmdlbmVyYXRlSWQo
KSx0aGlzLnNldExhbmd1YWdlKCksdGhpcy5zaG93U2NyZWVuTmFtZT1kIT0iZmFs
c2UiLHRoaXMuc2hvd0NvdW50PWUhPSJmYWxzZSIsdGhpcy5leHBsaWNpdFdpZHRo
PWIud2lkdGh8fHRoaXMuZGF0YUF0dHIoIndpZHRoIil8fCIiLHRoaXMuc2NyZWVu
TmFtZT10aGlzLnNjcmVlbk5hbWVGcm9tSHJlZigpLHRoaXMucHJldmlldz1iLnBy
ZXZpZXd8fHRoaXMuZGF0YUF0dHIoInByZXZpZXciKXx8IiIsdGhpcy5hbGlnbj1i
LmFsaWdufHx0aGlzLmRhdGFBdHRyKCJhbGlnbiIpfHwiIix0aGlzLmRudD1iLmRu
dHx8dGhpcy5kYXRhQXR0cigiZG50Iil8fCIiLHRoaXMuc2l6ZT1jPT0ibGFyZ2Ui
PyJsIjoibSJ9O2cucHJvdG90eXBlPW5ldyBjLkJhc2UsYi5hdWcoZy5wcm90b3R5
cGUse3BhcmFtZXRlcnM6ZnVuY3Rpb24oKXt2YXIgYT17c2NyZWVuX25hbWU6dGhp
cy5zY3JlZW5OYW1lLGxhbmc6dGhpcy5sYW5nLHNob3dfY291bnQ6dGhpcy5zaG93
Q291bnQsc2hvd19zY3JlZW5fbmFtZTp0aGlzLnNob3dTY3JlZW5OYW1lLGFsaWdu
OnRoaXMuYWxpZ24saWQ6dGhpcy5pZCxwcmV2aWV3OnRoaXMucHJldmlldyxzaXpl
OnRoaXMuc2l6ZSxkbnQ6dGhpcy5kbnQsXzorKG5ldyBEYXRlKX07cmV0dXJuIGIu
Y29tcGFjdChhKSxkLmVuY29kZShhKX0sc2NyZWVuTmFtZUZyb21IcmVmOmZ1bmN0
aW9uKCl7dmFyIGE9dGhpcy5vcmlnaW5FbGVtZW50LmhyZWY7cmV0dXJuIGMuVFdJ
VFRFUl9QUk9GSUxFX1VSTC50ZXN0KGEpLFJlZ0V4cC4kMX0scmVuZGVyOmZ1bmN0
aW9uKGEpe2lmKCF0aGlzLnNjcmVlbk5hbWUpcmV0dXJuO3ZhciBiPWEuYXNzZXRV
cmwoKSsiL3dpZGdldHMvZm9sbG93X2J1dHRvbi4xMzQwMTc5NjU4Lmh0bWwjIit0
aGlzLnBhcmFtZXRlcnMoKTt0aGlzLmVsZW1lbnQ9dGhpcy5jcmVhdGUoYiwidHdp
dHRlci1mb2xsb3ctYnV0dG9uIix0aGlzLmRpbWVuc2lvbnMoKSx7dGl0bGU6dGhp
cy5fKCJUd2l0dGVyIEZvbGxvdyBCdXR0b24iKX0pfSx3aWR0aDpmdW5jdGlvbigp
e2lmKHRoaXMuY2FsY3VsYXRlZFdpZHRoKXJldHVybiB0aGlzLmNhbGN1bGF0ZWRX
aWR0aDtpZih0aGlzLmV4cGxpY2l0V2lkdGgpcmV0dXJuIHRoaXMuZXhwbGljaXRX
aWR0aDt2YXIgYT17Y250OjEzLGJ0bjoyNCx4bGNudDoyMix4bGJ0bjozOH0sYz10
aGlzLnNob3dTY3JlZW5OYW1lPyJGb2xsb3cgJXtzY3JlZW5fbmFtZX0iOiJGb2xs
b3ciLGQ9dGhpcy5fKGMse3NjcmVlbl9uYW1lOiJAIit0aGlzLnNjcmVlbk5hbWV9
KSxlPX5iLmluZGV4T2YoWyJqYSIsImtvIl0sdGhpcy5sYW5nKT90aGlzLl8oIjEw
ayB1bml0Iik6dGhpcy5fKCJNIiksZz10aGlzLl8oIiV7Zm9sbG93ZXJzX2NvdW50
fSBmb2xsb3dlcnMiLHtmb2xsb3dlcnNfY291bnQ6Ijg4ODg4IitlfSksaD0wLGk9
MCxqPXRoaXMuc3R5bGVzLmJhc2U7cmV0dXJuIHRoaXMuc2l6ZT09ImwiPyhqKz10
aGlzLnN0eWxlcy5sYXJnZSxidXR0b25QYWRkaW5nPWEueGxidG4sY291bnRQYWRk
aW5nPWEueGxjbnQpOihidXR0b25QYWRkaW5nPWEuYnRuLGNvdW50UGFkZGluZz1h
LmNudCksdGhpcy5zaG93Q291bnQmJihpPWYoZywiIixqKS53aWR0aCtjb3VudFBh
ZGRpbmcpLGg9ZihkLCIiLGordGhpcy5zdHlsZXMuYnV0dG9uKS53aWR0aCtidXR0
b25QYWRkaW5nLHRoaXMuY2FsY3VsYXRlZFdpZHRoPWgraX19KSxhKHtFbWJlZGRh
YmxlOmd9KX0pfSk7CiFmdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7cmV0dXJuKGF8
fCEvXmh0dHBcOiQvLnRlc3Qod2luZG93LmxvY2F0aW9uLnByb3RvY29sKSkmJiF0
d3R0ci5pZ25vcmVTU0w/Imh0dHBzIjoiaHR0cCJ9d2luZG93LnR3dHRyPXdpbmRv
dy50d3R0cnx8e30sdHd0dHIuaG9zdD10d3R0ci5ob3N0fHwicGxhdGZvcm0udHdp
dHRlci5jb20iO2lmKHR3dHRyLndpZGdldHMpcmV0dXJuIHR3dHRyLndpZGdldHMu
bG9hZGVkJiZ0d3R0ci53aWRnZXRzLmxvYWQoKSwhMTtpZih0d3R0ci5pbml0KXJl
dHVybiExO3R3dHRyLmluaXQ9ITAsIWZ1bmN0aW9uKCl7dHd0dHIuX2U9dHd0dHIu
X2V8fFtdLHR3dHRyLnJlYWR5PXR3dHRyLnJlYWR5fHxmdW5jdGlvbihhKXt0d3R0
ci53aWRnZXRzJiZ0d3R0ci53aWRnZXRzLmxvYWRlZD9hKHR3dHRyKTp0d3R0ci5f
ZS5wdXNoKGEpfX0oKSx1c2luZy5wYXRoLmxlbmd0aHx8KHVzaW5nLnBhdGg9YSgp
KyI6Ly8iK3R3dHRyLmhvc3QrIi9qcyIpLHR3dHRyLmlnbm9yZVNTTD10d3R0ci5p
Z25vcmVTU0x8fCExO3ZhciBiPVtdO3R3dHRyLmV2ZW50cz17YmluZDpmdW5jdGlv
bihhLGMpe3JldHVybiBiLnB1c2goW2EsY10pfX0sdXNpbmcoInV0aWwvZG9tcmVh
ZHkiLGZ1bmN0aW9uKGMpe2MoZnVuY3Rpb24oKXt1c2luZygidXRpbC91dGlsIiwi
dGZ3L3dpZGdldC9mb2xsb3ciLCJ0Zncvd2lkZ2V0L3R3ZWV0IiwidGZ3L3dpZGdl
dC90d2VldGVtYmVkIiwidGZ3L3dpZGdldC9pbnRlbnQiLCJ1dGlsL2V2ZW50cyIs
InRmdy93aWRnZXQvYmFzZSIsZnVuY3Rpb24oYyxkLGUsZixnLGgsaSl7ZnVuY3Rp
b24gbCgpe3VzaW5nKCJ0Zncvd2lkZ2V0L2h1YmNsaWVudCIsZnVuY3Rpb24oYSl7
dHd0dHIuZXZlbnRzLmh1Yj1hLmluaXQoaiksYS5pbml0KGosITApfSl9dmFyIGo9
e3dpZGdldHM6eyJhLnR3aXR0ZXItc2hhcmUtYnV0dG9uIjplLkVtYmVkZGFibGUs
ImEudHdpdHRlci1tZW50aW9uLWJ1dHRvbiI6ZS5FbWJlZGRhYmxlLCJhLnR3aXR0
ZXItaGFzaHRhZy1idXR0b24iOmUuRW1iZWRkYWJsZSwiYS50d2l0dGVyLWZvbGxv
dy1idXR0b24iOmQuRW1iZWRkYWJsZSwiYmxvY2txdW90ZS50d2l0dGVyLXR3ZWV0
IjpmLkVtYmVkZGFibGUsYm9keTpnLkxpc3RlbmVyfX0saz10d3R0ci5ldmVudHMm
JnR3dHRyLmV2ZW50cy5odWI/dHd0dHIuZXZlbnRzOnt9O3R3dHRyLmV2ZW50cz1j
LmF1ZyhrLGguRW1pdHRlciksai5hc3NldFVybD1mdW5jdGlvbihiKXt2YXIgYz10
d3R0ci5ob3N0O3JldHVybiBhKGIpPT0iaHR0cHMiJiZ0d3R0ci5zZWN1cmVIb3N0
JiYoYz10d3R0ci5zZWN1cmVIb3N0KSxhKGIpKyI6Ly8iK2N9LHR3dHRyLmV2ZW50
cy5vbGRiaW5kPXR3dHRyLmV2ZW50cy5iaW5kLHR3dHRyLmV2ZW50cy5iaW5kPWZ1
bmN0aW9uKGEsYil7bCgpLHRoaXMuYmluZD10aGlzLm9sZGJpbmQsdGhpcy5iaW5k
KGEsYil9O2Zvcih2YXIgbT0wLG47bj1iW21dO20rKyl0d3R0ci5ldmVudHMuYmlu
ZChuWzBdLG5bMV0pO2ZvcihtPTA7bj10d3R0ci5fZVttXTttKyspbih0d3R0cik7
dHd0dHIucmVhZHk9ZnVuY3Rpb24oYSl7YSh0d3R0cil9LHR3dHRyLndpZGdldHM9
e2xvYWQ6ZnVuY3Rpb24oKXtpLmluaXQoaiksaS5lbWJlZCgpLHR3dHRyLndpZGdl
dHMubG9hZGVkPSEwfSxjb25maWc6an0sdHd0dHIud2lkZ2V0cy5sb2FkKCl9KX0p
fSl9KCl9KTs=

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=print.htm
Content-Type: text/html; charset=iso-8859-1; name=print.htm
Content-Location: http://tutorial.symblog.co.uk/_static/print.css
Content-Transfer-Encoding: 8bit

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL /_static/print.css was not found on this server.</p>
<hr>
<address>Apache/2.2.17 (Fedora) Server at tutorial.symblog.co.uk Port 80</address>
</body></html>

------------a1OFvq6oUVR8Luo70plCnW
Content-Disposition: inline; filename=theme_extras.htm
Content-Type: text/html; charset=iso-8859-1; name=theme_extras.htm
Content-Location: http://tutorial.symblog.co.uk/_static/theme_extras.js
Content-Transfer-Encoding: 8bit

<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>404 Not Found</title>
</head><body>
<h1>Not Found</h1>
<p>The requested URL /_static/theme_extras.js was not found on this server.</p>
<hr>
<address>Apache/2.2.17 (Fedora) Server at tutorial.symblog.co.uk Port 80</address>
</body></html>

------------a1OFvq6oUVR8Luo70plCnW--
