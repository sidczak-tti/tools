6. Installation of the Admin Bundle

/* WARIANT1: AUTOMATYCZNE POD£¥CZENIE BIBLIOTEK - dla tego wariatu trzeba zaistalowaæ "git"
****************************************************/

Pobieramy git ze strony:

	http://git-scm.com/downloads
		lub
	http://code.google.com/p/msysgit/

Dokumentacja:
http://git-scm.com/book/en/Getting-Started-First-Time-Git-Setup

Instalujemy i uruchamiamy konsole.


	C:/sf2_tutorials/jobeet2/deps

	Do pliku deps dodajemy nastêpuj¹ce wpisy:
 
	[SonataCacheBundle]
	    git=http://github.com/sonata-project/SonataCacheBundle.git
	    target=/bundles/Sonata/CacheBundle
	    version=origin/2.0
 
	[SonataBlockBundle]
	    git=http://github.com/sonata-project/SonataBlockBundle.git
	    target=/bundles/Sonata/BlockBundle
	    version=origin/2.0
 
	[SonatajQueryBundle]
	    git=http://github.com/sonata-project/SonatajQueryBundle.git
	    target=/bundles/Sonata/jQueryBundle
 
	[KnpMenu]
	    git=https://github.com/KnpLabs/KnpMenu.git
	    version=v1.1.2
 
	[KnpMenuBundle]
	    git=https://github.com/KnpLabs/KnpMenuBundle.git
	    target=bundles/Knp/Bundle/MenuBundle
	    version=v1.1.0
 
	[Exporter]
	    git=http://github.com/sonata-project/exporter.git
	    target=/exporter
 
	[SonataDoctrineORMAdminBundle]
	    git=http://github.com/sonata-project/SonataDoctrineORMAdminBundle.git
	    target=/bundles/Sonata/DoctrineORMAdminBundle
	    version=origin/2.0
 
	[SonataAdminBundle]
	    git=git://github.com/sonata-project/SonataAdminBundle.git
	    target=/bundles/Sonata/AdminBundle
	    version=origin/2.0


[ Uwaga !!! Aby zaktualizowaæ symfony do najnowdzej wersji nale¿y dokonaæ zmian w plikach deps i deps.lock ]
[ przyk³ad: https://raw.github.com/symfony/symfony-standard/v2.0.15/deps i https://raw.github.com/symfony/symfony-standard/v2.0.15/deps.lock ]

Update wersji biblioteki
php bin/vendors install --reinstall

php bin/vendors install

Rejestracja bibliotek w projekcie

/jobeet2/app/autoload.php
//__DIR__ = "C:/sf2_tutorials/jobeet2/app" 

// ...
$loader->registerNamespaces(array(
    // ...
    'Sonata' => __DIR__.'/../vendor/bundles',
    'Exporter' => __DIR__.'/../vendor/exporter/lib',
    'Knp\Bundle' => __DIR__.'/../vendor/bundles',
    'Knp\Menu' => __DIR__.'/../vendor/KnpMenu/src',
    // ...
));

/jobeet2/app/AppKernel.php

// ...
public function registerBundles()
{
    $bundles = array(
        // ...
        new Sonata\AdminBundle\SonataAdminBundle(),
        new Sonata\BlockBundle\SonataBlockBundle(),
        new Sonata\CacheBundle\SonataCacheBundle(),
        new Sonata\jQueryBundle\SonatajQueryBundle(),
        new Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle(),
        new Knp\Bundle\MenuBundle\KnpMenuBundle(),
        // ...
    );
    // ...
}


W pliku app/config/config.yml na koñcu dodajemy

# app/config/config.yml
sonata_admin:
    title: Jobeet Admin
 
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
 
        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

Sprawdzamy czy mamay w pliku odkomentowane:

framework:
    translator:      { fallback: %locale% }


Instalujemy bundles Admin:

php app/console assets:install web

Czyœcimy cache:

php app/console cache:clear --env=dev
php app/console cache:clear --env=prod


Dodajemy routing;

# app/config/routing.yml
 
admin:
    resource: '@SonataAdminBundle/Resources/config/routing/sonata_admin.xml'
    prefix: /admin
 
_sonata_admin:
    resource: .
    type: sonata_admin
    prefix: /admin
 
# ...

Dostêp do panelu admina pod adresem

http://jobeet.local/app_dev.php/admin/dashboard


Dodanie klas:

The CRUD Controller

// src/Ens/JobeetBundle/Controller/CategoryAdminController.php
namespace Ens\JobeetBundle\Controller;
 
use Sonata\AdminBundle\Controller\CRUDController as Controller;
 
class CategoryAdminController extends Controller
{
 
}

// src/Ens/JobeetBundle/Controller/JobAdminController.php
namespace Ens\JobeetBundle\Controller;
 
use Sonata\AdminBundle\Controller\CRUDController as Controller;
 
class JobAdminController extends Controller
{
 
}


Creating the Admin class

// src/Ens/JobeetBundle/Admin/CategoryAdmin.php
 
namespace Ens\JobeetBundle\Admin;
 
use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Validator\ErrorElement;
use Sonata\AdminBundle\Form\FormMapper;
 
class CategoryAdmin extends Admin
{
}


// src/Ens/JobeetBundle/Admin/JobAdmin.php
 
namespace Ens\JobeetBundle\Admin;
 
use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Validator\ErrorElement;
use Sonata\AdminBundle\Form\FormMapper;
 
class JobAdmin extends Admin
{
}


Dodanie klas od amina do pliku konfiguracyjnego services.yml

# src/Ens/JobeetBundle/Resources/config/services.yml
 
services:
    ens.jobeet.admin.category:
        class: Ens\JobeetBundle\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: jobeet, label: Categories }
        arguments: [null, Ens\JobeetBundle\Entity\Category, EnsJobeetBundle:CategoryAdmin]
 
    ens.jobeet.admin.job:
        class: Ens\JobeetBundle\Admin\JobAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: jobeet, label: Jobs }
        arguments: [null, Ens\JobeetBundle\Entity\Job, EnsJobeetBundle:JobAdmin]

Panel admin:

http://jobeet2.localhost/app_dev.php/admin/dashboard

Configuration of Admin classes - konfiguracja klas admina

// src Ens/JobeetBundle/Admin/CategoryAdmin.php
namespace Ens\JobeetBundle\Admin;
 
use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Validator\ErrorElement;
use Sonata\AdminBundle\Form\FormMapper;
 
class CategoryAdmin extends Admin
{
    // setup the default sort column and order
    protected $datagridValues = array(
        '_sort_order' => 'ASC',
        '_sort_by' => 'name'
    );
 
    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper
            ->add('name')
            ->add('slug')
        ;
    }
 
    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('name')
        ;
    }
 
    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
            ->addIdentifier('name')
            ->add('slug')
        ;
    }
}


// src Ens/JobeetBundle/Admin/JobAdmin.php
namespace Ens\JobeetBundle\Admin;
 
use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Validator\ErrorElement;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Show\ShowMapper;
use Ens\JobeetBundle\Entity\Job;
 
class JobAdmin extends Admin
{
    // setup the defaut sort column and order
    protected $datagridValues = array(
        '_sort_order' => 'DESC',
        '_sort_by' => 'created_at'
    );
 
    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper
            ->add('category')
            ->add('type', 'choice', array('choices' => Job::getTypes(), 'expanded' => true))
            ->add('company')
            ->add('file', 'file', array('label' => 'Company logo', 'required' => false))
            ->add('url')
            ->add('position')
            ->add('location')
            ->add('description')
            ->add('how_to_apply')
            ->add('is_public')
            ->add('email')
            ->add('is_activated')
        ;
    }
 
    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
            ->add('category')
            ->add('company')
            ->add('position')
            ->add('description')
            ->add('is_activated')
            ->add('is_public')
            ->add('email')
            ->add('expires_at')
        ;
    }
 
    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
            ->addIdentifier('company')
            ->add('position')
            ->add('location')
            ->add('url')
            ->add('is_activated')
            ->add('email')
            ->add('category')
            ->add('expires_at')
            ->add('_action', 'actions', array(
                'actions' => array(
                    'view' => array(),
                    'edit' => array(),
                    'delete' => array(),
                )
            ))
        ;
    }
 
    protected function configureShowField(ShowMapper $showMapper)
    {
        $showMapper
            ->add('category')
            ->add('type')
            ->add('company')
            ->add('webPath', 'string', array('template' => 'EnsJobeetBundle:JobAdmin:list_image.html.twig'))
            ->add('url')
            ->add('position')
            ->add('location')
            ->add('description')
            ->add('how_to_apply')
            ->add('is_public')
            ->add('is_activated')
            ->add('token')
            ->add('email')
            ->add('expires_at')
        ;
    }
}

Dodanie Extend do rozwijalnej listy wyboru ofert:

// src/Ens/JobeetBundle/Admin/JobAdmin.php
// ...
 
public function getBatchActions()
{
    // retrieve the default (currently only the delete action) actions
    $actions = parent::getBatchActions();
 
    // check user permissions
    if($this->hasRoute('edit') && $this->isGranted('EDIT') && $this->hasRoute('delete') && $this->isGranted('DELETE')) {
        $actions['extend'] = array(
            'label'            => 'Extend',
            'ask_confirmation' => true // If true, a confirmation will be asked before performing the action
        );
 
    }
 
    return $actions;
}

Dodanie akcji dla Extend
// src/Ens/JobeetBundle/Controller/JobAdminController.php
namespace Ens\JobeetBundle\Controller;
 
use Sonata\AdminBundle\Controller\CRUDController as Controller;
use Sonata\DoctrineORMAdminBundle\Datagrid\ProxyQuery as ProxyQueryInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
 
class JobAdminController extends Controller
{
    public function batchActionExtend(ProxyQueryInterface $selectedModelQuery)
    {
        if ($this->admin->isGranted('EDIT') === false || $this->admin->isGranted('DELETE') === false)
        {
            throw new AccessDeniedException();
        }
 
        $request = $this->get('request');
        $modelManager = $this->admin->getModelManager();
 
        $selectedModels = $selectedModelQuery->execute();
 
        try {
            foreach ($selectedModels as $selectedModel) {
                $selectedModel->extend();
                $modelManager->update($selectedModel);
            }
        } catch (\Exception $e) {
            $this->get('session')->setFlash('sonata_flash_error', $e->getMessage());
 
            return new RedirectResponse($this->admin->generateUrl('list',$this->admin->getFilterParameters()));
        }
 
        $this->get('session')->setFlash('sonata_flash_success',  sprintf('The selected jobs validity has been extended until %s.', date('m/d/Y', time() + 86400 * 30)));
 
        return new RedirectResponse($this->admin->generateUrl('list',$this->admin->getFilterParameters()));
    }
}

Dodanie Delete never activated jobs do rozwijalnej listy wyboru ofert:

// src/Ens/JobeetBundle/Admin/JobAdmin.php
// ...
 
public function getBatchActions()
{
    // retrieve the default (currently only the delete action) actions
    $actions = parent::getBatchActions();
 
    // check user permissions
    if($this->hasRoute('edit') && $this->isGranted('EDIT') && $this->hasRoute('delete') && $this->isGranted('DELETE')){
        $actions['extend'] = array(
            'label'            => 'Extend',
            'ask_confirmation' => true // If true, a confirmation will be asked before performing the action
        );
 
        $actions['deleteNeverActivated'] = array(
            'label'            => 'Delete never activated jobs',
            'ask_confirmation' => true // If true, a confirmation will be asked before performing the action
        );
    }
 
    return $actions;
}

Dodanie akcji dla Delete never activated jobs

// src/Ens/JobeetBundle/Controller/JobAdminController.php
// ...
 
public function batchActionDeleteNeverActivatedIsRelevant()
{
    return true;
}
 
public function batchActionDeleteNeverActivated()
{
    if ($this->admin->isGranted('EDIT') === false || $this->admin->isGranted('DELETE') === false) {
        throw new AccessDeniedException();
    }
 
    $em = $this->getDoctrine()->getEntityManager();
    $nb = $em->getRepository('EnsJobeetBundle:Job')->cleanup(60);
 
    if ($nb) {
        $this->get('session')->setFlash('sonata_flash_success',  sprintf('%d never activated jobs have been deleted successfully.', $nb));
    } else {
        $this->get('session')->setFlash('sonata_flash_info',  'No job to delete.');
    }
 
    return new RedirectResponse($this->admin->generateUrl('list',$this->admin->getFilterParameters()));
}






















